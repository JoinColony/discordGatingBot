<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2246" onload="init(evt)" viewBox="0 0 1200 2246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2246" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2229.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2229.00"> </text><svg id="frames" x="10" width="1180" total_samples="47"><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 8.51%)</title><rect x="0.0000%" y="1653" width="8.5106%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1663.50">&lt;pprof::back..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 8.51%)</title><rect x="0.0000%" y="1637" width="8.5106%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1647.50">backtrace::b..</text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 8.51%)</title><rect x="0.0000%" y="1621" width="8.5106%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1631.50">backtrace::b..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (2 samples, 4.26%)</title><rect x="8.5106%" y="1653" width="4.2553%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="2"/><text x="8.7606%" y="1663.50">alloc..</text></g><g><title>core::ptr::write (2 samples, 4.26%)</title><rect x="8.5106%" y="1637" width="4.2553%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="2"/><text x="8.7606%" y="1647.50">core:..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 4.26%)</title><rect x="8.5106%" y="1621" width="4.2553%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="2"/><text x="8.7606%" y="1631.50">&lt;ppro..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 4.26%)</title><rect x="8.5106%" y="1605" width="4.2553%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="2"/><text x="8.7606%" y="1615.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 4.26%)</title><rect x="8.5106%" y="1589" width="4.2553%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="2"/><text x="8.7606%" y="1599.50">backt..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (10 samples, 21.28%)</title><rect x="0.0000%" y="1669" width="21.2766%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1679.50">&lt;core::iter::adapters::take::Take&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (4 samples, 8.51%)</title><rect x="12.7660%" y="1653" width="8.5106%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="4"/><text x="13.0160%" y="1663.50">core::num::&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 8.51%)</title><rect x="12.7660%" y="1637" width="8.5106%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="4"/><text x="13.0160%" y="1647.50">&lt;pprof::back..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 8.51%)</title><rect x="12.7660%" y="1621" width="8.5106%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="4"/><text x="13.0160%" y="1631.50">backtrace::b..</text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 8.51%)</title><rect x="12.7660%" y="1605" width="8.5106%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="4"/><text x="13.0160%" y="1615.50">backtrace::b..</text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 34.04%)</title><rect x="0.0000%" y="1797" width="34.0426%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1807.50">&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::der..</text></g><g><title>core::ops::function::Fn::call (16 samples, 34.04%)</title><rect x="0.0000%" y="1781" width="34.0426%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1791.50">core::ops::function::Fn::call</text></g><g><title>&lt;sled::metrics::Metrics as core::default::Default&gt;::default (16 samples, 34.04%)</title><rect x="0.0000%" y="1765" width="34.0426%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1775.50">&lt;sled::metrics::Metrics as core::default::Default&gt;::def..</text></g><g><title>&lt;sled::histogram::Histogram as core::default::Default&gt;::default (16 samples, 34.04%)</title><rect x="0.0000%" y="1749" width="34.0426%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1759.50">&lt;sled::histogram::Histogram as core::default::Default&gt;:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (16 samples, 34.04%)</title><rect x="0.0000%" y="1733" width="34.0426%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1743.50">alloc::vec::Vec&lt;T,A&gt;::resize_with</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (16 samples, 34.04%)</title><rect x="0.0000%" y="1717" width="34.0426%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1727.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (16 samples, 34.04%)</title><rect x="0.0000%" y="1701" width="34.0426%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1711.50">&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::tra..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 34.04%)</title><rect x="0.0000%" y="1685" width="34.0426%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1695.50">&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as cor..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (6 samples, 12.77%)</title><rect x="21.2766%" y="1669" width="12.7660%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="6"/><text x="21.5266%" y="1679.50">&lt;pprof::backtrace::..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (6 samples, 12.77%)</title><rect x="21.2766%" y="1653" width="12.7660%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="6"/><text x="21.5266%" y="1663.50">backtrace::backtrac..</text></g><g><title>backtrace::backtrace::libunwind::trace (6 samples, 12.77%)</title><rect x="21.2766%" y="1637" width="12.7660%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="6"/><text x="21.5266%" y="1647.50">backtrace::backtrac..</text></g><g><title>discord_gating_bot::command::execute (17 samples, 36.17%)</title><rect x="0.0000%" y="1893" width="36.1702%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1903.50">discord_gating_bot::command::execute</text></g><g><title>discord_gating_bot::controller::Controller&lt;S&gt;::new (17 samples, 36.17%)</title><rect x="0.0000%" y="1877" width="36.1702%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1887.50">discord_gating_bot::controller::Controller&lt;S&gt;::new</text></g><g><title>&lt;discord_gating_bot::storage::SledEncryptedStorage as discord_gating_bot::storage::Storage&gt;::new (17 samples, 36.17%)</title><rect x="0.0000%" y="1861" width="36.1702%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1871.50">&lt;discord_gating_bot::storage::SledEncryptedStorage as disco..</text></g><g><title>sled::db::open (17 samples, 36.17%)</title><rect x="0.0000%" y="1845" width="36.1702%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1855.50">sled::db::open</text></g><g><title>sled::config::Config::open (17 samples, 36.17%)</title><rect x="0.0000%" y="1829" width="36.1702%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1839.50">sled::config::Config::open</text></g><g><title>sled::db::Db::start_inner (17 samples, 36.17%)</title><rect x="0.0000%" y="1813" width="36.1702%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1823.50">sled::db::Db::start_inner</text></g><g><title>sled::context::Context::start (1 samples, 2.13%)</title><rect x="34.0426%" y="1797" width="2.1277%" height="15" fill="rgb(209,103,24)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1807.50">s..</text></g><g><title>sled::pagecache::PageCache::start (1 samples, 2.13%)</title><rect x="34.0426%" y="1781" width="2.1277%" height="15" fill="rgb(229,88,8)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1791.50">s..</text></g><g><title>sled::pagecache::snapshot::read_snapshot_or_default (1 samples, 2.13%)</title><rect x="34.0426%" y="1765" width="2.1277%" height="15" fill="rgb(213,181,19)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1775.50">s..</text></g><g><title>sled::pagecache::snapshot::advance_snapshot (1 samples, 2.13%)</title><rect x="34.0426%" y="1749" width="2.1277%" height="15" fill="rgb(254,191,54)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1759.50">s..</text></g><g><title>&lt;sled::pagecache::iterator::LogIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="34.0426%" y="1733" width="2.1277%" height="15" fill="rgb(241,83,37)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1743.50">&lt;..</text></g><g><title>sled::pagecache::logger::read_message (1 samples, 2.13%)</title><rect x="34.0426%" y="1717" width="2.1277%" height="15" fill="rgb(233,36,39)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1727.50">s..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="34.0426%" y="1701" width="2.1277%" height="15" fill="rgb(226,3,54)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1711.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="34.0426%" y="1685" width="2.1277%" height="15" fill="rgb(245,192,40)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1695.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="34.0426%" y="1669" width="2.1277%" height="15" fill="rgb(238,167,29)" fg:x="16" fg:w="1"/><text x="34.2926%" y="1679.50">b..</text></g><g><title>discord-gating- (18 samples, 38.30%)</title><rect x="0.0000%" y="2181" width="38.2979%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2191.50">discord-gating-</text></g><g><title>_start (18 samples, 38.30%)</title><rect x="0.0000%" y="2165" width="38.2979%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2175.50">_start</text></g><g><title>__libc_start_main (18 samples, 38.30%)</title><rect x="0.0000%" y="2149" width="38.2979%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2159.50">__libc_start_main</text></g><g><title>main (18 samples, 38.30%)</title><rect x="0.0000%" y="2133" width="38.2979%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2143.50">main</text></g><g><title>std::rt::lang_start (18 samples, 38.30%)</title><rect x="0.0000%" y="2117" width="38.2979%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2127.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (18 samples, 38.30%)</title><rect x="0.0000%" y="2101" width="38.2979%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2111.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (18 samples, 38.30%)</title><rect x="0.0000%" y="2085" width="38.2979%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2095.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18 samples, 38.30%)</title><rect x="0.0000%" y="2069" width="38.2979%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2079.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18 samples, 38.30%)</title><rect x="0.0000%" y="2053" width="38.2979%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2063.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (18 samples, 38.30%)</title><rect x="0.0000%" y="2037" width="38.2979%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2047.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (18 samples, 38.30%)</title><rect x="0.0000%" y="2021" width="38.2979%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2031.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18 samples, 38.30%)</title><rect x="0.0000%" y="2005" width="38.2979%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="18"/><text x="0.2500%" y="2015.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18 samples, 38.30%)</title><rect x="0.0000%" y="1989" width="38.2979%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1999.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 38.30%)</title><rect x="0.0000%" y="1973" width="38.2979%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1983.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;..</text></g><g><title>std::rt::lang_start::{{closure}} (18 samples, 38.30%)</title><rect x="0.0000%" y="1957" width="38.2979%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1967.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 38.30%)</title><rect x="0.0000%" y="1941" width="38.2979%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1951.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 38.30%)</title><rect x="0.0000%" y="1925" width="38.2979%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1935.50">core::ops::function::FnOnce::call_once</text></g><g><title>discord_gating_bot::main (18 samples, 38.30%)</title><rect x="0.0000%" y="1909" width="38.2979%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1919.50">discord_gating_bot::main</text></g><g><title>discord_gating_bot::logging::setup_logging (1 samples, 2.13%)</title><rect x="36.1702%" y="1893" width="2.1277%" height="15" fill="rgb(247,81,37)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1903.50">d..</text></g><g><title>tracing_appender::non_blocking (1 samples, 2.13%)</title><rect x="36.1702%" y="1877" width="2.1277%" height="15" fill="rgb(209,12,38)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1887.50">t..</text></g><g><title>tracing_appender::non_blocking::NonBlocking::new (1 samples, 2.13%)</title><rect x="36.1702%" y="1861" width="2.1277%" height="15" fill="rgb(227,1,9)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1871.50">t..</text></g><g><title>tracing_appender::non_blocking::NonBlockingBuilder::finish (1 samples, 2.13%)</title><rect x="36.1702%" y="1845" width="2.1277%" height="15" fill="rgb(248,47,43)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1855.50">t..</text></g><g><title>tracing_appender::non_blocking::NonBlocking::create (1 samples, 2.13%)</title><rect x="36.1702%" y="1829" width="2.1277%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1839.50">t..</text></g><g><title>crossbeam_channel::channel::bounded (1 samples, 2.13%)</title><rect x="36.1702%" y="1813" width="2.1277%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1823.50">c..</text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::with_capacity (1 samples, 2.13%)</title><rect x="36.1702%" y="1797" width="2.1277%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1807.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.13%)</title><rect x="36.1702%" y="1781" width="2.1277%" height="15" fill="rgb(234,67,33)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1791.50">c..</text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="36.1702%" y="1765" width="2.1277%" height="15" fill="rgb(247,98,35)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1775.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.13%)</title><rect x="36.1702%" y="1749" width="2.1277%" height="15" fill="rgb(247,138,52)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1759.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="36.1702%" y="1733" width="2.1277%" height="15" fill="rgb(213,79,30)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1743.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="36.1702%" y="1717" width="2.1277%" height="15" fill="rgb(246,177,23)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1727.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="36.1702%" y="1701" width="2.1277%" height="15" fill="rgb(230,62,27)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1711.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 2.13%)</title><rect x="36.1702%" y="1685" width="2.1277%" height="15" fill="rgb(216,154,8)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1695.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 2.13%)</title><rect x="36.1702%" y="1669" width="2.1277%" height="15" fill="rgb(244,35,45)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1679.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 2.13%)</title><rect x="36.1702%" y="1653" width="2.1277%" height="15" fill="rgb(251,115,12)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1663.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.13%)</title><rect x="36.1702%" y="1637" width="2.1277%" height="15" fill="rgb(240,54,50)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1647.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 2.13%)</title><rect x="36.1702%" y="1621" width="2.1277%" height="15" fill="rgb(233,84,52)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1631.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 2.13%)</title><rect x="36.1702%" y="1605" width="2.1277%" height="15" fill="rgb(207,117,47)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1615.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 2.13%)</title><rect x="36.1702%" y="1589" width="2.1277%" height="15" fill="rgb(249,43,39)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1599.50">&lt;..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 2.13%)</title><rect x="36.1702%" y="1573" width="2.1277%" height="15" fill="rgb(209,38,44)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1583.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 2.13%)</title><rect x="36.1702%" y="1557" width="2.1277%" height="15" fill="rgb(236,212,23)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1567.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="36.1702%" y="1541" width="2.1277%" height="15" fill="rgb(242,79,21)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1551.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="36.1702%" y="1525" width="2.1277%" height="15" fill="rgb(211,96,35)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1535.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="36.1702%" y="1509" width="2.1277%" height="15" fill="rgb(253,215,40)" fg:x="17" fg:w="1"/><text x="36.4202%" y="1519.50">b..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 2.13%)</title><rect x="38.2979%" y="1333" width="2.1277%" height="15" fill="rgb(211,81,21)" fg:x="18" fg:w="1"/><text x="38.5479%" y="1343.50">t..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 2.13%)</title><rect x="38.2979%" y="1317" width="2.1277%" height="15" fill="rgb(208,190,38)" fg:x="18" fg:w="1"/><text x="38.5479%" y="1327.50">l..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 2.13%)</title><rect x="38.2979%" y="1301" width="2.1277%" height="15" fill="rgb(235,213,38)" fg:x="18" fg:w="1"/><text x="38.5479%" y="1311.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 2.13%)</title><rect x="38.2979%" y="1285" width="2.1277%" height="15" fill="rgb(237,122,38)" fg:x="18" fg:w="1"/><text x="38.5479%" y="1295.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="38.2979%" y="1269" width="2.1277%" height="15" fill="rgb(244,218,35)" fg:x="18" fg:w="1"/><text x="38.5479%" y="1279.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="38.2979%" y="1253" width="2.1277%" height="15" fill="rgb(240,68,47)" fg:x="18" fg:w="1"/><text x="38.5479%" y="1263.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="38.2979%" y="1237" width="2.1277%" height="15" fill="rgb(210,16,53)" fg:x="18" fg:w="1"/><text x="38.5479%" y="1247.50">b..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (2 samples, 4.26%)</title><rect x="38.2979%" y="1589" width="4.2553%" height="15" fill="rgb(235,124,12)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1599.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (2 samples, 4.26%)</title><rect x="38.2979%" y="1573" width="4.2553%" height="15" fill="rgb(224,169,11)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1583.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (2 samples, 4.26%)</title><rect x="38.2979%" y="1557" width="4.2553%" height="15" fill="rgb(250,166,2)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1567.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (2 samples, 4.26%)</title><rect x="38.2979%" y="1541" width="4.2553%" height="15" fill="rgb(242,216,29)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1551.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (2 samples, 4.26%)</title><rect x="38.2979%" y="1525" width="4.2553%" height="15" fill="rgb(230,116,27)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1535.50">tokio..</text></g><g><title>tokio::runtime::driver::Driver::park (2 samples, 4.26%)</title><rect x="38.2979%" y="1509" width="4.2553%" height="15" fill="rgb(228,99,48)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1519.50">tokio..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (2 samples, 4.26%)</title><rect x="38.2979%" y="1493" width="4.2553%" height="15" fill="rgb(253,11,6)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1503.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park (2 samples, 4.26%)</title><rect x="38.2979%" y="1477" width="4.2553%" height="15" fill="rgb(247,143,39)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1487.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park_internal (2 samples, 4.26%)</title><rect x="38.2979%" y="1461" width="4.2553%" height="15" fill="rgb(236,97,10)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1471.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (2 samples, 4.26%)</title><rect x="38.2979%" y="1445" width="4.2553%" height="15" fill="rgb(233,208,19)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1455.50">tokio..</text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (2 samples, 4.26%)</title><rect x="38.2979%" y="1429" width="4.2553%" height="15" fill="rgb(216,164,2)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1439.50">tokio..</text></g><g><title>tokio::runtime::signal::Driver::park_timeout (2 samples, 4.26%)</title><rect x="38.2979%" y="1413" width="4.2553%" height="15" fill="rgb(220,129,5)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1423.50">tokio..</text></g><g><title>tokio::runtime::io::Driver::park_timeout (2 samples, 4.26%)</title><rect x="38.2979%" y="1397" width="4.2553%" height="15" fill="rgb(242,17,10)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1407.50">tokio..</text></g><g><title>tokio::runtime::io::Driver::turn (2 samples, 4.26%)</title><rect x="38.2979%" y="1381" width="4.2553%" height="15" fill="rgb(242,107,0)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1391.50">tokio..</text></g><g><title>tokio::runtime::io::Driver::dispatch (2 samples, 4.26%)</title><rect x="38.2979%" y="1365" width="4.2553%" height="15" fill="rgb(251,28,31)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1375.50">tokio..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 4.26%)</title><rect x="38.2979%" y="1349" width="4.2553%" height="15" fill="rgb(233,223,10)" fg:x="18" fg:w="2"/><text x="38.5479%" y="1359.50">tokio..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1 samples, 2.13%)</title><rect x="40.4255%" y="1333" width="2.1277%" height="15" fill="rgb(215,21,27)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1343.50">t..</text></g><g><title>core::task::wake::Waker::wake (1 samples, 2.13%)</title><rect x="40.4255%" y="1317" width="2.1277%" height="15" fill="rgb(232,23,21)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1327.50">c..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 2.13%)</title><rect x="40.4255%" y="1301" width="2.1277%" height="15" fill="rgb(244,5,23)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1311.50">t..</text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 2.13%)</title><rect x="40.4255%" y="1285" width="2.1277%" height="15" fill="rgb(226,81,46)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1295.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 2.13%)</title><rect x="40.4255%" y="1269" width="2.1277%" height="15" fill="rgb(247,70,30)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1279.50">t..</text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 2.13%)</title><rect x="40.4255%" y="1253" width="2.1277%" height="15" fill="rgb(212,68,19)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1263.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 2.13%)</title><rect x="40.4255%" y="1237" width="2.1277%" height="15" fill="rgb(240,187,13)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1247.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 2.13%)</title><rect x="40.4255%" y="1221" width="2.1277%" height="15" fill="rgb(223,113,26)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1231.50">t..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 2.13%)</title><rect x="40.4255%" y="1205" width="2.1277%" height="15" fill="rgb(206,192,2)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1215.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (1 samples, 2.13%)</title><rect x="40.4255%" y="1189" width="2.1277%" height="15" fill="rgb(241,108,4)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1199.50">t..</text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 2.13%)</title><rect x="40.4255%" y="1173" width="2.1277%" height="15" fill="rgb(247,173,49)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1183.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 2.13%)</title><rect x="40.4255%" y="1157" width="2.1277%" height="15" fill="rgb(224,114,35)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1167.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="40.4255%" y="1141" width="2.1277%" height="15" fill="rgb(245,159,27)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1151.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="40.4255%" y="1125" width="2.1277%" height="15" fill="rgb(245,172,44)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1135.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="40.4255%" y="1109" width="2.1277%" height="15" fill="rgb(236,23,11)" fg:x="19" fg:w="1"/><text x="40.6755%" y="1119.50">b..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="42.5532%" y="1445" width="2.1277%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="1"/><text x="42.8032%" y="1455.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="42.5532%" y="1429" width="2.1277%" height="15" fill="rgb(237,72,25)" fg:x="20" fg:w="1"/><text x="42.8032%" y="1439.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="42.5532%" y="1413" width="2.1277%" height="15" fill="rgb(244,70,9)" fg:x="20" fg:w="1"/><text x="42.8032%" y="1423.50">b..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (1 samples, 2.13%)</title><rect x="44.6809%" y="1061" width="2.1277%" height="15" fill="rgb(217,125,39)" fg:x="21" fg:w="1"/><text x="44.9309%" y="1071.50">h..</text></g><g><title>hyper::proto::h1::decode::Decoder::decode (1 samples, 2.13%)</title><rect x="44.6809%" y="1045" width="2.1277%" height="15" fill="rgb(235,36,10)" fg:x="21" fg:w="1"/><text x="44.9309%" y="1055.50">h..</text></g><g><title>hyper::proto::h1::decode::ChunkedState::step (1 samples, 2.13%)</title><rect x="44.6809%" y="1029" width="2.1277%" height="15" fill="rgb(251,123,47)" fg:x="21" fg:w="1"/><text x="44.9309%" y="1039.50">h..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="44.6809%" y="1013" width="2.1277%" height="15" fill="rgb(221,13,13)" fg:x="21" fg:w="1"/><text x="44.9309%" y="1023.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="44.6809%" y="997" width="2.1277%" height="15" fill="rgb(238,131,9)" fg:x="21" fg:w="1"/><text x="44.9309%" y="1007.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="44.6809%" y="981" width="2.1277%" height="15" fill="rgb(211,50,8)" fg:x="21" fg:w="1"/><text x="44.9309%" y="991.50">b..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 2.13%)</title><rect x="46.8085%" y="1013" width="2.1277%" height="15" fill="rgb(245,182,24)" fg:x="22" fg:w="1"/><text x="47.0585%" y="1023.50">h..</text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 2.13%)</title><rect x="46.8085%" y="997" width="2.1277%" height="15" fill="rgb(242,14,37)" fg:x="22" fg:w="1"/><text x="47.0585%" y="1007.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 2.13%)</title><rect x="46.8085%" y="981" width="2.1277%" height="15" fill="rgb(246,228,12)" fg:x="22" fg:w="1"/><text x="47.0585%" y="991.50">&lt;..</text></g><g><title>&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 2.13%)</title><rect x="46.8085%" y="965" width="2.1277%" height="15" fill="rgb(213,55,15)" fg:x="22" fg:w="1"/><text x="47.0585%" y="975.50">&lt;..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 2.13%)</title><rect x="46.8085%" y="949" width="2.1277%" height="15" fill="rgb(209,9,3)" fg:x="22" fg:w="1"/><text x="47.0585%" y="959.50">&lt;..</text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 2.13%)</title><rect x="46.8085%" y="933" width="2.1277%" height="15" fill="rgb(230,59,30)" fg:x="22" fg:w="1"/><text x="47.0585%" y="943.50">t..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 2.13%)</title><rect x="46.8085%" y="917" width="2.1277%" height="15" fill="rgb(209,121,21)" fg:x="22" fg:w="1"/><text x="47.0585%" y="927.50">&lt;..</text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 2.13%)</title><rect x="46.8085%" y="901" width="2.1277%" height="15" fill="rgb(220,109,13)" fg:x="22" fg:w="1"/><text x="47.0585%" y="911.50">&lt;..</text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 2.13%)</title><rect x="46.8085%" y="885" width="2.1277%" height="15" fill="rgb(232,18,1)" fg:x="22" fg:w="1"/><text x="47.0585%" y="895.50">&lt;..</text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 2.13%)</title><rect x="46.8085%" y="869" width="2.1277%" height="15" fill="rgb(215,41,42)" fg:x="22" fg:w="1"/><text x="47.0585%" y="879.50">&lt;..</text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 2.13%)</title><rect x="46.8085%" y="853" width="2.1277%" height="15" fill="rgb(224,123,36)" fg:x="22" fg:w="1"/><text x="47.0585%" y="863.50">o..</text></g><g><title>openssl::ssl::SslRef::read (1 samples, 2.13%)</title><rect x="46.8085%" y="837" width="2.1277%" height="15" fill="rgb(240,125,3)" fg:x="22" fg:w="1"/><text x="47.0585%" y="847.50">o..</text></g><g><title>SSL_read (1 samples, 2.13%)</title><rect x="46.8085%" y="821" width="2.1277%" height="15" fill="rgb(205,98,50)" fg:x="22" fg:w="1"/><text x="47.0585%" y="831.50">S..</text></g><g><title>BIO_read (1 samples, 2.13%)</title><rect x="46.8085%" y="805" width="2.1277%" height="15" fill="rgb(205,185,37)" fg:x="22" fg:w="1"/><text x="47.0585%" y="815.50">B..</text></g><g><title>openssl::ssl::bio::bread (1 samples, 2.13%)</title><rect x="46.8085%" y="789" width="2.1277%" height="15" fill="rgb(238,207,15)" fg:x="22" fg:w="1"/><text x="47.0585%" y="799.50">o..</text></g><g><title>std::panic::catch_unwind (1 samples, 2.13%)</title><rect x="46.8085%" y="773" width="2.1277%" height="15" fill="rgb(213,199,42)" fg:x="22" fg:w="1"/><text x="47.0585%" y="783.50">s..</text></g><g><title>std::panicking::try (1 samples, 2.13%)</title><rect x="46.8085%" y="757" width="2.1277%" height="15" fill="rgb(235,201,11)" fg:x="22" fg:w="1"/><text x="47.0585%" y="767.50">s..</text></g><g><title>__rust_try (1 samples, 2.13%)</title><rect x="46.8085%" y="741" width="2.1277%" height="15" fill="rgb(207,46,11)" fg:x="22" fg:w="1"/><text x="47.0585%" y="751.50">_..</text></g><g><title>std::panicking::try::do_call (1 samples, 2.13%)</title><rect x="46.8085%" y="725" width="2.1277%" height="15" fill="rgb(241,35,35)" fg:x="22" fg:w="1"/><text x="47.0585%" y="735.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 2.13%)</title><rect x="46.8085%" y="709" width="2.1277%" height="15" fill="rgb(243,32,47)" fg:x="22" fg:w="1"/><text x="47.0585%" y="719.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 2.13%)</title><rect x="46.8085%" y="693" width="2.1277%" height="15" fill="rgb(247,202,23)" fg:x="22" fg:w="1"/><text x="47.0585%" y="703.50">c..</text></g><g><title>openssl::ssl::bio::bread::{{closure}} (1 samples, 2.13%)</title><rect x="46.8085%" y="677" width="2.1277%" height="15" fill="rgb(219,102,11)" fg:x="22" fg:w="1"/><text x="47.0585%" y="687.50">o..</text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 2.13%)</title><rect x="46.8085%" y="661" width="2.1277%" height="15" fill="rgb(243,110,44)" fg:x="22" fg:w="1"/><text x="47.0585%" y="671.50">&lt;..</text></g><g><title>tokio_native_tls::AllowStd&lt;S&gt;::with_context (1 samples, 2.13%)</title><rect x="46.8085%" y="645" width="2.1277%" height="15" fill="rgb(222,74,54)" fg:x="22" fg:w="1"/><text x="47.0585%" y="655.50">t..</text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read::{{closure}} (1 samples, 2.13%)</title><rect x="46.8085%" y="629" width="2.1277%" height="15" fill="rgb(216,99,12)" fg:x="22" fg:w="1"/><text x="47.0585%" y="639.50">&lt;..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 2.13%)</title><rect x="46.8085%" y="613" width="2.1277%" height="15" fill="rgb(226,22,26)" fg:x="22" fg:w="1"/><text x="47.0585%" y="623.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="46.8085%" y="597" width="2.1277%" height="15" fill="rgb(217,163,10)" fg:x="22" fg:w="1"/><text x="47.0585%" y="607.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="46.8085%" y="581" width="2.1277%" height="15" fill="rgb(213,25,53)" fg:x="22" fg:w="1"/><text x="47.0585%" y="591.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="46.8085%" y="565" width="2.1277%" height="15" fill="rgb(252,105,26)" fg:x="22" fg:w="1"/><text x="47.0585%" y="575.50">b..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1285" width="6.3830%" height="15" fill="rgb(220,39,43)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1295.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1269" width="6.3830%" height="15" fill="rgb(229,68,48)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1279.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1253" width="6.3830%" height="15" fill="rgb(252,8,32)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1263.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1237" width="6.3830%" height="15" fill="rgb(223,20,43)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1247.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1221" width="6.3830%" height="15" fill="rgb(229,81,49)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1231.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1205" width="6.3830%" height="15" fill="rgb(236,28,36)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1215.50">&lt;futures..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1189" width="6.3830%" height="15" fill="rgb(249,185,26)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1199.50">&lt;F as fu..</text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1173" width="6.3830%" height="15" fill="rgb(249,174,33)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1183.50">&lt;hyper::..</text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1157" width="6.3830%" height="15" fill="rgb(233,201,37)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1167.50">&lt;hyper::..</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="44.6809%" y="1141" width="6.3830%" height="15" fill="rgb(221,78,26)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1151.50">&lt;hyper::..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 6.38%)</title><rect x="44.6809%" y="1125" width="6.3830%" height="15" fill="rgb(250,127,30)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1135.50">hyper::p..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (3 samples, 6.38%)</title><rect x="44.6809%" y="1109" width="6.3830%" height="15" fill="rgb(230,49,44)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1119.50">hyper::p..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (3 samples, 6.38%)</title><rect x="44.6809%" y="1093" width="6.3830%" height="15" fill="rgb(229,67,23)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1103.50">hyper::p..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (3 samples, 6.38%)</title><rect x="44.6809%" y="1077" width="6.3830%" height="15" fill="rgb(249,83,47)" fg:x="21" fg:w="3"/><text x="44.9309%" y="1087.50">hyper::p..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (2 samples, 4.26%)</title><rect x="46.8085%" y="1061" width="4.2553%" height="15" fill="rgb(215,43,3)" fg:x="22" fg:w="2"/><text x="47.0585%" y="1071.50">hyper..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (2 samples, 4.26%)</title><rect x="46.8085%" y="1045" width="4.2553%" height="15" fill="rgb(238,154,13)" fg:x="22" fg:w="2"/><text x="47.0585%" y="1055.50">hyper..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (2 samples, 4.26%)</title><rect x="46.8085%" y="1029" width="4.2553%" height="15" fill="rgb(219,56,2)" fg:x="22" fg:w="2"/><text x="47.0585%" y="1039.50">hyper..</text></g><g><title>hyper::proto::h1::role::parse_headers (1 samples, 2.13%)</title><rect x="48.9362%" y="1013" width="2.1277%" height="15" fill="rgb(233,0,4)" fg:x="23" fg:w="1"/><text x="49.1862%" y="1023.50">h..</text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 2.13%)</title><rect x="48.9362%" y="997" width="2.1277%" height="15" fill="rgb(235,30,7)" fg:x="23" fg:w="1"/><text x="49.1862%" y="1007.50">&lt;..</text></g><g><title>http::header::name::HeaderName::from_bytes (1 samples, 2.13%)</title><rect x="48.9362%" y="981" width="2.1277%" height="15" fill="rgb(250,79,13)" fg:x="23" fg:w="1"/><text x="49.1862%" y="991.50">h..</text></g><g><title>http::header::name::parse_hdr (1 samples, 2.13%)</title><rect x="48.9362%" y="965" width="2.1277%" height="15" fill="rgb(211,146,34)" fg:x="23" fg:w="1"/><text x="49.1862%" y="975.50">h..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 2.13%)</title><rect x="48.9362%" y="949" width="2.1277%" height="15" fill="rgb(228,22,38)" fg:x="23" fg:w="1"/><text x="49.1862%" y="959.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 2.13%)</title><rect x="48.9362%" y="933" width="2.1277%" height="15" fill="rgb(235,168,5)" fg:x="23" fg:w="1"/><text x="49.1862%" y="943.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 2.13%)</title><rect x="48.9362%" y="917" width="2.1277%" height="15" fill="rgb(221,155,16)" fg:x="23" fg:w="1"/><text x="49.1862%" y="927.50">c..</text></g><g><title>http::header::name::parse_hdr::{{closure}} (1 samples, 2.13%)</title><rect x="48.9362%" y="901" width="2.1277%" height="15" fill="rgb(215,215,53)" fg:x="23" fg:w="1"/><text x="49.1862%" y="911.50">h..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="48.9362%" y="885" width="2.1277%" height="15" fill="rgb(223,4,10)" fg:x="23" fg:w="1"/><text x="49.1862%" y="895.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="48.9362%" y="869" width="2.1277%" height="15" fill="rgb(234,103,6)" fg:x="23" fg:w="1"/><text x="49.1862%" y="879.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="48.9362%" y="853" width="2.1277%" height="15" fill="rgb(227,97,0)" fg:x="23" fg:w="1"/><text x="49.1862%" y="863.50">b..</text></g><g><title>core::mem::drop (1 samples, 2.13%)</title><rect x="51.0638%" y="1141" width="2.1277%" height="15" fill="rgb(234,150,53)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1151.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (1 samples, 2.13%)</title><rect x="51.0638%" y="1125" width="2.1277%" height="15" fill="rgb(228,201,54)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1135.50">c..</text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="51.0638%" y="1109" width="2.1277%" height="15" fill="rgb(222,22,37)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1119.50">&lt;..</text></g><g><title>hyper::client::pool::WeakOpt&lt;T&gt;::upgrade (1 samples, 2.13%)</title><rect x="51.0638%" y="1093" width="2.1277%" height="15" fill="rgb(237,53,32)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1103.50">h..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 2.13%)</title><rect x="51.0638%" y="1077" width="2.1277%" height="15" fill="rgb(233,25,53)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1087.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 2.13%)</title><rect x="51.0638%" y="1061" width="2.1277%" height="15" fill="rgb(210,40,34)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1071.50">c..</text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (1 samples, 2.13%)</title><rect x="51.0638%" y="1045" width="2.1277%" height="15" fill="rgb(241,220,44)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1055.50">a..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="51.0638%" y="1029" width="2.1277%" height="15" fill="rgb(235,28,35)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1039.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="51.0638%" y="1013" width="2.1277%" height="15" fill="rgb(210,56,17)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1023.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="51.0638%" y="997" width="2.1277%" height="15" fill="rgb(224,130,29)" fg:x="24" fg:w="1"/><text x="51.3138%" y="1007.50">b..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="1141" width="2.1277%" height="15" fill="rgb(235,212,8)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1151.50">h..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="1125" width="2.1277%" height="15" fill="rgb(223,33,50)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1135.50">&lt;..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 2.13%)</title><rect x="53.1915%" y="1109" width="2.1277%" height="15" fill="rgb(219,149,13)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1119.50">f..</text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="1093" width="2.1277%" height="15" fill="rgb(250,156,29)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1103.50">&lt;..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="1077" width="2.1277%" height="15" fill="rgb(216,193,19)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1087.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="1061" width="2.1277%" height="15" fill="rgb(216,135,14)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1071.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="1045" width="2.1277%" height="15" fill="rgb(241,47,5)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1055.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="1029" width="2.1277%" height="15" fill="rgb(233,42,35)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1039.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 2.13%)</title><rect x="53.1915%" y="1013" width="2.1277%" height="15" fill="rgb(231,13,6)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1023.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="997" width="2.1277%" height="15" fill="rgb(207,181,40)" fg:x="25" fg:w="1"/><text x="53.4415%" y="1007.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="981" width="2.1277%" height="15" fill="rgb(254,173,49)" fg:x="25" fg:w="1"/><text x="53.4415%" y="991.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="965" width="2.1277%" height="15" fill="rgb(221,1,38)" fg:x="25" fg:w="1"/><text x="53.4415%" y="975.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="949" width="2.1277%" height="15" fill="rgb(206,124,46)" fg:x="25" fg:w="1"/><text x="53.4415%" y="959.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 2.13%)</title><rect x="53.1915%" y="933" width="2.1277%" height="15" fill="rgb(249,21,11)" fg:x="25" fg:w="1"/><text x="53.4415%" y="943.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="917" width="2.1277%" height="15" fill="rgb(222,201,40)" fg:x="25" fg:w="1"/><text x="53.4415%" y="927.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="901" width="2.1277%" height="15" fill="rgb(235,61,29)" fg:x="25" fg:w="1"/><text x="53.4415%" y="911.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="885" width="2.1277%" height="15" fill="rgb(219,207,3)" fg:x="25" fg:w="1"/><text x="53.4415%" y="895.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="869" width="2.1277%" height="15" fill="rgb(222,56,46)" fg:x="25" fg:w="1"/><text x="53.4415%" y="879.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 2.13%)</title><rect x="53.1915%" y="853" width="2.1277%" height="15" fill="rgb(239,76,54)" fg:x="25" fg:w="1"/><text x="53.4415%" y="863.50">&lt;..</text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="837" width="2.1277%" height="15" fill="rgb(231,124,27)" fg:x="25" fg:w="1"/><text x="53.4415%" y="847.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="821" width="2.1277%" height="15" fill="rgb(249,195,6)" fg:x="25" fg:w="1"/><text x="53.4415%" y="831.50">&lt;..</text></g><g><title>reqwest::connect::with_timeout::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="805" width="2.1277%" height="15" fill="rgb(237,174,47)" fg:x="25" fg:w="1"/><text x="53.4415%" y="815.50">r..</text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="789" width="2.1277%" height="15" fill="rgb(206,201,31)" fg:x="25" fg:w="1"/><text x="53.4415%" y="799.50">r..</text></g><g><title>&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="773" width="2.1277%" height="15" fill="rgb(231,57,52)" fg:x="25" fg:w="1"/><text x="53.4415%" y="783.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="757" width="2.1277%" height="15" fill="rgb(248,177,22)" fg:x="25" fg:w="1"/><text x="53.4415%" y="767.50">&lt;..</text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="741" width="2.1277%" height="15" fill="rgb(215,211,37)" fg:x="25" fg:w="1"/><text x="53.4415%" y="751.50">&lt;..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnecting&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="725" width="2.1277%" height="15" fill="rgb(241,128,51)" fg:x="25" fg:w="1"/><text x="53.4415%" y="735.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="709" width="2.1277%" height="15" fill="rgb(227,165,31)" fg:x="25" fg:w="1"/><text x="53.4415%" y="719.50">&lt;..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="693" width="2.1277%" height="15" fill="rgb(228,167,24)" fg:x="25" fg:w="1"/><text x="53.4415%" y="703.50">&lt;..</text></g><g><title>hyper::client::connect::http::HttpConnector&lt;R&gt;::call_async::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="677" width="2.1277%" height="15" fill="rgb(228,143,12)" fg:x="25" fg:w="1"/><text x="53.4415%" y="687.50">h..</text></g><g><title>hyper::client::connect::dns::resolve::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="661" width="2.1277%" height="15" fill="rgb(249,149,8)" fg:x="25" fg:w="1"/><text x="53.4415%" y="671.50">h..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="645" width="2.1277%" height="15" fill="rgb(243,35,44)" fg:x="25" fg:w="1"/><text x="53.4415%" y="655.50">&lt;..</text></g><g><title>&lt;reqwest::dns::trust_dns::TrustDnsResolver as reqwest::dns::resolve::Resolve&gt;::resolve::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="629" width="2.1277%" height="15" fill="rgb(246,89,9)" fg:x="25" fg:w="1"/><text x="53.4415%" y="639.50">&lt;..</text></g><g><title>trust_dns_resolver::async_resolver::AsyncResolver&lt;C,P&gt;::lookup_ip::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="613" width="2.1277%" height="15" fill="rgb(233,213,13)" fg:x="25" fg:w="1"/><text x="53.4415%" y="623.50">t..</text></g><g><title>&lt;trust_dns_resolver::lookup_ip::LookupIpFuture&lt;C,E&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="597" width="2.1277%" height="15" fill="rgb(233,141,41)" fg:x="25" fg:w="1"/><text x="53.4415%" y="607.50">&lt;..</text></g><g><title>trust_dns_resolver::lookup_ip::strategic_lookup::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="581" width="2.1277%" height="15" fill="rgb(239,167,4)" fg:x="25" fg:w="1"/><text x="53.4415%" y="591.50">t..</text></g><g><title>trust_dns_resolver::lookup_ip::ipv4_then_ipv6::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="565" width="2.1277%" height="15" fill="rgb(209,217,16)" fg:x="25" fg:w="1"/><text x="53.4415%" y="575.50">t..</text></g><g><title>trust_dns_resolver::lookup_ip::rt_then_swap::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="549" width="2.1277%" height="15" fill="rgb(219,88,35)" fg:x="25" fg:w="1"/><text x="53.4415%" y="559.50">t..</text></g><g><title>trust_dns_resolver::lookup_ip::hosts_lookup::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="533" width="2.1277%" height="15" fill="rgb(220,193,23)" fg:x="25" fg:w="1"/><text x="53.4415%" y="543.50">t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="53.1915%" y="517" width="2.1277%" height="15" fill="rgb(230,90,52)" fg:x="25" fg:w="1"/><text x="53.4415%" y="527.50">&lt;..</text></g><g><title>trust_dns_resolver::caching_client::CachingClient&lt;C,E&gt;::inner_lookup::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="501" width="2.1277%" height="15" fill="rgb(252,106,19)" fg:x="25" fg:w="1"/><text x="53.4415%" y="511.50">t..</text></g><g><title>trust_dns_resolver::caching_client::CachingClient&lt;C,E&gt;::handle_noerror (1 samples, 2.13%)</title><rect x="53.1915%" y="485" width="2.1277%" height="15" fill="rgb(206,74,20)" fg:x="25" fg:w="1"/><text x="53.4415%" y="495.50">t..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.13%)</title><rect x="53.1915%" y="469" width="2.1277%" height="15" fill="rgb(230,138,44)" fg:x="25" fg:w="1"/><text x="53.4415%" y="479.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="53.1915%" y="453" width="2.1277%" height="15" fill="rgb(235,182,43)" fg:x="25" fg:w="1"/><text x="53.4415%" y="463.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="53.1915%" y="437" width="2.1277%" height="15" fill="rgb(242,16,51)" fg:x="25" fg:w="1"/><text x="53.4415%" y="447.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="53.1915%" y="421" width="2.1277%" height="15" fill="rgb(248,9,4)" fg:x="25" fg:w="1"/><text x="53.4415%" y="431.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="53.1915%" y="405" width="2.1277%" height="15" fill="rgb(210,31,22)" fg:x="25" fg:w="1"/><text x="53.4415%" y="415.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 2.13%)</title><rect x="53.1915%" y="389" width="2.1277%" height="15" fill="rgb(239,54,39)" fg:x="25" fg:w="1"/><text x="53.4415%" y="399.50">c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.13%)</title><rect x="53.1915%" y="373" width="2.1277%" height="15" fill="rgb(230,99,41)" fg:x="25" fg:w="1"/><text x="53.4415%" y="383.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.13%)</title><rect x="53.1915%" y="357" width="2.1277%" height="15" fill="rgb(253,106,12)" fg:x="25" fg:w="1"/><text x="53.4415%" y="367.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 2.13%)</title><rect x="53.1915%" y="341" width="2.1277%" height="15" fill="rgb(213,46,41)" fg:x="25" fg:w="1"/><text x="53.4415%" y="351.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 2.13%)</title><rect x="53.1915%" y="325" width="2.1277%" height="15" fill="rgb(215,133,35)" fg:x="25" fg:w="1"/><text x="53.4415%" y="335.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 2.13%)</title><rect x="53.1915%" y="309" width="2.1277%" height="15" fill="rgb(213,28,5)" fg:x="25" fg:w="1"/><text x="53.4415%" y="319.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="293" width="2.1277%" height="15" fill="rgb(215,77,49)" fg:x="25" fg:w="1"/><text x="53.4415%" y="303.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 2.13%)</title><rect x="53.1915%" y="277" width="2.1277%" height="15" fill="rgb(248,100,22)" fg:x="25" fg:w="1"/><text x="53.4415%" y="287.50">c..</text></g><g><title>trust_dns_resolver::caching_client::CachingClient&lt;C,E&gt;::handle_noerror::{{closure}} (1 samples, 2.13%)</title><rect x="53.1915%" y="261" width="2.1277%" height="15" fill="rgb(208,67,9)" fg:x="25" fg:w="1"/><text x="53.4415%" y="271.50">t..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 2.13%)</title><rect x="53.1915%" y="245" width="2.1277%" height="15" fill="rgb(219,133,21)" fg:x="25" fg:w="1"/><text x="53.4415%" y="255.50">c..</text></g><g><title>&lt;trust_dns_proto::rr::domain::name::Name as core::cmp::PartialEq&gt;::eq (1 samples, 2.13%)</title><rect x="53.1915%" y="229" width="2.1277%" height="15" fill="rgb(246,46,29)" fg:x="25" fg:w="1"/><text x="53.4415%" y="239.50">&lt;..</text></g><g><title>trust_dns_proto::rr::domain::name::Name::cmp_with_f (1 samples, 2.13%)</title><rect x="53.1915%" y="213" width="2.1277%" height="15" fill="rgb(246,185,52)" fg:x="25" fg:w="1"/><text x="53.4415%" y="223.50">t..</text></g><g><title>trust_dns_proto::rr::domain::label::Label::cmp_with_f (1 samples, 2.13%)</title><rect x="53.1915%" y="197" width="2.1277%" height="15" fill="rgb(252,136,11)" fg:x="25" fg:w="1"/><text x="53.4415%" y="207.50">t..</text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 2.13%)</title><rect x="53.1915%" y="181" width="2.1277%" height="15" fill="rgb(219,138,53)" fg:x="25" fg:w="1"/><text x="53.4415%" y="191.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="53.1915%" y="165" width="2.1277%" height="15" fill="rgb(211,51,23)" fg:x="25" fg:w="1"/><text x="53.4415%" y="175.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="53.1915%" y="149" width="2.1277%" height="15" fill="rgb(247,221,28)" fg:x="25" fg:w="1"/><text x="53.4415%" y="159.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="53.1915%" y="133" width="2.1277%" height="15" fill="rgb(251,222,45)" fg:x="25" fg:w="1"/><text x="53.4415%" y="143.50">b..</text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="51.0638%" y="1221" width="6.3830%" height="15" fill="rgb(217,162,53)" fg:x="24" fg:w="3"/><text x="51.3138%" y="1231.50">&lt;reqwest..</text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="51.0638%" y="1205" width="6.3830%" height="15" fill="rgb(229,93,14)" fg:x="24" fg:w="3"/><text x="51.3138%" y="1215.50">&lt;reqwest..</text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="51.0638%" y="1189" width="6.3830%" height="15" fill="rgb(209,67,49)" fg:x="24" fg:w="3"/><text x="51.3138%" y="1199.50">&lt;hyper::..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (3 samples, 6.38%)</title><rect x="51.0638%" y="1173" width="6.3830%" height="15" fill="rgb(213,87,29)" fg:x="24" fg:w="3"/><text x="51.3138%" y="1183.50">hyper::c..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (3 samples, 6.38%)</title><rect x="51.0638%" y="1157" width="6.3830%" height="15" fill="rgb(205,151,52)" fg:x="24" fg:w="3"/><text x="51.3138%" y="1167.50">hyper::c..</text></g><g><title>hyper::client::client::PoolClient&lt;B&gt;::is_http2 (1 samples, 2.13%)</title><rect x="55.3191%" y="1141" width="2.1277%" height="15" fill="rgb(253,215,39)" fg:x="26" fg:w="1"/><text x="55.5691%" y="1151.50">h..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="55.3191%" y="1125" width="2.1277%" height="15" fill="rgb(221,220,41)" fg:x="26" fg:w="1"/><text x="55.5691%" y="1135.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="55.3191%" y="1109" width="2.1277%" height="15" fill="rgb(218,133,21)" fg:x="26" fg:w="1"/><text x="55.5691%" y="1119.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="55.3191%" y="1093" width="2.1277%" height="15" fill="rgb(221,193,43)" fg:x="26" fg:w="1"/><text x="55.5691%" y="1103.50">b..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="57.4468%" y="965" width="2.1277%" height="15" fill="rgb(240,128,52)" fg:x="27" fg:w="1"/><text x="57.6968%" y="975.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="57.4468%" y="949" width="2.1277%" height="15" fill="rgb(253,114,12)" fg:x="27" fg:w="1"/><text x="57.6968%" y="959.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 2.13%)</title><rect x="57.4468%" y="933" width="2.1277%" height="15" fill="rgb(215,223,47)" fg:x="27" fg:w="1"/><text x="57.6968%" y="943.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="57.4468%" y="917" width="2.1277%" height="15" fill="rgb(248,225,23)" fg:x="27" fg:w="1"/><text x="57.6968%" y="927.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="57.4468%" y="901" width="2.1277%" height="15" fill="rgb(250,108,0)" fg:x="27" fg:w="1"/><text x="57.6968%" y="911.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="57.4468%" y="885" width="2.1277%" height="15" fill="rgb(228,208,7)" fg:x="27" fg:w="1"/><text x="57.6968%" y="895.50">b..</text></g><g><title>&lt;ethabi::contract::Contract as core::clone::Clone&gt;::clone (2 samples, 4.26%)</title><rect x="57.4468%" y="1189" width="4.2553%" height="15" fill="rgb(244,45,10)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1199.50">&lt;etha..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.26%)</title><rect x="57.4468%" y="1173" width="4.2553%" height="15" fill="rgb(207,125,25)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1183.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 4.26%)</title><rect x="57.4468%" y="1157" width="4.2553%" height="15" fill="rgb(210,195,18)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1167.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 4.26%)</title><rect x="57.4468%" y="1141" width="4.2553%" height="15" fill="rgb(249,80,12)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1151.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 4.26%)</title><rect x="57.4468%" y="1125" width="4.2553%" height="15" fill="rgb(221,65,9)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1135.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.26%)</title><rect x="57.4468%" y="1109" width="4.2553%" height="15" fill="rgb(235,49,36)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1119.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 4.26%)</title><rect x="57.4468%" y="1093" width="4.2553%" height="15" fill="rgb(225,32,20)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1103.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (2 samples, 4.26%)</title><rect x="57.4468%" y="1077" width="4.2553%" height="15" fill="rgb(215,141,46)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1087.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 4.26%)</title><rect x="57.4468%" y="1061" width="4.2553%" height="15" fill="rgb(250,160,47)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1071.50">&lt;T as..</text></g><g><title>&lt;ethabi::function::Function as core::clone::Clone&gt;::clone (2 samples, 4.26%)</title><rect x="57.4468%" y="1045" width="4.2553%" height="15" fill="rgb(216,222,40)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1055.50">&lt;etha..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.26%)</title><rect x="57.4468%" y="1029" width="4.2553%" height="15" fill="rgb(234,217,39)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1039.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 4.26%)</title><rect x="57.4468%" y="1013" width="4.2553%" height="15" fill="rgb(207,178,40)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1023.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (2 samples, 4.26%)</title><rect x="57.4468%" y="997" width="4.2553%" height="15" fill="rgb(221,136,13)" fg:x="27" fg:w="2"/><text x="57.6968%" y="1007.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 4.26%)</title><rect x="57.4468%" y="981" width="4.2553%" height="15" fill="rgb(249,199,10)" fg:x="27" fg:w="2"/><text x="57.6968%" y="991.50">&lt;T as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 2.13%)</title><rect x="59.5745%" y="965" width="2.1277%" height="15" fill="rgb(249,222,13)" fg:x="28" fg:w="1"/><text x="59.8245%" y="975.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 2.13%)</title><rect x="59.5745%" y="949" width="2.1277%" height="15" fill="rgb(244,185,38)" fg:x="28" fg:w="1"/><text x="59.8245%" y="959.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 2.13%)</title><rect x="59.5745%" y="933" width="2.1277%" height="15" fill="rgb(236,202,9)" fg:x="28" fg:w="1"/><text x="59.8245%" y="943.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 2.13%)</title><rect x="59.5745%" y="917" width="2.1277%" height="15" fill="rgb(250,229,37)" fg:x="28" fg:w="1"/><text x="59.8245%" y="927.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 2.13%)</title><rect x="59.5745%" y="901" width="2.1277%" height="15" fill="rgb(206,174,23)" fg:x="28" fg:w="1"/><text x="59.8245%" y="911.50">a..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="59.5745%" y="885" width="2.1277%" height="15" fill="rgb(211,33,43)" fg:x="28" fg:w="1"/><text x="59.8245%" y="895.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="59.5745%" y="869" width="2.1277%" height="15" fill="rgb(245,58,50)" fg:x="28" fg:w="1"/><text x="59.8245%" y="879.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="59.5745%" y="853" width="2.1277%" height="15" fill="rgb(244,68,36)" fg:x="28" fg:w="1"/><text x="59.8245%" y="863.50">b..</text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 2.13%)</title><rect x="61.7021%" y="1189" width="2.1277%" height="15" fill="rgb(232,229,15)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1199.50">&lt;..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 2.13%)</title><rect x="61.7021%" y="1173" width="2.1277%" height="15" fill="rgb(254,30,23)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1183.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 2.13%)</title><rect x="61.7021%" y="1157" width="2.1277%" height="15" fill="rgb(235,160,14)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1167.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 2.13%)</title><rect x="61.7021%" y="1141" width="2.1277%" height="15" fill="rgb(212,155,44)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1151.50">o..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 2.13%)</title><rect x="61.7021%" y="1125" width="2.1277%" height="15" fill="rgb(226,2,50)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1135.50">o..</text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 2.13%)</title><rect x="61.7021%" y="1109" width="2.1277%" height="15" fill="rgb(234,177,6)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1119.50">o..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 2.13%)</title><rect x="61.7021%" y="1093" width="2.1277%" height="15" fill="rgb(217,24,9)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1103.50">c..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 2.13%)</title><rect x="61.7021%" y="1077" width="2.1277%" height="15" fill="rgb(220,13,46)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1087.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 2.13%)</title><rect x="61.7021%" y="1061" width="2.1277%" height="15" fill="rgb(239,221,27)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1071.50">o..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (1 samples, 2.13%)</title><rect x="61.7021%" y="1045" width="2.1277%" height="15" fill="rgb(222,198,25)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1055.50">o..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 2.13%)</title><rect x="61.7021%" y="1029" width="2.1277%" height="15" fill="rgb(211,99,13)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1039.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 2.13%)</title><rect x="61.7021%" y="1013" width="2.1277%" height="15" fill="rgb(232,111,31)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1023.50">c..</text></g><g><title>colony_rs::contracts::colony::colony::COLONY_ABI::{{closure}} (1 samples, 2.13%)</title><rect x="61.7021%" y="997" width="2.1277%" height="15" fill="rgb(245,82,37)" fg:x="29" fg:w="1"/><text x="61.9521%" y="1007.50">c..</text></g><g><title>serde_json::de::from_str (1 samples, 2.13%)</title><rect x="61.7021%" y="981" width="2.1277%" height="15" fill="rgb(227,149,46)" fg:x="29" fg:w="1"/><text x="61.9521%" y="991.50">s..</text></g><g><title>serde_json::de::from_trait (1 samples, 2.13%)</title><rect x="61.7021%" y="965" width="2.1277%" height="15" fill="rgb(218,36,50)" fg:x="29" fg:w="1"/><text x="61.9521%" y="975.50">s..</text></g><g><title>&lt;ethabi::contract::Contract as serde::de::Deserialize&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="949" width="2.1277%" height="15" fill="rgb(226,80,48)" fg:x="29" fg:w="1"/><text x="61.9521%" y="959.50">&lt;..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 2.13%)</title><rect x="61.7021%" y="933" width="2.1277%" height="15" fill="rgb(238,224,15)" fg:x="29" fg:w="1"/><text x="61.9521%" y="943.50">&lt;..</text></g><g><title>&lt;ethabi::contract::ContractVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 2.13%)</title><rect x="61.7021%" y="917" width="2.1277%" height="15" fill="rgb(241,136,10)" fg:x="29" fg:w="1"/><text x="61.9521%" y="927.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 2.13%)</title><rect x="61.7021%" y="901" width="2.1277%" height="15" fill="rgb(208,32,45)" fg:x="29" fg:w="1"/><text x="61.9521%" y="911.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 2.13%)</title><rect x="61.7021%" y="885" width="2.1277%" height="15" fill="rgb(207,135,9)" fg:x="29" fg:w="1"/><text x="61.9521%" y="895.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="869" width="2.1277%" height="15" fill="rgb(206,86,44)" fg:x="29" fg:w="1"/><text x="61.9521%" y="879.50">&lt;..</text></g><g><title>ethabi::operation::_::&lt;impl serde::de::Deserialize for ethabi::operation::Operation&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="853" width="2.1277%" height="15" fill="rgb(245,177,15)" fg:x="29" fg:w="1"/><text x="61.9521%" y="863.50">e..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 2.13%)</title><rect x="61.7021%" y="837" width="2.1277%" height="15" fill="rgb(206,64,50)" fg:x="29" fg:w="1"/><text x="61.9521%" y="847.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 2.13%)</title><rect x="61.7021%" y="821" width="2.1277%" height="15" fill="rgb(234,36,40)" fg:x="29" fg:w="1"/><text x="61.9521%" y="831.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_value (1 samples, 2.13%)</title><rect x="61.7021%" y="805" width="2.1277%" height="15" fill="rgb(213,64,8)" fg:x="29" fg:w="1"/><text x="61.9521%" y="815.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 2.13%)</title><rect x="61.7021%" y="789" width="2.1277%" height="15" fill="rgb(210,75,36)" fg:x="29" fg:w="1"/><text x="61.9521%" y="799.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="773" width="2.1277%" height="15" fill="rgb(229,88,21)" fg:x="29" fg:w="1"/><text x="61.9521%" y="783.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="757" width="2.1277%" height="15" fill="rgb(252,204,47)" fg:x="29" fg:w="1"/><text x="61.9521%" y="767.50">&lt;..</text></g><g><title>serde::de::Deserializer::__deserialize_content (1 samples, 2.13%)</title><rect x="61.7021%" y="741" width="2.1277%" height="15" fill="rgb(208,77,27)" fg:x="29" fg:w="1"/><text x="61.9521%" y="751.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 2.13%)</title><rect x="61.7021%" y="725" width="2.1277%" height="15" fill="rgb(221,76,26)" fg:x="29" fg:w="1"/><text x="61.9521%" y="735.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 2.13%)</title><rect x="61.7021%" y="709" width="2.1277%" height="15" fill="rgb(225,139,18)" fg:x="29" fg:w="1"/><text x="61.9521%" y="719.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 2.13%)</title><rect x="61.7021%" y="693" width="2.1277%" height="15" fill="rgb(230,137,11)" fg:x="29" fg:w="1"/><text x="61.9521%" y="703.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 2.13%)</title><rect x="61.7021%" y="677" width="2.1277%" height="15" fill="rgb(212,28,1)" fg:x="29" fg:w="1"/><text x="61.9521%" y="687.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="661" width="2.1277%" height="15" fill="rgb(248,164,17)" fg:x="29" fg:w="1"/><text x="61.9521%" y="671.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="645" width="2.1277%" height="15" fill="rgb(222,171,42)" fg:x="29" fg:w="1"/><text x="61.9521%" y="655.50">&lt;..</text></g><g><title>serde::de::Deserializer::__deserialize_content (1 samples, 2.13%)</title><rect x="61.7021%" y="629" width="2.1277%" height="15" fill="rgb(243,84,45)" fg:x="29" fg:w="1"/><text x="61.9521%" y="639.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 2.13%)</title><rect x="61.7021%" y="613" width="2.1277%" height="15" fill="rgb(252,49,23)" fg:x="29" fg:w="1"/><text x="61.9521%" y="623.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 2.13%)</title><rect x="61.7021%" y="597" width="2.1277%" height="15" fill="rgb(215,19,7)" fg:x="29" fg:w="1"/><text x="61.9521%" y="607.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 2.13%)</title><rect x="61.7021%" y="581" width="2.1277%" height="15" fill="rgb(238,81,41)" fg:x="29" fg:w="1"/><text x="61.9521%" y="591.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 2.13%)</title><rect x="61.7021%" y="565" width="2.1277%" height="15" fill="rgb(210,199,37)" fg:x="29" fg:w="1"/><text x="61.9521%" y="575.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 2.13%)</title><rect x="61.7021%" y="549" width="2.1277%" height="15" fill="rgb(244,192,49)" fg:x="29" fg:w="1"/><text x="61.9521%" y="559.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="533" width="2.1277%" height="15" fill="rgb(226,211,11)" fg:x="29" fg:w="1"/><text x="61.9521%" y="543.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 2.13%)</title><rect x="61.7021%" y="517" width="2.1277%" height="15" fill="rgb(236,162,54)" fg:x="29" fg:w="1"/><text x="61.9521%" y="527.50">&lt;..</text></g><g><title>serde::de::Deserializer::__deserialize_content (1 samples, 2.13%)</title><rect x="61.7021%" y="501" width="2.1277%" height="15" fill="rgb(220,229,9)" fg:x="29" fg:w="1"/><text x="61.9521%" y="511.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 2.13%)</title><rect x="61.7021%" y="485" width="2.1277%" height="15" fill="rgb(250,87,22)" fg:x="29" fg:w="1"/><text x="61.9521%" y="495.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="61.7021%" y="469" width="2.1277%" height="15" fill="rgb(239,43,17)" fg:x="29" fg:w="1"/><text x="61.9521%" y="479.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="61.7021%" y="453" width="2.1277%" height="15" fill="rgb(231,177,25)" fg:x="29" fg:w="1"/><text x="61.9521%" y="463.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="61.7021%" y="437" width="2.1277%" height="15" fill="rgb(219,179,1)" fg:x="29" fg:w="1"/><text x="61.9521%" y="447.50">b..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::abi_signature (1 samples, 2.13%)</title><rect x="63.8298%" y="773" width="2.1277%" height="15" fill="rgb(238,219,53)" fg:x="30" fg:w="1"/><text x="64.0798%" y="783.50">&lt;..</text></g><g><title>ethabi::function::Function::signature (1 samples, 2.13%)</title><rect x="63.8298%" y="757" width="2.1277%" height="15" fill="rgb(232,167,36)" fg:x="30" fg:w="1"/><text x="64.0798%" y="767.50">e..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.13%)</title><rect x="63.8298%" y="741" width="2.1277%" height="15" fill="rgb(244,19,51)" fg:x="30" fg:w="1"/><text x="64.0798%" y="751.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="63.8298%" y="725" width="2.1277%" height="15" fill="rgb(224,6,22)" fg:x="30" fg:w="1"/><text x="64.0798%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="63.8298%" y="709" width="2.1277%" height="15" fill="rgb(224,145,5)" fg:x="30" fg:w="1"/><text x="64.0798%" y="719.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="63.8298%" y="693" width="2.1277%" height="15" fill="rgb(234,130,49)" fg:x="30" fg:w="1"/><text x="64.0798%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 2.13%)</title><rect x="63.8298%" y="677" width="2.1277%" height="15" fill="rgb(254,6,2)" fg:x="30" fg:w="1"/><text x="64.0798%" y="687.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 2.13%)</title><rect x="63.8298%" y="661" width="2.1277%" height="15" fill="rgb(208,96,46)" fg:x="30" fg:w="1"/><text x="64.0798%" y="671.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 2.13%)</title><rect x="63.8298%" y="645" width="2.1277%" height="15" fill="rgb(239,3,39)" fg:x="30" fg:w="1"/><text x="64.0798%" y="655.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.13%)</title><rect x="63.8298%" y="629" width="2.1277%" height="15" fill="rgb(233,210,1)" fg:x="30" fg:w="1"/><text x="64.0798%" y="639.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 2.13%)</title><rect x="63.8298%" y="613" width="2.1277%" height="15" fill="rgb(244,137,37)" fg:x="30" fg:w="1"/><text x="64.0798%" y="623.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 2.13%)</title><rect x="63.8298%" y="597" width="2.1277%" height="15" fill="rgb(240,136,2)" fg:x="30" fg:w="1"/><text x="64.0798%" y="607.50">c..</text></g><g><title>ethabi::function::Function::signature::{{closure}} (1 samples, 2.13%)</title><rect x="63.8298%" y="581" width="2.1277%" height="15" fill="rgb(239,18,37)" fg:x="30" fg:w="1"/><text x="64.0798%" y="591.50">e..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 2.13%)</title><rect x="63.8298%" y="565" width="2.1277%" height="15" fill="rgb(218,185,22)" fg:x="30" fg:w="1"/><text x="64.0798%" y="575.50">&lt;..</text></g><g><title>&lt;ethabi::param_type::param_type::ParamType as core::fmt::Display&gt;::fmt (1 samples, 2.13%)</title><rect x="63.8298%" y="549" width="2.1277%" height="15" fill="rgb(225,218,4)" fg:x="30" fg:w="1"/><text x="64.0798%" y="559.50">&lt;..</text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 2.13%)</title><rect x="63.8298%" y="533" width="2.1277%" height="15" fill="rgb(230,182,32)" fg:x="30" fg:w="1"/><text x="64.0798%" y="543.50">c..</text></g><g><title>core::fmt::write (1 samples, 2.13%)</title><rect x="63.8298%" y="517" width="2.1277%" height="15" fill="rgb(242,56,43)" fg:x="30" fg:w="1"/><text x="64.0798%" y="527.50">c..</text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 2.13%)</title><rect x="63.8298%" y="501" width="2.1277%" height="15" fill="rgb(233,99,24)" fg:x="30" fg:w="1"/><text x="64.0798%" y="511.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 2.13%)</title><rect x="63.8298%" y="485" width="2.1277%" height="15" fill="rgb(234,209,42)" fg:x="30" fg:w="1"/><text x="64.0798%" y="495.50">&lt;..</text></g><g><title>alloc::string::String::push_str (1 samples, 2.13%)</title><rect x="63.8298%" y="469" width="2.1277%" height="15" fill="rgb(227,7,12)" fg:x="30" fg:w="1"/><text x="64.0798%" y="479.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 2.13%)</title><rect x="63.8298%" y="453" width="2.1277%" height="15" fill="rgb(245,203,43)" fg:x="30" fg:w="1"/><text x="64.0798%" y="463.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 2.13%)</title><rect x="63.8298%" y="437" width="2.1277%" height="15" fill="rgb(238,205,33)" fg:x="30" fg:w="1"/><text x="64.0798%" y="447.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 2.13%)</title><rect x="63.8298%" y="421" width="2.1277%" height="15" fill="rgb(231,56,7)" fg:x="30" fg:w="1"/><text x="64.0798%" y="431.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 2.13%)</title><rect x="63.8298%" y="405" width="2.1277%" height="15" fill="rgb(244,186,29)" fg:x="30" fg:w="1"/><text x="64.0798%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 2.13%)</title><rect x="63.8298%" y="389" width="2.1277%" height="15" fill="rgb(234,111,31)" fg:x="30" fg:w="1"/><text x="64.0798%" y="399.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 2.13%)</title><rect x="63.8298%" y="373" width="2.1277%" height="15" fill="rgb(241,149,10)" fg:x="30" fg:w="1"/><text x="64.0798%" y="383.50">a..</text></g><g><title>alloc::raw_vec::handle_reserve (1 samples, 2.13%)</title><rect x="63.8298%" y="357" width="2.1277%" height="15" fill="rgb(249,206,44)" fg:x="30" fg:w="1"/><text x="64.0798%" y="367.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 2.13%)</title><rect x="63.8298%" y="341" width="2.1277%" height="15" fill="rgb(251,153,30)" fg:x="30" fg:w="1"/><text x="64.0798%" y="351.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="63.8298%" y="325" width="2.1277%" height="15" fill="rgb(239,152,38)" fg:x="30" fg:w="1"/><text x="64.0798%" y="335.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="63.8298%" y="309" width="2.1277%" height="15" fill="rgb(249,139,47)" fg:x="30" fg:w="1"/><text x="64.0798%" y="319.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="63.8298%" y="293" width="2.1277%" height="15" fill="rgb(244,64,35)" fg:x="30" fg:w="1"/><text x="64.0798%" y="303.50">b..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (2 samples, 4.26%)</title><rect x="65.9574%" y="757" width="4.2553%" height="15" fill="rgb(216,46,15)" fg:x="31" fg:w="2"/><text x="66.2074%" y="767.50">&lt;tiny..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (2 samples, 4.26%)</title><rect x="65.9574%" y="741" width="4.2553%" height="15" fill="rgb(250,74,19)" fg:x="31" fg:w="2"/><text x="66.2074%" y="751.50">tiny_..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (2 samples, 4.26%)</title><rect x="65.9574%" y="725" width="4.2553%" height="15" fill="rgb(249,42,33)" fg:x="31" fg:w="2"/><text x="66.2074%" y="735.50">tiny_..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (2 samples, 4.26%)</title><rect x="65.9574%" y="709" width="4.2553%" height="15" fill="rgb(242,149,17)" fg:x="31" fg:w="2"/><text x="66.2074%" y="719.50">tiny_..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (2 samples, 4.26%)</title><rect x="65.9574%" y="693" width="4.2553%" height="15" fill="rgb(244,29,21)" fg:x="31" fg:w="2"/><text x="66.2074%" y="703.50">tiny_..</text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (2 samples, 4.26%)</title><rect x="65.9574%" y="677" width="4.2553%" height="15" fill="rgb(220,130,37)" fg:x="31" fg:w="2"/><text x="66.2074%" y="687.50">&lt;tiny..</text></g><g><title>tiny_keccak::keccakf::keccakf (2 samples, 4.26%)</title><rect x="65.9574%" y="661" width="4.2553%" height="15" fill="rgb(211,67,2)" fg:x="31" fg:w="2"/><text x="66.2074%" y="671.50">tiny_..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 4.26%)</title><rect x="65.9574%" y="645" width="4.2553%" height="15" fill="rgb(235,68,52)" fg:x="31" fg:w="2"/><text x="66.2074%" y="655.50">&lt;ppro..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 4.26%)</title><rect x="65.9574%" y="629" width="4.2553%" height="15" fill="rgb(246,142,3)" fg:x="31" fg:w="2"/><text x="66.2074%" y="639.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 4.26%)</title><rect x="65.9574%" y="613" width="4.2553%" height="15" fill="rgb(241,25,7)" fg:x="31" fg:w="2"/><text x="66.2074%" y="623.50">backt..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 8.51%)</title><rect x="63.8298%" y="885" width="8.5106%" height="15" fill="rgb(242,119,39)" fg:x="30" fg:w="4"/><text x="64.0798%" y="895.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 8.51%)</title><rect x="63.8298%" y="869" width="8.5106%" height="15" fill="rgb(241,98,45)" fg:x="30" fg:w="4"/><text x="64.0798%" y="879.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 8.51%)</title><rect x="63.8298%" y="853" width="8.5106%" height="15" fill="rgb(254,28,30)" fg:x="30" fg:w="4"/><text x="64.0798%" y="863.50">&lt;core::iter:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 8.51%)</title><rect x="63.8298%" y="837" width="8.5106%" height="15" fill="rgb(241,142,54)" fg:x="30" fg:w="4"/><text x="64.0798%" y="847.50">core::iter::..</text></g><g><title>ethers_contract::base::create_mapping::{{closure}}::{{closure}} (4 samples, 8.51%)</title><rect x="63.8298%" y="821" width="8.5106%" height="15" fill="rgb(222,85,15)" fg:x="30" fg:w="4"/><text x="64.0798%" y="831.50">ethers_contr..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from::{{closure}} (4 samples, 8.51%)</title><rect x="63.8298%" y="805" width="8.5106%" height="15" fill="rgb(210,85,47)" fg:x="30" fg:w="4"/><text x="64.0798%" y="815.50">&lt;ethers_cont..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::selector (4 samples, 8.51%)</title><rect x="63.8298%" y="789" width="8.5106%" height="15" fill="rgb(224,206,25)" fg:x="30" fg:w="4"/><text x="64.0798%" y="799.50">&lt;ethabi::fun..</text></g><g><title>ethers_core::utils::hash::id (3 samples, 6.38%)</title><rect x="65.9574%" y="773" width="6.3830%" height="15" fill="rgb(243,201,19)" fg:x="31" fg:w="3"/><text x="66.2074%" y="783.50">ethers_c..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (1 samples, 2.13%)</title><rect x="70.2128%" y="757" width="2.1277%" height="15" fill="rgb(236,59,4)" fg:x="33" fg:w="1"/><text x="70.4628%" y="767.50">&lt;..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (1 samples, 2.13%)</title><rect x="70.2128%" y="741" width="2.1277%" height="15" fill="rgb(254,179,45)" fg:x="33" fg:w="1"/><text x="70.4628%" y="751.50">t..</text></g><g><title>tiny_keccak::Buffer::xorin (1 samples, 2.13%)</title><rect x="70.2128%" y="725" width="2.1277%" height="15" fill="rgb(226,14,10)" fg:x="33" fg:w="1"/><text x="70.4628%" y="735.50">t..</text></g><g><title>tiny_keccak::Buffer::execute (1 samples, 2.13%)</title><rect x="70.2128%" y="709" width="2.1277%" height="15" fill="rgb(244,27,41)" fg:x="33" fg:w="1"/><text x="70.4628%" y="719.50">t..</text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (1 samples, 2.13%)</title><rect x="70.2128%" y="693" width="2.1277%" height="15" fill="rgb(235,35,32)" fg:x="33" fg:w="1"/><text x="70.4628%" y="703.50">t..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 2.13%)</title><rect x="70.2128%" y="677" width="2.1277%" height="15" fill="rgb(218,68,31)" fg:x="33" fg:w="1"/><text x="70.4628%" y="687.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 2.13%)</title><rect x="70.2128%" y="661" width="2.1277%" height="15" fill="rgb(207,120,37)" fg:x="33" fg:w="1"/><text x="70.4628%" y="671.50">&lt;..</text></g><g><title>core::mem::replace (1 samples, 2.13%)</title><rect x="70.2128%" y="645" width="2.1277%" height="15" fill="rgb(227,98,0)" fg:x="33" fg:w="1"/><text x="70.4628%" y="655.50">c..</text></g><g><title>core::ptr::read (1 samples, 2.13%)</title><rect x="70.2128%" y="629" width="2.1277%" height="15" fill="rgb(207,7,3)" fg:x="33" fg:w="1"/><text x="70.4628%" y="639.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="70.2128%" y="613" width="2.1277%" height="15" fill="rgb(206,98,19)" fg:x="33" fg:w="1"/><text x="70.4628%" y="623.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="70.2128%" y="597" width="2.1277%" height="15" fill="rgb(217,5,26)" fg:x="33" fg:w="1"/><text x="70.4628%" y="607.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="70.2128%" y="581" width="2.1277%" height="15" fill="rgb(235,190,38)" fg:x="33" fg:w="1"/><text x="70.4628%" y="591.50">b..</text></g><g><title>colony_rs::contracts::colony::colony::Colony&lt;M&gt;::new (8 samples, 17.02%)</title><rect x="57.4468%" y="1205" width="17.0213%" height="15" fill="rgb(247,86,24)" fg:x="27" fg:w="8"/><text x="57.6968%" y="1215.50">colony_rs::contracts::colo..</text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::new (5 samples, 10.64%)</title><rect x="63.8298%" y="1189" width="10.6383%" height="15" fill="rgb(205,101,16)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1199.50">ethers_contract:..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 10.64%)</title><rect x="63.8298%" y="1173" width="10.6383%" height="15" fill="rgb(246,168,33)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1183.50">&lt;T as core::conv..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from (5 samples, 10.64%)</title><rect x="63.8298%" y="1157" width="10.6383%" height="15" fill="rgb(231,114,1)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1167.50">&lt;ethers_contract..</text></g><g><title>ethers_contract::base::create_mapping (5 samples, 10.64%)</title><rect x="63.8298%" y="1141" width="10.6383%" height="15" fill="rgb(207,184,53)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1151.50">ethers_contract:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 10.64%)</title><rect x="63.8298%" y="1125" width="10.6383%" height="15" fill="rgb(224,95,51)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1135.50">core::iter::trai..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 10.64%)</title><rect x="63.8298%" y="1109" width="10.6383%" height="15" fill="rgb(212,188,45)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1119.50">&lt;std::collection..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 10.64%)</title><rect x="63.8298%" y="1093" width="10.6383%" height="15" fill="rgb(223,154,38)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1103.50">&lt;std::collection..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 10.64%)</title><rect x="63.8298%" y="1077" width="10.6383%" height="15" fill="rgb(251,22,52)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1087.50">&lt;hashbrown::map:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 10.64%)</title><rect x="63.8298%" y="1061" width="10.6383%" height="15" fill="rgb(229,209,22)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1071.50">core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 10.64%)</title><rect x="63.8298%" y="1045" width="10.6383%" height="15" fill="rgb(234,138,34)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1055.50">&lt;core::iter::ada..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 10.64%)</title><rect x="63.8298%" y="1029" width="10.6383%" height="15" fill="rgb(212,95,11)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1039.50">&lt;core::iter::ada..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (5 samples, 10.64%)</title><rect x="63.8298%" y="1013" width="10.6383%" height="15" fill="rgb(240,179,47)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1023.50">core::iter::adap..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 10.64%)</title><rect x="63.8298%" y="997" width="10.6383%" height="15" fill="rgb(240,163,11)" fg:x="30" fg:w="5"/><text x="64.0798%" y="1007.50">&lt;core::iter::ada..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 10.64%)</title><rect x="63.8298%" y="981" width="10.6383%" height="15" fill="rgb(236,37,12)" fg:x="30" fg:w="5"/><text x="64.0798%" y="991.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 10.64%)</title><rect x="63.8298%" y="965" width="10.6383%" height="15" fill="rgb(232,164,16)" fg:x="30" fg:w="5"/><text x="64.0798%" y="975.50">core::iter::trai..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 10.64%)</title><rect x="63.8298%" y="949" width="10.6383%" height="15" fill="rgb(244,205,15)" fg:x="30" fg:w="5"/><text x="64.0798%" y="959.50">core::iter::adap..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (5 samples, 10.64%)</title><rect x="63.8298%" y="933" width="10.6383%" height="15" fill="rgb(223,117,47)" fg:x="30" fg:w="5"/><text x="64.0798%" y="943.50">core::iter::adap..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (5 samples, 10.64%)</title><rect x="63.8298%" y="917" width="10.6383%" height="15" fill="rgb(244,107,35)" fg:x="30" fg:w="5"/><text x="64.0798%" y="927.50">&lt;core::iter::ada..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 10.64%)</title><rect x="63.8298%" y="901" width="10.6383%" height="15" fill="rgb(205,140,8)" fg:x="30" fg:w="5"/><text x="64.0798%" y="911.50">&lt;core::iter::ada..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="72.3404%" y="885" width="2.1277%" height="15" fill="rgb(228,84,46)" fg:x="34" fg:w="1"/><text x="72.5904%" y="895.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="72.3404%" y="869" width="2.1277%" height="15" fill="rgb(254,188,9)" fg:x="34" fg:w="1"/><text x="72.5904%" y="879.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="72.3404%" y="853" width="2.1277%" height="15" fill="rgb(206,112,54)" fg:x="34" fg:w="1"/><text x="72.5904%" y="863.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="74.4681%" y="949" width="2.1277%" height="15" fill="rgb(216,84,49)" fg:x="35" fg:w="1"/><text x="74.7181%" y="959.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[ethabi::param::Param]&gt; (1 samples, 2.13%)</title><rect x="74.4681%" y="933" width="2.1277%" height="15" fill="rgb(214,194,35)" fg:x="35" fg:w="1"/><text x="74.7181%" y="943.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::param::Param&gt; (1 samples, 2.13%)</title><rect x="74.4681%" y="917" width="2.1277%" height="15" fill="rgb(249,28,3)" fg:x="35" fg:w="1"/><text x="74.7181%" y="927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 2.13%)</title><rect x="74.4681%" y="901" width="2.1277%" height="15" fill="rgb(222,56,52)" fg:x="35" fg:w="1"/><text x="74.7181%" y="911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 2.13%)</title><rect x="74.4681%" y="885" width="2.1277%" height="15" fill="rgb(245,217,50)" fg:x="35" fg:w="1"/><text x="74.7181%" y="895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 2.13%)</title><rect x="74.4681%" y="869" width="2.1277%" height="15" fill="rgb(213,201,24)" fg:x="35" fg:w="1"/><text x="74.7181%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 2.13%)</title><rect x="74.4681%" y="853" width="2.1277%" height="15" fill="rgb(248,116,28)" fg:x="35" fg:w="1"/><text x="74.7181%" y="863.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="74.4681%" y="837" width="2.1277%" height="15" fill="rgb(219,72,43)" fg:x="35" fg:w="1"/><text x="74.7181%" y="847.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 2.13%)</title><rect x="74.4681%" y="821" width="2.1277%" height="15" fill="rgb(209,138,14)" fg:x="35" fg:w="1"/><text x="74.7181%" y="831.50">a..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="74.4681%" y="805" width="2.1277%" height="15" fill="rgb(222,18,33)" fg:x="35" fg:w="1"/><text x="74.7181%" y="815.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="74.4681%" y="789" width="2.1277%" height="15" fill="rgb(213,199,7)" fg:x="35" fg:w="1"/><text x="74.7181%" y="799.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="74.4681%" y="773" width="2.1277%" height="15" fill="rgb(250,110,10)" fg:x="35" fg:w="1"/><text x="74.7181%" y="783.50">b..</text></g><g><title>colony_rs::get_domain::{{closure}} (10 samples, 21.28%)</title><rect x="57.4468%" y="1221" width="21.2766%" height="15" fill="rgb(248,123,6)" fg:x="27" fg:w="10"/><text x="57.6968%" y="1231.50">colony_rs::get_domain::{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;colony_rs::contracts::colony::colony::Colony&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="1205" width="4.2553%" height="15" fill="rgb(206,91,31)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1215.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::contract::ContractInstance&lt;alloc::sync::Arc&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;,ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="1189" width="4.2553%" height="15" fill="rgb(211,154,13)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1199.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::base::BaseContract&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="1173" width="4.2553%" height="15" fill="rgb(225,148,7)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1183.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::contract::Contract&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="1157" width="4.2553%" height="15" fill="rgb(220,160,43)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1167.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="1141" width="4.2553%" height="15" fill="rgb(213,52,39)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1151.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 4.26%)</title><rect x="74.4681%" y="1125" width="4.2553%" height="15" fill="rgb(243,137,7)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1135.50">&lt;allo..</text></g><g><title>core::mem::drop (2 samples, 4.26%)</title><rect x="74.4681%" y="1109" width="4.2553%" height="15" fill="rgb(230,79,13)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1119.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="1093" width="4.2553%" height="15" fill="rgb(247,105,23)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1103.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 4.26%)</title><rect x="74.4681%" y="1077" width="4.2553%" height="15" fill="rgb(223,179,41)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1087.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2 samples, 4.26%)</title><rect x="74.4681%" y="1061" width="4.2553%" height="15" fill="rgb(218,9,34)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1071.50">alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2 samples, 4.26%)</title><rect x="74.4681%" y="1045" width="4.2553%" height="15" fill="rgb(222,106,8)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1055.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="1029" width="4.2553%" height="15" fill="rgb(211,220,0)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1039.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 4.26%)</title><rect x="74.4681%" y="1013" width="4.2553%" height="15" fill="rgb(229,52,16)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1023.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[ethabi::function::Function]&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="997" width="4.2553%" height="15" fill="rgb(212,155,18)" fg:x="35" fg:w="2"/><text x="74.7181%" y="1007.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::function::Function&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="981" width="4.2553%" height="15" fill="rgb(242,21,14)" fg:x="35" fg:w="2"/><text x="74.7181%" y="991.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::param::Param&gt;&gt; (2 samples, 4.26%)</title><rect x="74.4681%" y="965" width="4.2553%" height="15" fill="rgb(222,19,48)" fg:x="35" fg:w="2"/><text x="74.7181%" y="975.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ethabi::param::Param&gt;&gt; (1 samples, 2.13%)</title><rect x="76.5957%" y="949" width="2.1277%" height="15" fill="rgb(232,45,27)" fg:x="36" fg:w="1"/><text x="76.8457%" y="959.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="76.5957%" y="933" width="2.1277%" height="15" fill="rgb(249,103,42)" fg:x="36" fg:w="1"/><text x="76.8457%" y="943.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 2.13%)</title><rect x="76.5957%" y="917" width="2.1277%" height="15" fill="rgb(246,81,33)" fg:x="36" fg:w="1"/><text x="76.8457%" y="927.50">a..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="76.5957%" y="901" width="2.1277%" height="15" fill="rgb(252,33,42)" fg:x="36" fg:w="1"/><text x="76.8457%" y="911.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="76.5957%" y="885" width="2.1277%" height="15" fill="rgb(209,212,41)" fg:x="36" fg:w="1"/><text x="76.8457%" y="895.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="76.5957%" y="869" width="2.1277%" height="15" fill="rgb(207,154,6)" fg:x="36" fg:w="1"/><text x="76.8457%" y="879.50">b..</text></g><g><title>&lt;ethabi::contract::Contract as core::clone::Clone&gt;::clone (1 samples, 2.13%)</title><rect x="78.7234%" y="1189" width="2.1277%" height="15" fill="rgb(223,64,47)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1199.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.13%)</title><rect x="78.7234%" y="1173" width="2.1277%" height="15" fill="rgb(211,161,38)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 2.13%)</title><rect x="78.7234%" y="1157" width="2.1277%" height="15" fill="rgb(219,138,40)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1167.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 2.13%)</title><rect x="78.7234%" y="1141" width="2.1277%" height="15" fill="rgb(241,228,46)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1151.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.13%)</title><rect x="78.7234%" y="1125" width="2.1277%" height="15" fill="rgb(223,209,38)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1135.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 2.13%)</title><rect x="78.7234%" y="1109" width="2.1277%" height="15" fill="rgb(236,164,45)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1119.50">a..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 2.13%)</title><rect x="78.7234%" y="1093" width="2.1277%" height="15" fill="rgb(231,15,5)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1103.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 2.13%)</title><rect x="78.7234%" y="1077" width="2.1277%" height="15" fill="rgb(252,35,15)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1087.50">&lt;..</text></g><g><title>&lt;ethabi::event::Event as core::clone::Clone&gt;::clone (1 samples, 2.13%)</title><rect x="78.7234%" y="1061" width="2.1277%" height="15" fill="rgb(248,181,18)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1071.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.13%)</title><rect x="78.7234%" y="1045" width="2.1277%" height="15" fill="rgb(233,39,42)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1055.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 2.13%)</title><rect x="78.7234%" y="1029" width="2.1277%" height="15" fill="rgb(238,110,33)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1039.50">a..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 2.13%)</title><rect x="78.7234%" y="1013" width="2.1277%" height="15" fill="rgb(233,195,10)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1023.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 2.13%)</title><rect x="78.7234%" y="997" width="2.1277%" height="15" fill="rgb(254,105,3)" fg:x="37" fg:w="1"/><text x="78.9734%" y="1007.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="78.7234%" y="981" width="2.1277%" height="15" fill="rgb(221,225,9)" fg:x="37" fg:w="1"/><text x="78.9734%" y="991.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="78.7234%" y="965" width="2.1277%" height="15" fill="rgb(224,227,45)" fg:x="37" fg:w="1"/><text x="78.9734%" y="975.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="78.7234%" y="949" width="2.1277%" height="15" fill="rgb(229,198,43)" fg:x="37" fg:w="1"/><text x="78.9734%" y="959.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="78.7234%" y="933" width="2.1277%" height="15" fill="rgb(206,209,35)" fg:x="37" fg:w="1"/><text x="78.9734%" y="943.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="78.7234%" y="917" width="2.1277%" height="15" fill="rgb(245,195,53)" fg:x="37" fg:w="1"/><text x="78.9734%" y="927.50">b..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (1 samples, 2.13%)</title><rect x="80.8511%" y="709" width="2.1277%" height="15" fill="rgb(240,92,26)" fg:x="38" fg:w="1"/><text x="81.1011%" y="719.50">t..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (1 samples, 2.13%)</title><rect x="80.8511%" y="693" width="2.1277%" height="15" fill="rgb(207,40,23)" fg:x="38" fg:w="1"/><text x="81.1011%" y="703.50">t..</text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (1 samples, 2.13%)</title><rect x="80.8511%" y="677" width="2.1277%" height="15" fill="rgb(223,111,35)" fg:x="38" fg:w="1"/><text x="81.1011%" y="687.50">&lt;..</text></g><g><title>tiny_keccak::keccakf::keccakf (1 samples, 2.13%)</title><rect x="80.8511%" y="661" width="2.1277%" height="15" fill="rgb(229,147,28)" fg:x="38" fg:w="1"/><text x="81.1011%" y="671.50">t..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="80.8511%" y="645" width="2.1277%" height="15" fill="rgb(211,29,28)" fg:x="38" fg:w="1"/><text x="81.1011%" y="655.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="80.8511%" y="629" width="2.1277%" height="15" fill="rgb(228,72,33)" fg:x="38" fg:w="1"/><text x="81.1011%" y="639.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="80.8511%" y="613" width="2.1277%" height="15" fill="rgb(205,214,31)" fg:x="38" fg:w="1"/><text x="81.1011%" y="623.50">b..</text></g><g><title>colony_rs::contracts::colony_network::colony_network::ColonyNetwork&lt;M&gt;::new (3 samples, 6.38%)</title><rect x="78.7234%" y="1205" width="6.3830%" height="15" fill="rgb(224,111,15)" fg:x="37" fg:w="3"/><text x="78.9734%" y="1215.50">colony_r..</text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::new (2 samples, 4.26%)</title><rect x="80.8511%" y="1189" width="4.2553%" height="15" fill="rgb(253,21,26)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1199.50">ether..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 4.26%)</title><rect x="80.8511%" y="1173" width="4.2553%" height="15" fill="rgb(245,139,43)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1183.50">&lt;T as..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from (2 samples, 4.26%)</title><rect x="80.8511%" y="1157" width="4.2553%" height="15" fill="rgb(252,170,7)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1167.50">&lt;ethe..</text></g><g><title>ethers_contract::base::create_mapping (2 samples, 4.26%)</title><rect x="80.8511%" y="1141" width="4.2553%" height="15" fill="rgb(231,118,14)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1151.50">ether..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 4.26%)</title><rect x="80.8511%" y="1125" width="4.2553%" height="15" fill="rgb(238,83,0)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1135.50">core:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 4.26%)</title><rect x="80.8511%" y="1109" width="4.2553%" height="15" fill="rgb(221,39,39)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1119.50">&lt;std:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 4.26%)</title><rect x="80.8511%" y="1093" width="4.2553%" height="15" fill="rgb(222,119,46)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1103.50">&lt;std:..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 4.26%)</title><rect x="80.8511%" y="1077" width="4.2553%" height="15" fill="rgb(222,165,49)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1087.50">&lt;hash..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 4.26%)</title><rect x="80.8511%" y="1061" width="4.2553%" height="15" fill="rgb(219,113,52)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1071.50">core:..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="1045" width="4.2553%" height="15" fill="rgb(214,7,15)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1055.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="1029" width="4.2553%" height="15" fill="rgb(235,32,4)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1039.50">&lt;core..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (2 samples, 4.26%)</title><rect x="80.8511%" y="1013" width="4.2553%" height="15" fill="rgb(238,90,54)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1023.50">core:..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="997" width="4.2553%" height="15" fill="rgb(213,208,19)" fg:x="38" fg:w="2"/><text x="81.1011%" y="1007.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="981" width="4.2553%" height="15" fill="rgb(233,156,4)" fg:x="38" fg:w="2"/><text x="81.1011%" y="991.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="965" width="4.2553%" height="15" fill="rgb(207,194,5)" fg:x="38" fg:w="2"/><text x="81.1011%" y="975.50">core:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 4.26%)</title><rect x="80.8511%" y="949" width="4.2553%" height="15" fill="rgb(206,111,30)" fg:x="38" fg:w="2"/><text x="81.1011%" y="959.50">core:..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (2 samples, 4.26%)</title><rect x="80.8511%" y="933" width="4.2553%" height="15" fill="rgb(243,70,54)" fg:x="38" fg:w="2"/><text x="81.1011%" y="943.50">core:..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (2 samples, 4.26%)</title><rect x="80.8511%" y="917" width="4.2553%" height="15" fill="rgb(242,28,8)" fg:x="38" fg:w="2"/><text x="81.1011%" y="927.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="901" width="4.2553%" height="15" fill="rgb(219,106,18)" fg:x="38" fg:w="2"/><text x="81.1011%" y="911.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="885" width="4.2553%" height="15" fill="rgb(244,222,10)" fg:x="38" fg:w="2"/><text x="81.1011%" y="895.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 4.26%)</title><rect x="80.8511%" y="869" width="4.2553%" height="15" fill="rgb(236,179,52)" fg:x="38" fg:w="2"/><text x="81.1011%" y="879.50">core:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 4.26%)</title><rect x="80.8511%" y="853" width="4.2553%" height="15" fill="rgb(213,23,39)" fg:x="38" fg:w="2"/><text x="81.1011%" y="863.50">&lt;core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 4.26%)</title><rect x="80.8511%" y="837" width="4.2553%" height="15" fill="rgb(238,48,10)" fg:x="38" fg:w="2"/><text x="81.1011%" y="847.50">core:..</text></g><g><title>ethers_contract::base::create_mapping::{{closure}}::{{closure}} (2 samples, 4.26%)</title><rect x="80.8511%" y="821" width="4.2553%" height="15" fill="rgb(251,196,23)" fg:x="38" fg:w="2"/><text x="81.1011%" y="831.50">ether..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from::{{closure}} (2 samples, 4.26%)</title><rect x="80.8511%" y="805" width="4.2553%" height="15" fill="rgb(250,152,24)" fg:x="38" fg:w="2"/><text x="81.1011%" y="815.50">&lt;ethe..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::selector (2 samples, 4.26%)</title><rect x="80.8511%" y="789" width="4.2553%" height="15" fill="rgb(209,150,17)" fg:x="38" fg:w="2"/><text x="81.1011%" y="799.50">&lt;etha..</text></g><g><title>ethers_core::utils::hash::id (2 samples, 4.26%)</title><rect x="80.8511%" y="773" width="4.2553%" height="15" fill="rgb(234,202,34)" fg:x="38" fg:w="2"/><text x="81.1011%" y="783.50">ether..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (2 samples, 4.26%)</title><rect x="80.8511%" y="757" width="4.2553%" height="15" fill="rgb(253,148,53)" fg:x="38" fg:w="2"/><text x="81.1011%" y="767.50">&lt;tiny..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (2 samples, 4.26%)</title><rect x="80.8511%" y="741" width="4.2553%" height="15" fill="rgb(218,129,16)" fg:x="38" fg:w="2"/><text x="81.1011%" y="751.50">tiny_..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (2 samples, 4.26%)</title><rect x="80.8511%" y="725" width="4.2553%" height="15" fill="rgb(216,85,19)" fg:x="38" fg:w="2"/><text x="81.1011%" y="735.50">tiny_..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::pad (1 samples, 2.13%)</title><rect x="82.9787%" y="709" width="2.1277%" height="15" fill="rgb(235,228,7)" fg:x="39" fg:w="1"/><text x="83.2287%" y="719.50">t..</text></g><g><title>tiny_keccak::Buffer::pad (1 samples, 2.13%)</title><rect x="82.9787%" y="693" width="2.1277%" height="15" fill="rgb(245,175,0)" fg:x="39" fg:w="1"/><text x="83.2287%" y="703.50">t..</text></g><g><title>tiny_keccak::Buffer::execute (1 samples, 2.13%)</title><rect x="82.9787%" y="677" width="2.1277%" height="15" fill="rgb(208,168,36)" fg:x="39" fg:w="1"/><text x="83.2287%" y="687.50">t..</text></g><g><title>tiny_keccak::Buffer::pad::{{closure}} (1 samples, 2.13%)</title><rect x="82.9787%" y="661" width="2.1277%" height="15" fill="rgb(246,171,24)" fg:x="39" fg:w="1"/><text x="83.2287%" y="671.50">t..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="82.9787%" y="645" width="2.1277%" height="15" fill="rgb(215,142,24)" fg:x="39" fg:w="1"/><text x="83.2287%" y="655.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="82.9787%" y="629" width="2.1277%" height="15" fill="rgb(250,187,7)" fg:x="39" fg:w="1"/><text x="83.2287%" y="639.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="82.9787%" y="613" width="2.1277%" height="15" fill="rgb(228,66,33)" fg:x="39" fg:w="1"/><text x="83.2287%" y="623.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;colony_rs::contracts::colony_network::colony_network::ColonyNetwork&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (1 samples, 2.13%)</title><rect x="85.1064%" y="1205" width="2.1277%" height="15" fill="rgb(234,215,21)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::contract::ContractInstance&lt;alloc::sync::Arc&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;,ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (1 samples, 2.13%)</title><rect x="85.1064%" y="1189" width="2.1277%" height="15" fill="rgb(222,191,20)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::base::BaseContract&gt; (1 samples, 2.13%)</title><rect x="85.1064%" y="1173" width="2.1277%" height="15" fill="rgb(245,79,54)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1183.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::contract::Contract&gt; (1 samples, 2.13%)</title><rect x="85.1064%" y="1157" width="2.1277%" height="15" fill="rgb(240,10,37)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1167.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (1 samples, 2.13%)</title><rect x="85.1064%" y="1141" width="2.1277%" height="15" fill="rgb(214,192,32)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1151.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="85.1064%" y="1125" width="2.1277%" height="15" fill="rgb(209,36,54)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1135.50">&lt;..</text></g><g><title>core::mem::drop (1 samples, 2.13%)</title><rect x="85.1064%" y="1109" width="2.1277%" height="15" fill="rgb(220,10,11)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1119.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (1 samples, 2.13%)</title><rect x="85.1064%" y="1093" width="2.1277%" height="15" fill="rgb(221,106,17)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1103.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="85.1064%" y="1077" width="2.1277%" height="15" fill="rgb(251,142,44)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1087.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1 samples, 2.13%)</title><rect x="85.1064%" y="1061" width="2.1277%" height="15" fill="rgb(238,13,15)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1071.50">a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1 samples, 2.13%)</title><rect x="85.1064%" y="1045" width="2.1277%" height="15" fill="rgb(208,107,27)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1055.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt; (1 samples, 2.13%)</title><rect x="85.1064%" y="1029" width="2.1277%" height="15" fill="rgb(205,136,37)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1039.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="85.1064%" y="1013" width="2.1277%" height="15" fill="rgb(250,205,27)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1023.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 2.13%)</title><rect x="85.1064%" y="997" width="2.1277%" height="15" fill="rgb(210,80,43)" fg:x="40" fg:w="1"/><text x="85.3564%" y="1007.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 2.13%)</title><rect x="85.1064%" y="981" width="2.1277%" height="15" fill="rgb(247,160,36)" fg:x="40" fg:w="1"/><text x="85.3564%" y="991.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="85.1064%" y="965" width="2.1277%" height="15" fill="rgb(234,13,49)" fg:x="40" fg:w="1"/><text x="85.3564%" y="975.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="85.1064%" y="949" width="2.1277%" height="15" fill="rgb(234,122,0)" fg:x="40" fg:w="1"/><text x="85.3564%" y="959.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="85.1064%" y="933" width="2.1277%" height="15" fill="rgb(207,146,38)" fg:x="40" fg:w="1"/><text x="85.3564%" y="943.50">b..</text></g><g><title>&lt;trust_dns_resolver::lookup_ip::LookupIpFuture&lt;C,E&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="87.2340%" y="421" width="2.1277%" height="15" fill="rgb(207,177,25)" fg:x="41" fg:w="1"/><text x="87.4840%" y="431.50">&lt;..</text></g><g><title>trust_dns_resolver::lookup_ip::strategic_lookup::{{closure}} (1 samples, 2.13%)</title><rect x="87.2340%" y="405" width="2.1277%" height="15" fill="rgb(211,178,42)" fg:x="41" fg:w="1"/><text x="87.4840%" y="415.50">t..</text></g><g><title>trust_dns_resolver::lookup_ip::ipv4_then_ipv6::{{closure}} (1 samples, 2.13%)</title><rect x="87.2340%" y="389" width="2.1277%" height="15" fill="rgb(230,69,54)" fg:x="41" fg:w="1"/><text x="87.4840%" y="399.50">t..</text></g><g><title>trust_dns_resolver::lookup_ip::rt_then_swap::{{closure}} (1 samples, 2.13%)</title><rect x="87.2340%" y="373" width="2.1277%" height="15" fill="rgb(214,135,41)" fg:x="41" fg:w="1"/><text x="87.4840%" y="383.50">t..</text></g><g><title>trust_dns_resolver::lookup_ip::hosts_lookup::{{closure}} (1 samples, 2.13%)</title><rect x="87.2340%" y="357" width="2.1277%" height="15" fill="rgb(237,67,25)" fg:x="41" fg:w="1"/><text x="87.4840%" y="367.50">t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 2.13%)</title><rect x="87.2340%" y="341" width="2.1277%" height="15" fill="rgb(222,189,50)" fg:x="41" fg:w="1"/><text x="87.4840%" y="351.50">&lt;..</text></g><g><title>trust_dns_resolver::caching_client::CachingClient&lt;C,E&gt;::inner_lookup::{{closure}} (1 samples, 2.13%)</title><rect x="87.2340%" y="325" width="2.1277%" height="15" fill="rgb(245,148,34)" fg:x="41" fg:w="1"/><text x="87.4840%" y="335.50">t..</text></g><g><title>&lt;trust_dns_proto::rr::domain::usage::IP6_ARPA_1 as core::ops::deref::Deref&gt;::deref (1 samples, 2.13%)</title><rect x="87.2340%" y="309" width="2.1277%" height="15" fill="rgb(222,29,6)" fg:x="41" fg:w="1"/><text x="87.4840%" y="319.50">&lt;..</text></g><g><title>&lt;trust_dns_proto::rr::domain::usage::IP6_ARPA_1 as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 2.13%)</title><rect x="87.2340%" y="293" width="2.1277%" height="15" fill="rgb(221,189,43)" fg:x="41" fg:w="1"/><text x="87.4840%" y="303.50">&lt;..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 2.13%)</title><rect x="87.2340%" y="277" width="2.1277%" height="15" fill="rgb(207,36,27)" fg:x="41" fg:w="1"/><text x="87.4840%" y="287.50">l..</text></g><g><title>std::sync::once::Once::call_once (1 samples, 2.13%)</title><rect x="87.2340%" y="261" width="2.1277%" height="15" fill="rgb(217,90,24)" fg:x="41" fg:w="1"/><text x="87.4840%" y="271.50">s..</text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 2.13%)</title><rect x="87.2340%" y="245" width="2.1277%" height="15" fill="rgb(224,66,35)" fg:x="41" fg:w="1"/><text x="87.4840%" y="255.50">s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 2.13%)</title><rect x="87.2340%" y="229" width="2.1277%" height="15" fill="rgb(221,13,50)" fg:x="41" fg:w="1"/><text x="87.4840%" y="239.50">s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 2.13%)</title><rect x="87.2340%" y="213" width="2.1277%" height="15" fill="rgb(236,68,49)" fg:x="41" fg:w="1"/><text x="87.4840%" y="223.50">l..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 2.13%)</title><rect x="87.2340%" y="197" width="2.1277%" height="15" fill="rgb(229,146,28)" fg:x="41" fg:w="1"/><text x="87.4840%" y="207.50">c..</text></g><g><title>&lt;trust_dns_proto::rr::domain::usage::IP6_ARPA_1 as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 2.13%)</title><rect x="87.2340%" y="181" width="2.1277%" height="15" fill="rgb(225,31,38)" fg:x="41" fg:w="1"/><text x="87.4840%" y="191.50">&lt;..</text></g><g><title>&lt;trust_dns_proto::rr::domain::usage::IP6_ARPA as core::ops::deref::Deref&gt;::deref (1 samples, 2.13%)</title><rect x="87.2340%" y="165" width="2.1277%" height="15" fill="rgb(250,208,3)" fg:x="41" fg:w="1"/><text x="87.4840%" y="175.50">&lt;..</text></g><g><title>&lt;trust_dns_proto::rr::domain::usage::IP6_ARPA as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 2.13%)</title><rect x="87.2340%" y="149" width="2.1277%" height="15" fill="rgb(246,54,23)" fg:x="41" fg:w="1"/><text x="87.4840%" y="159.50">&lt;..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 2.13%)</title><rect x="87.2340%" y="133" width="2.1277%" height="15" fill="rgb(243,76,11)" fg:x="41" fg:w="1"/><text x="87.4840%" y="143.50">l..</text></g><g><title>std::sync::once::Once::call_once (1 samples, 2.13%)</title><rect x="87.2340%" y="117" width="2.1277%" height="15" fill="rgb(245,21,50)" fg:x="41" fg:w="1"/><text x="87.4840%" y="127.50">s..</text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 2.13%)</title><rect x="87.2340%" y="101" width="2.1277%" height="15" fill="rgb(228,9,43)" fg:x="41" fg:w="1"/><text x="87.4840%" y="111.50">s..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::once::futex::CompletionGuard&gt; (1 samples, 2.13%)</title><rect x="87.2340%" y="85" width="2.1277%" height="15" fill="rgb(208,100,47)" fg:x="41" fg:w="1"/><text x="87.4840%" y="95.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="87.2340%" y="69" width="2.1277%" height="15" fill="rgb(232,26,8)" fg:x="41" fg:w="1"/><text x="87.4840%" y="79.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="87.2340%" y="53" width="2.1277%" height="15" fill="rgb(216,166,38)" fg:x="41" fg:w="1"/><text x="87.4840%" y="63.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="87.2340%" y="37" width="2.1277%" height="15" fill="rgb(251,202,51)" fg:x="41" fg:w="1"/><text x="87.4840%" y="47.50">b..</text></g><g><title>hyper::client::connect::dns::resolve::{{closure}} (2 samples, 4.26%)</title><rect x="87.2340%" y="485" width="4.2553%" height="15" fill="rgb(254,216,34)" fg:x="41" fg:w="2"/><text x="87.4840%" y="495.50">hyper..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 4.26%)</title><rect x="87.2340%" y="469" width="4.2553%" height="15" fill="rgb(251,32,27)" fg:x="41" fg:w="2"/><text x="87.4840%" y="479.50">&lt;core..</text></g><g><title>&lt;reqwest::dns::trust_dns::TrustDnsResolver as reqwest::dns::resolve::Resolve&gt;::resolve::{{closure}} (2 samples, 4.26%)</title><rect x="87.2340%" y="453" width="4.2553%" height="15" fill="rgb(208,127,28)" fg:x="41" fg:w="2"/><text x="87.4840%" y="463.50">&lt;reqw..</text></g><g><title>trust_dns_resolver::async_resolver::AsyncResolver&lt;C,P&gt;::lookup_ip::{{closure}} (2 samples, 4.26%)</title><rect x="87.2340%" y="437" width="4.2553%" height="15" fill="rgb(224,137,22)" fg:x="41" fg:w="2"/><text x="87.4840%" y="447.50">trust..</text></g><g><title>trust_dns_resolver::async_resolver::AsyncResolver&lt;C,P&gt;::build_names (1 samples, 2.13%)</title><rect x="89.3617%" y="421" width="2.1277%" height="15" fill="rgb(254,70,32)" fg:x="42" fg:w="1"/><text x="89.6117%" y="431.50">t..</text></g><g><title>trust_dns_proto::rr::domain::name::Name::zone_of (1 samples, 2.13%)</title><rect x="89.3617%" y="405" width="2.1277%" height="15" fill="rgb(229,75,37)" fg:x="42" fg:w="1"/><text x="89.6117%" y="415.50">t..</text></g><g><title>trust_dns_proto::rr::domain::name::Name::to_lowercase (1 samples, 2.13%)</title><rect x="89.3617%" y="389" width="2.1277%" height="15" fill="rgb(252,64,23)" fg:x="42" fg:w="1"/><text x="89.6117%" y="399.50">t..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.13%)</title><rect x="89.3617%" y="373" width="2.1277%" height="15" fill="rgb(232,162,48)" fg:x="42" fg:w="1"/><text x="89.6117%" y="383.50">c..</text></g><g><title>&lt;tinyvec::tinyvec::TinyVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as tinyvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="89.3617%" y="357" width="2.1277%" height="15" fill="rgb(246,160,12)" fg:x="42" fg:w="1"/><text x="89.6117%" y="367.50">&lt;..</text></g><g><title>&lt;tinyvec::tinyvec::TinyVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as tinyvec::array::Array&gt;::Item&gt;&gt;::extend (1 samples, 2.13%)</title><rect x="89.3617%" y="341" width="2.1277%" height="15" fill="rgb(247,166,0)" fg:x="42" fg:w="1"/><text x="89.6117%" y="351.50">&lt;..</text></g><g><title>tinyvec::arrayvec::ArrayVec&lt;A&gt;::fill (1 samples, 2.13%)</title><rect x="89.3617%" y="325" width="2.1277%" height="15" fill="rgb(249,219,21)" fg:x="42" fg:w="1"/><text x="89.6117%" y="335.50">t..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="89.3617%" y="309" width="2.1277%" height="15" fill="rgb(205,209,3)" fg:x="42" fg:w="1"/><text x="89.6117%" y="319.50">&lt;..</text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="89.3617%" y="293" width="2.1277%" height="15" fill="rgb(243,44,1)" fg:x="42" fg:w="1"/><text x="89.6117%" y="303.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="89.3617%" y="277" width="2.1277%" height="15" fill="rgb(206,159,16)" fg:x="42" fg:w="1"/><text x="89.6117%" y="287.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="89.3617%" y="261" width="2.1277%" height="15" fill="rgb(244,77,30)" fg:x="42" fg:w="1"/><text x="89.6117%" y="271.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 2.13%)</title><rect x="89.3617%" y="245" width="2.1277%" height="15" fill="rgb(218,69,12)" fg:x="42" fg:w="1"/><text x="89.6117%" y="255.50">c..</text></g><g><title>core::ptr::null (1 samples, 2.13%)</title><rect x="89.3617%" y="229" width="2.1277%" height="15" fill="rgb(212,87,7)" fg:x="42" fg:w="1"/><text x="89.6117%" y="239.50">c..</text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 2.13%)</title><rect x="89.3617%" y="213" width="2.1277%" height="15" fill="rgb(245,114,25)" fg:x="42" fg:w="1"/><text x="89.6117%" y="223.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="89.3617%" y="197" width="2.1277%" height="15" fill="rgb(210,61,42)" fg:x="42" fg:w="1"/><text x="89.6117%" y="207.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="89.3617%" y="181" width="2.1277%" height="15" fill="rgb(211,52,33)" fg:x="42" fg:w="1"/><text x="89.6117%" y="191.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="89.3617%" y="165" width="2.1277%" height="15" fill="rgb(234,58,33)" fg:x="42" fg:w="1"/><text x="89.6117%" y="175.50">b..</text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="1045" width="6.3830%" height="15" fill="rgb(220,115,36)" fg:x="41" fg:w="3"/><text x="87.4840%" y="1055.50">&lt;reqwest..</text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="1029" width="6.3830%" height="15" fill="rgb(243,153,54)" fg:x="41" fg:w="3"/><text x="87.4840%" y="1039.50">&lt;reqwest..</text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="1013" width="6.3830%" height="15" fill="rgb(251,47,18)" fg:x="41" fg:w="3"/><text x="87.4840%" y="1023.50">&lt;hyper::..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="997" width="6.3830%" height="15" fill="rgb(242,102,42)" fg:x="41" fg:w="3"/><text x="87.4840%" y="1007.50">hyper::c..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="981" width="6.3830%" height="15" fill="rgb(234,31,38)" fg:x="41" fg:w="3"/><text x="87.4840%" y="991.50">hyper::c..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="965" width="6.3830%" height="15" fill="rgb(221,117,51)" fg:x="41" fg:w="3"/><text x="87.4840%" y="975.50">hyper::c..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="949" width="6.3830%" height="15" fill="rgb(212,20,18)" fg:x="41" fg:w="3"/><text x="87.4840%" y="959.50">&lt;futures..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (3 samples, 6.38%)</title><rect x="87.2340%" y="933" width="6.3830%" height="15" fill="rgb(245,133,36)" fg:x="41" fg:w="3"/><text x="87.4840%" y="943.50">futures_..</text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="917" width="6.3830%" height="15" fill="rgb(212,6,19)" fg:x="41" fg:w="3"/><text x="87.4840%" y="927.50">&lt;hyper::..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="901" width="6.3830%" height="15" fill="rgb(218,1,36)" fg:x="41" fg:w="3"/><text x="87.4840%" y="911.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="885" width="6.3830%" height="15" fill="rgb(246,84,54)" fg:x="41" fg:w="3"/><text x="87.4840%" y="895.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="869" width="6.3830%" height="15" fill="rgb(242,110,6)" fg:x="41" fg:w="3"/><text x="87.4840%" y="879.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="853" width="6.3830%" height="15" fill="rgb(214,47,5)" fg:x="41" fg:w="3"/><text x="87.4840%" y="863.50">&lt;futures..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 6.38%)</title><rect x="87.2340%" y="837" width="6.3830%" height="15" fill="rgb(218,159,25)" fg:x="41" fg:w="3"/><text x="87.4840%" y="847.50">&lt;F as fu..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="821" width="6.3830%" height="15" fill="rgb(215,211,28)" fg:x="41" fg:w="3"/><text x="87.4840%" y="831.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="805" width="6.3830%" height="15" fill="rgb(238,59,32)" fg:x="41" fg:w="3"/><text x="87.4840%" y="815.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="789" width="6.3830%" height="15" fill="rgb(226,82,3)" fg:x="41" fg:w="3"/><text x="87.4840%" y="799.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="773" width="6.3830%" height="15" fill="rgb(240,164,32)" fg:x="41" fg:w="3"/><text x="87.4840%" y="783.50">&lt;futures..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 6.38%)</title><rect x="87.2340%" y="757" width="6.3830%" height="15" fill="rgb(232,46,7)" fg:x="41" fg:w="3"/><text x="87.4840%" y="767.50">&lt;F as fu..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="741" width="6.3830%" height="15" fill="rgb(229,129,53)" fg:x="41" fg:w="3"/><text x="87.4840%" y="751.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="725" width="6.3830%" height="15" fill="rgb(234,188,29)" fg:x="41" fg:w="3"/><text x="87.4840%" y="735.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="709" width="6.3830%" height="15" fill="rgb(246,141,4)" fg:x="41" fg:w="3"/><text x="87.4840%" y="719.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="693" width="6.3830%" height="15" fill="rgb(229,23,39)" fg:x="41" fg:w="3"/><text x="87.4840%" y="703.50">&lt;futures..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 6.38%)</title><rect x="87.2340%" y="677" width="6.3830%" height="15" fill="rgb(206,12,3)" fg:x="41" fg:w="3"/><text x="87.4840%" y="687.50">&lt;F as fu..</text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="661" width="6.3830%" height="15" fill="rgb(252,226,20)" fg:x="41" fg:w="3"/><text x="87.4840%" y="671.50">&lt;hyper::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="645" width="6.3830%" height="15" fill="rgb(216,123,35)" fg:x="41" fg:w="3"/><text x="87.4840%" y="655.50">&lt;core::p..</text></g><g><title>reqwest::connect::with_timeout::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="629" width="6.3830%" height="15" fill="rgb(212,68,40)" fg:x="41" fg:w="3"/><text x="87.4840%" y="639.50">reqwest:..</text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="613" width="6.3830%" height="15" fill="rgb(254,125,32)" fg:x="41" fg:w="3"/><text x="87.4840%" y="623.50">reqwest:..</text></g><g><title>&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="597" width="6.3830%" height="15" fill="rgb(253,97,22)" fg:x="41" fg:w="3"/><text x="87.4840%" y="607.50">&lt;hyper_t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="581" width="6.3830%" height="15" fill="rgb(241,101,14)" fg:x="41" fg:w="3"/><text x="87.4840%" y="591.50">&lt;core::p..</text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="565" width="6.3830%" height="15" fill="rgb(238,103,29)" fg:x="41" fg:w="3"/><text x="87.4840%" y="575.50">&lt;hyper_t..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnecting&lt;R&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="549" width="6.3830%" height="15" fill="rgb(233,195,47)" fg:x="41" fg:w="3"/><text x="87.4840%" y="559.50">&lt;hyper::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 6.38%)</title><rect x="87.2340%" y="533" width="6.3830%" height="15" fill="rgb(246,218,30)" fg:x="41" fg:w="3"/><text x="87.4840%" y="543.50">&lt;core::p..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="517" width="6.3830%" height="15" fill="rgb(219,145,47)" fg:x="41" fg:w="3"/><text x="87.4840%" y="527.50">&lt;hyper::..</text></g><g><title>hyper::client::connect::http::HttpConnector&lt;R&gt;::call_async::{{closure}} (3 samples, 6.38%)</title><rect x="87.2340%" y="501" width="6.3830%" height="15" fill="rgb(243,12,26)" fg:x="41" fg:w="3"/><text x="87.4840%" y="511.50">hyper::c..</text></g><g><title>hyper::client::connect::http::ConnectingTcp::new (1 samples, 2.13%)</title><rect x="91.4894%" y="485" width="2.1277%" height="15" fill="rgb(214,87,16)" fg:x="43" fg:w="1"/><text x="91.7394%" y="495.50">h..</text></g><g><title>hyper::client::connect::dns::SocketAddrs::split_by_preference (1 samples, 2.13%)</title><rect x="91.4894%" y="469" width="2.1277%" height="15" fill="rgb(208,99,42)" fg:x="43" fg:w="1"/><text x="91.7394%" y="479.50">h..</text></g><g><title>core::iter::traits::iterator::Iterator::partition (1 samples, 2.13%)</title><rect x="91.4894%" y="453" width="2.1277%" height="15" fill="rgb(253,99,2)" fg:x="43" fg:w="1"/><text x="91.7394%" y="463.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 2.13%)</title><rect x="91.4894%" y="437" width="2.1277%" height="15" fill="rgb(220,168,23)" fg:x="43" fg:w="1"/><text x="91.7394%" y="447.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::partition::extend::{{closure}} (1 samples, 2.13%)</title><rect x="91.4894%" y="421" width="2.1277%" height="15" fill="rgb(242,38,24)" fg:x="43" fg:w="1"/><text x="91.7394%" y="431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_one (1 samples, 2.13%)</title><rect x="91.4894%" y="405" width="2.1277%" height="15" fill="rgb(225,182,9)" fg:x="43" fg:w="1"/><text x="91.7394%" y="415.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 2.13%)</title><rect x="91.4894%" y="389" width="2.1277%" height="15" fill="rgb(243,178,37)" fg:x="43" fg:w="1"/><text x="91.7394%" y="399.50">a..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="91.4894%" y="373" width="2.1277%" height="15" fill="rgb(232,139,19)" fg:x="43" fg:w="1"/><text x="91.7394%" y="383.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="91.4894%" y="357" width="2.1277%" height="15" fill="rgb(225,201,24)" fg:x="43" fg:w="1"/><text x="91.7394%" y="367.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="91.4894%" y="341" width="2.1277%" height="15" fill="rgb(221,47,46)" fg:x="43" fg:w="1"/><text x="91.7394%" y="351.50">b..</text></g><g><title>reqwest::async_impl::client::Client::post (1 samples, 2.13%)</title><rect x="93.6170%" y="1045" width="2.1277%" height="15" fill="rgb(249,23,13)" fg:x="44" fg:w="1"/><text x="93.8670%" y="1055.50">r..</text></g><g><title>reqwest::async_impl::client::Client::request (1 samples, 2.13%)</title><rect x="93.6170%" y="1029" width="2.1277%" height="15" fill="rgb(219,9,5)" fg:x="44" fg:w="1"/><text x="93.8670%" y="1039.50">r..</text></g><g><title>&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (1 samples, 2.13%)</title><rect x="93.6170%" y="1013" width="2.1277%" height="15" fill="rgb(254,171,16)" fg:x="44" fg:w="1"/><text x="93.8670%" y="1023.50">&lt;..</text></g><g><title>url::Url::parse (1 samples, 2.13%)</title><rect x="93.6170%" y="997" width="2.1277%" height="15" fill="rgb(230,171,20)" fg:x="44" fg:w="1"/><text x="93.8670%" y="1007.50">u..</text></g><g><title>url::ParseOptions::parse (1 samples, 2.13%)</title><rect x="93.6170%" y="981" width="2.1277%" height="15" fill="rgb(210,71,41)" fg:x="44" fg:w="1"/><text x="93.8670%" y="991.50">u..</text></g><g><title>url::parser::Parser::parse_url (1 samples, 2.13%)</title><rect x="93.6170%" y="965" width="2.1277%" height="15" fill="rgb(206,173,20)" fg:x="44" fg:w="1"/><text x="93.8670%" y="975.50">u..</text></g><g><title>url::parser::Parser::parse_with_scheme (1 samples, 2.13%)</title><rect x="93.6170%" y="949" width="2.1277%" height="15" fill="rgb(233,88,34)" fg:x="44" fg:w="1"/><text x="93.8670%" y="959.50">u..</text></g><g><title>url::parser::SchemeType::from (1 samples, 2.13%)</title><rect x="93.6170%" y="933" width="2.1277%" height="15" fill="rgb(223,209,46)" fg:x="44" fg:w="1"/><text x="93.8670%" y="943.50">u..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="93.6170%" y="917" width="2.1277%" height="15" fill="rgb(250,43,18)" fg:x="44" fg:w="1"/><text x="93.8670%" y="927.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="93.6170%" y="901" width="2.1277%" height="15" fill="rgb(208,13,10)" fg:x="44" fg:w="1"/><text x="93.8670%" y="911.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="93.6170%" y="885" width="2.1277%" height="15" fill="rgb(212,200,36)" fg:x="44" fg:w="1"/><text x="93.8670%" y="895.50">b..</text></g><g><title>discord_gating_bot::controller::check_reputation::{{closure}}::{{closure}} (22 samples, 46.81%)</title><rect x="51.0638%" y="1285" width="46.8085%" height="15" fill="rgb(225,90,30)" fg:x="24" fg:w="22"/><text x="51.3138%" y="1295.50">discord_gating_bot::controller::check_reputation::{{closure}}::{{closure}}</text></g><g><title>discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}} (22 samples, 46.81%)</title><rect x="51.0638%" y="1269" width="46.8085%" height="15" fill="rgb(236,182,39)" fg:x="24" fg:w="22"/><text x="51.3138%" y="1279.50">discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}}</text></g><g><title>discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}}::inner::{{closure}} (22 samples, 46.81%)</title><rect x="51.0638%" y="1253" width="46.8085%" height="15" fill="rgb(212,144,35)" fg:x="24" fg:w="22"/><text x="51.3138%" y="1263.50">discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}}:..</text></g><g><title>colony_rs::get_reputation_in_domain::{{closure}} (22 samples, 46.81%)</title><rect x="51.0638%" y="1237" width="46.8085%" height="15" fill="rgb(228,63,44)" fg:x="24" fg:w="22"/><text x="51.3138%" y="1247.50">colony_rs::get_reputation_in_domain::{{closure}}</text></g><g><title>colony_rs::get_reputation_root_hash::{{closure}} (9 samples, 19.15%)</title><rect x="78.7234%" y="1221" width="19.1489%" height="15" fill="rgb(228,109,6)" fg:x="37" fg:w="9"/><text x="78.9734%" y="1231.50">colony_rs::get_reputation_root..</text></g><g><title>ethers_contract::call::FunctionCall&lt;B,M,D&gt;::call::{{closure}} (5 samples, 10.64%)</title><rect x="87.2340%" y="1205" width="10.6383%" height="15" fill="rgb(238,117,24)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1215.50">ethers_contract:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 10.64%)</title><rect x="87.2340%" y="1189" width="10.6383%" height="15" fill="rgb(242,26,26)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1199.50">&lt;core::pin::Pin&lt;..</text></g><g><title>&lt;ethers_providers::rpc::provider::Provider&lt;P&gt; as ethers_providers::middleware::Middleware&gt;::call::{{closure}} (5 samples, 10.64%)</title><rect x="87.2340%" y="1173" width="10.6383%" height="15" fill="rgb(221,92,48)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1183.50">&lt;ethers_provider..</text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}} (5 samples, 10.64%)</title><rect x="87.2340%" y="1157" width="10.6383%" height="15" fill="rgb(209,209,32)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1167.50">ethers_providers..</text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 10.64%)</title><rect x="87.2340%" y="1141" width="10.6383%" height="15" fill="rgb(221,70,22)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1151.50">&lt;tracing_futures..</text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}}::{{closure}} (5 samples, 10.64%)</title><rect x="87.2340%" y="1125" width="10.6383%" height="15" fill="rgb(248,145,5)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1135.50">ethers_providers..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 10.64%)</title><rect x="87.2340%" y="1109" width="10.6383%" height="15" fill="rgb(226,116,26)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1119.50">&lt;core::pin::Pin&lt;..</text></g><g><title>&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;T&gt; as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (5 samples, 10.64%)</title><rect x="87.2340%" y="1093" width="10.6383%" height="15" fill="rgb(244,5,17)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1103.50">&lt;ethers_provider..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 10.64%)</title><rect x="87.2340%" y="1077" width="10.6383%" height="15" fill="rgb(252,159,33)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1087.50">&lt;core::pin::Pin&lt;..</text></g><g><title>&lt;ethers_providers::rpc::transports::http::Provider as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (5 samples, 10.64%)</title><rect x="87.2340%" y="1061" width="10.6383%" height="15" fill="rgb(206,71,0)" fg:x="41" fg:w="5"/><text x="87.4840%" y="1071.50">&lt;ethers_provider..</text></g><g><title>reqwest::async_impl::request::RequestBuilder::send (1 samples, 2.13%)</title><rect x="95.7447%" y="1045" width="2.1277%" height="15" fill="rgb(233,118,54)" fg:x="45" fg:w="1"/><text x="95.9947%" y="1055.50">r..</text></g><g><title>reqwest::async_impl::client::Client::execute_request (1 samples, 2.13%)</title><rect x="95.7447%" y="1029" width="2.1277%" height="15" fill="rgb(234,83,48)" fg:x="45" fg:w="1"/><text x="95.9947%" y="1039.50">r..</text></g><g><title>reqwest::into_url::expect_uri (1 samples, 2.13%)</title><rect x="95.7447%" y="1013" width="2.1277%" height="15" fill="rgb(228,3,54)" fg:x="45" fg:w="1"/><text x="95.9947%" y="1023.50">r..</text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 2.13%)</title><rect x="95.7447%" y="997" width="2.1277%" height="15" fill="rgb(226,155,13)" fg:x="45" fg:w="1"/><text x="95.9947%" y="1007.50">c..</text></g><g><title>&lt;http::uri::Uri as core::str::traits::FromStr&gt;::from_str (1 samples, 2.13%)</title><rect x="95.7447%" y="981" width="2.1277%" height="15" fill="rgb(241,28,37)" fg:x="45" fg:w="1"/><text x="95.9947%" y="991.50">&lt;..</text></g><g><title>&lt;http::uri::Uri as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (1 samples, 2.13%)</title><rect x="95.7447%" y="965" width="2.1277%" height="15" fill="rgb(233,93,10)" fg:x="45" fg:w="1"/><text x="95.9947%" y="975.50">&lt;..</text></g><g><title>http::uri::Uri::from_shared (1 samples, 2.13%)</title><rect x="95.7447%" y="949" width="2.1277%" height="15" fill="rgb(225,113,19)" fg:x="45" fg:w="1"/><text x="95.9947%" y="959.50">h..</text></g><g><title>http::uri::parse_full (1 samples, 2.13%)</title><rect x="95.7447%" y="933" width="2.1277%" height="15" fill="rgb(241,2,18)" fg:x="45" fg:w="1"/><text x="95.9947%" y="943.50">h..</text></g><g><title>http::uri::scheme::Scheme2&lt;usize&gt;::parse (1 samples, 2.13%)</title><rect x="95.7447%" y="917" width="2.1277%" height="15" fill="rgb(228,207,21)" fg:x="45" fg:w="1"/><text x="95.9947%" y="927.50">h..</text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (1 samples, 2.13%)</title><rect x="95.7447%" y="901" width="2.1277%" height="15" fill="rgb(213,211,35)" fg:x="45" fg:w="1"/><text x="95.9947%" y="911.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 2.13%)</title><rect x="95.7447%" y="885" width="2.1277%" height="15" fill="rgb(209,83,10)" fg:x="45" fg:w="1"/><text x="95.9947%" y="895.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 2.13%)</title><rect x="95.7447%" y="869" width="2.1277%" height="15" fill="rgb(209,164,1)" fg:x="45" fg:w="1"/><text x="95.9947%" y="879.50">c..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.13%)</title><rect x="95.7447%" y="853" width="2.1277%" height="15" fill="rgb(213,184,43)" fg:x="45" fg:w="1"/><text x="95.9947%" y="863.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 2.13%)</title><rect x="95.7447%" y="837" width="2.1277%" height="15" fill="rgb(231,61,34)" fg:x="45" fg:w="1"/><text x="95.9947%" y="847.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="95.7447%" y="821" width="2.1277%" height="15" fill="rgb(235,75,3)" fg:x="45" fg:w="1"/><text x="95.9947%" y="831.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="95.7447%" y="805" width="2.1277%" height="15" fill="rgb(220,106,47)" fg:x="45" fg:w="1"/><text x="95.9947%" y="815.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="95.7447%" y="789" width="2.1277%" height="15" fill="rgb(210,196,33)" fg:x="45" fg:w="1"/><text x="95.9947%" y="799.50">b..</text></g><g><title>all (47 samples, 100%)</title><rect x="0.0000%" y="2197" width="100.0000%" height="15" fill="rgb(229,154,42)" fg:x="0" fg:w="47"/><text x="0.2500%" y="2207.50"></text></g><g><title>tokio-runtime-w (29 samples, 61.70%)</title><rect x="38.2979%" y="2181" width="61.7021%" height="15" fill="rgb(228,114,26)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2191.50">tokio-runtime-w</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (29 samples, 61.70%)</title><rect x="38.2979%" y="2165" width="61.7021%" height="15" fill="rgb(208,144,1)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2175.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 61.70%)</title><rect x="38.2979%" y="2149" width="61.7021%" height="15" fill="rgb(239,112,37)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2159.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 61.70%)</title><rect x="38.2979%" y="2133" width="61.7021%" height="15" fill="rgb(210,96,50)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2143.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29 samples, 61.70%)</title><rect x="38.2979%" y="2117" width="61.7021%" height="15" fill="rgb(222,178,2)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2127.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (29 samples, 61.70%)</title><rect x="38.2979%" y="2101" width="61.7021%" height="15" fill="rgb(226,74,18)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2111.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (29 samples, 61.70%)</title><rect x="38.2979%" y="2085" width="61.7021%" height="15" fill="rgb(225,67,54)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2095.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29 samples, 61.70%)</title><rect x="38.2979%" y="2069" width="61.7021%" height="15" fill="rgb(251,92,32)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2079.50">std::panicking::try</text></g><g><title>__rust_try (29 samples, 61.70%)</title><rect x="38.2979%" y="2053" width="61.7021%" height="15" fill="rgb(228,149,22)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2063.50">__rust_try</text></g><g><title>std::panicking::try::do_call (29 samples, 61.70%)</title><rect x="38.2979%" y="2037" width="61.7021%" height="15" fill="rgb(243,54,13)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2047.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 61.70%)</title><rect x="38.2979%" y="2021" width="61.7021%" height="15" fill="rgb(243,180,28)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2031.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (29 samples, 61.70%)</title><rect x="38.2979%" y="2005" width="61.7021%" height="15" fill="rgb(208,167,24)" fg:x="18" fg:w="29"/><text x="38.5479%" y="2015.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 61.70%)</title><rect x="38.2979%" y="1989" width="61.7021%" height="15" fill="rgb(245,73,45)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1999.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (29 samples, 61.70%)</title><rect x="38.2979%" y="1973" width="61.7021%" height="15" fill="rgb(237,203,48)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1983.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (29 samples, 61.70%)</title><rect x="38.2979%" y="1957" width="61.7021%" height="15" fill="rgb(211,197,16)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1967.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (29 samples, 61.70%)</title><rect x="38.2979%" y="1941" width="61.7021%" height="15" fill="rgb(243,99,51)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1951.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (29 samples, 61.70%)</title><rect x="38.2979%" y="1925" width="61.7021%" height="15" fill="rgb(215,123,29)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1935.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (29 samples, 61.70%)</title><rect x="38.2979%" y="1909" width="61.7021%" height="15" fill="rgb(239,186,37)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1919.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (29 samples, 61.70%)</title><rect x="38.2979%" y="1893" width="61.7021%" height="15" fill="rgb(252,136,39)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1903.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (29 samples, 61.70%)</title><rect x="38.2979%" y="1877" width="61.7021%" height="15" fill="rgb(223,213,32)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1887.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (29 samples, 61.70%)</title><rect x="38.2979%" y="1861" width="61.7021%" height="15" fill="rgb(233,115,5)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1871.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (29 samples, 61.70%)</title><rect x="38.2979%" y="1845" width="61.7021%" height="15" fill="rgb(207,226,44)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1855.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (29 samples, 61.70%)</title><rect x="38.2979%" y="1829" width="61.7021%" height="15" fill="rgb(208,126,0)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1839.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29 samples, 61.70%)</title><rect x="38.2979%" y="1813" width="61.7021%" height="15" fill="rgb(244,66,21)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1823.50">std::panicking::try</text></g><g><title>__rust_try (29 samples, 61.70%)</title><rect x="38.2979%" y="1797" width="61.7021%" height="15" fill="rgb(222,97,12)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1807.50">__rust_try</text></g><g><title>std::panicking::try::do_call (29 samples, 61.70%)</title><rect x="38.2979%" y="1781" width="61.7021%" height="15" fill="rgb(219,213,19)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1791.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 61.70%)</title><rect x="38.2979%" y="1765" width="61.7021%" height="15" fill="rgb(252,169,30)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1775.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (29 samples, 61.70%)</title><rect x="38.2979%" y="1749" width="61.7021%" height="15" fill="rgb(206,32,51)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1759.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (29 samples, 61.70%)</title><rect x="38.2979%" y="1733" width="61.7021%" height="15" fill="rgb(250,172,42)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1743.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (29 samples, 61.70%)</title><rect x="38.2979%" y="1717" width="61.7021%" height="15" fill="rgb(209,34,43)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1727.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (29 samples, 61.70%)</title><rect x="38.2979%" y="1701" width="61.7021%" height="15" fill="rgb(223,11,35)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1711.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 61.70%)</title><rect x="38.2979%" y="1685" width="61.7021%" height="15" fill="rgb(251,219,26)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1695.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (29 samples, 61.70%)</title><rect x="38.2979%" y="1669" width="61.7021%" height="15" fill="rgb(231,119,3)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1679.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (29 samples, 61.70%)</title><rect x="38.2979%" y="1653" width="61.7021%" height="15" fill="rgb(216,97,11)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1663.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (29 samples, 61.70%)</title><rect x="38.2979%" y="1637" width="61.7021%" height="15" fill="rgb(223,59,9)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1647.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (29 samples, 61.70%)</title><rect x="38.2979%" y="1621" width="61.7021%" height="15" fill="rgb(233,93,31)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1631.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (29 samples, 61.70%)</title><rect x="38.2979%" y="1605" width="61.7021%" height="15" fill="rgb(239,81,33)" fg:x="18" fg:w="29"/><text x="38.5479%" y="1615.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (27 samples, 57.45%)</title><rect x="42.5532%" y="1589" width="57.4468%" height="15" fill="rgb(213,120,34)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1599.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::coop::budget (27 samples, 57.45%)</title><rect x="42.5532%" y="1573" width="57.4468%" height="15" fill="rgb(243,49,53)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1583.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (27 samples, 57.45%)</title><rect x="42.5532%" y="1557" width="57.4468%" height="15" fill="rgb(247,216,33)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1567.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (27 samples, 57.45%)</title><rect x="42.5532%" y="1541" width="57.4468%" height="15" fill="rgb(226,26,14)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1551.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (27 samples, 57.45%)</title><rect x="42.5532%" y="1525" width="57.4468%" height="15" fill="rgb(215,49,53)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1535.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (27 samples, 57.45%)</title><rect x="42.5532%" y="1509" width="57.4468%" height="15" fill="rgb(245,162,40)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1519.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (27 samples, 57.45%)</title><rect x="42.5532%" y="1493" width="57.4468%" height="15" fill="rgb(229,68,17)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1503.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27 samples, 57.45%)</title><rect x="42.5532%" y="1477" width="57.4468%" height="15" fill="rgb(213,182,10)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1487.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (27 samples, 57.45%)</title><rect x="42.5532%" y="1461" width="57.4468%" height="15" fill="rgb(245,125,30)" fg:x="20" fg:w="27"/><text x="42.8032%" y="1471.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (26 samples, 55.32%)</title><rect x="44.6809%" y="1445" width="55.3191%" height="15" fill="rgb(232,202,2)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1455.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (26 samples, 55.32%)</title><rect x="44.6809%" y="1429" width="55.3191%" height="15" fill="rgb(237,140,51)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1439.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (26 samples, 55.32%)</title><rect x="44.6809%" y="1413" width="55.3191%" height="15" fill="rgb(236,157,25)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1423.50">std::panicking::try</text></g><g><title>__rust_try (26 samples, 55.32%)</title><rect x="44.6809%" y="1397" width="55.3191%" height="15" fill="rgb(219,209,0)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1407.50">__rust_try</text></g><g><title>std::panicking::try::do_call (26 samples, 55.32%)</title><rect x="44.6809%" y="1381" width="55.3191%" height="15" fill="rgb(240,116,54)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1391.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 55.32%)</title><rect x="44.6809%" y="1365" width="55.3191%" height="15" fill="rgb(216,10,36)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1375.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_on..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (26 samples, 55.32%)</title><rect x="44.6809%" y="1349" width="55.3191%" height="15" fill="rgb(222,72,44)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1359.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (26 samples, 55.32%)</title><rect x="44.6809%" y="1333" width="55.3191%" height="15" fill="rgb(232,159,9)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1343.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (26 samples, 55.32%)</title><rect x="44.6809%" y="1317" width="55.3191%" height="15" fill="rgb(210,39,32)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1327.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (26 samples, 55.32%)</title><rect x="44.6809%" y="1301" width="55.3191%" height="15" fill="rgb(216,194,45)" fg:x="21" fg:w="26"/><text x="44.9309%" y="1311.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>discord_gating_bot::controller::check_user::{{closure}}::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="1285" width="2.1277%" height="15" fill="rgb(218,18,35)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1295.50">d..</text></g><g><title>discord_gating_bot::controller::check_reputation::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="1269" width="2.1277%" height="15" fill="rgb(207,83,51)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1279.50">d..</text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 2.13%)</title><rect x="97.8723%" y="1253" width="2.1277%" height="15" fill="rgb(225,63,43)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1263.50">&lt;..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 2.13%)</title><rect x="97.8723%" y="1237" width="2.1277%" height="15" fill="rgb(207,57,36)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1247.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 2.13%)</title><rect x="97.8723%" y="1221" width="2.1277%" height="15" fill="rgb(216,99,33)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1231.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 2.13%)</title><rect x="97.8723%" y="1205" width="2.1277%" height="15" fill="rgb(225,42,16)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1215.50">o..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 2.13%)</title><rect x="97.8723%" y="1189" width="2.1277%" height="15" fill="rgb(220,201,45)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1199.50">o..</text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 2.13%)</title><rect x="97.8723%" y="1173" width="2.1277%" height="15" fill="rgb(225,33,4)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1183.50">o..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 2.13%)</title><rect x="97.8723%" y="1157" width="2.1277%" height="15" fill="rgb(224,33,50)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1167.50">c..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="1141" width="2.1277%" height="15" fill="rgb(246,198,51)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1151.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="1125" width="2.1277%" height="15" fill="rgb(205,22,4)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1135.50">o..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="1109" width="2.1277%" height="15" fill="rgb(206,3,8)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1119.50">o..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 2.13%)</title><rect x="97.8723%" y="1093" width="2.1277%" height="15" fill="rgb(251,23,15)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1103.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 2.13%)</title><rect x="97.8723%" y="1077" width="2.1277%" height="15" fill="rgb(252,88,28)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1087.50">c..</text></g><g><title>discord_gating_bot::controller::RATE_LIMITER::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="1061" width="2.1277%" height="15" fill="rgb(212,127,14)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1071.50">d..</text></g><g><title>governor::state::direct::&lt;impl governor::state::RateLimiter&lt;governor::state::direct::NotKeyed,governor::state::in_memory::InMemoryState,governor::clock::quanta::QuantaClock&gt;&gt;::direct (1 samples, 2.13%)</title><rect x="97.8723%" y="1045" width="2.1277%" height="15" fill="rgb(247,145,37)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1055.50">g..</text></g><g><title>&lt;governor::clock::quanta::QuantaClock as core::default::Default&gt;::default (1 samples, 2.13%)</title><rect x="97.8723%" y="1029" width="2.1277%" height="15" fill="rgb(209,117,53)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1039.50">&lt;..</text></g><g><title>&lt;quanta::Clock as core::default::Default&gt;::default (1 samples, 2.13%)</title><rect x="97.8723%" y="1013" width="2.1277%" height="15" fill="rgb(212,90,42)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1023.50">&lt;..</text></g><g><title>quanta::Clock::new (1 samples, 2.13%)</title><rect x="97.8723%" y="997" width="2.1277%" height="15" fill="rgb(218,164,37)" fg:x="46" fg:w="1"/><text x="98.1223%" y="1007.50">q..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 2.13%)</title><rect x="97.8723%" y="981" width="2.1277%" height="15" fill="rgb(246,65,34)" fg:x="46" fg:w="1"/><text x="98.1223%" y="991.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 2.13%)</title><rect x="97.8723%" y="965" width="2.1277%" height="15" fill="rgb(231,100,33)" fg:x="46" fg:w="1"/><text x="98.1223%" y="975.50">o..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 2.13%)</title><rect x="97.8723%" y="949" width="2.1277%" height="15" fill="rgb(228,126,14)" fg:x="46" fg:w="1"/><text x="98.1223%" y="959.50">o..</text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 2.13%)</title><rect x="97.8723%" y="933" width="2.1277%" height="15" fill="rgb(215,173,21)" fg:x="46" fg:w="1"/><text x="98.1223%" y="943.50">o..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 2.13%)</title><rect x="97.8723%" y="917" width="2.1277%" height="15" fill="rgb(210,6,40)" fg:x="46" fg:w="1"/><text x="98.1223%" y="927.50">c..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="901" width="2.1277%" height="15" fill="rgb(212,48,18)" fg:x="46" fg:w="1"/><text x="98.1223%" y="911.50">o..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="885" width="2.1277%" height="15" fill="rgb(230,214,11)" fg:x="46" fg:w="1"/><text x="98.1223%" y="895.50">o..</text></g><g><title>quanta::Clock::new::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="869" width="2.1277%" height="15" fill="rgb(254,105,39)" fg:x="46" fg:w="1"/><text x="98.1223%" y="879.50">q..</text></g><g><title>quanta::Calibration::calibrate (1 samples, 2.13%)</title><rect x="97.8723%" y="853" width="2.1277%" height="15" fill="rgb(245,158,5)" fg:x="46" fg:w="1"/><text x="98.1223%" y="863.50">q..</text></g><g><title>quanta::stats::Variance::mean_with_error (1 samples, 2.13%)</title><rect x="97.8723%" y="837" width="2.1277%" height="15" fill="rgb(249,208,11)" fg:x="46" fg:w="1"/><text x="98.1223%" y="847.50">q..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 2.13%)</title><rect x="97.8723%" y="821" width="2.1277%" height="15" fill="rgb(210,39,28)" fg:x="46" fg:w="1"/><text x="98.1223%" y="831.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 2.13%)</title><rect x="97.8723%" y="805" width="2.1277%" height="15" fill="rgb(211,56,53)" fg:x="46" fg:w="1"/><text x="98.1223%" y="815.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 2.13%)</title><rect x="97.8723%" y="789" width="2.1277%" height="15" fill="rgb(226,201,30)" fg:x="46" fg:w="1"/><text x="98.1223%" y="799.50">b..</text></g></svg></svg>