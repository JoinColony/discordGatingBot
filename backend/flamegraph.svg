<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2070" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2053.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2053.00"> </text><svg id="frames" x="10" width="1180" total_samples="132"><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (5 samples, 3.79%)</title><rect x="0.0000%" y="1477" width="3.7879%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1487.50">allo..</text></g><g><title>core::ptr::write (5 samples, 3.79%)</title><rect x="0.0000%" y="1461" width="3.7879%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1471.50">core..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (5 samples, 3.79%)</title><rect x="0.0000%" y="1445" width="3.7879%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1455.50">&lt;ppr..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (5 samples, 3.79%)</title><rect x="0.0000%" y="1429" width="3.7879%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1439.50">back..</text></g><g><title>backtrace::backtrace::libunwind::trace (5 samples, 3.79%)</title><rect x="0.0000%" y="1413" width="3.7879%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1423.50">back..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (7 samples, 5.30%)</title><rect x="0.0000%" y="1493" width="5.3030%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1503.50">&lt;core:..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (2 samples, 1.52%)</title><rect x="3.7879%" y="1477" width="1.5152%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="2"/><text x="4.0379%" y="1487.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 1.52%)</title><rect x="3.7879%" y="1461" width="1.5152%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="2"/><text x="4.0379%" y="1471.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 1.52%)</title><rect x="3.7879%" y="1445" width="1.5152%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="2"/><text x="4.0379%" y="1455.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 1.52%)</title><rect x="3.7879%" y="1429" width="1.5152%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="2"/><text x="4.0379%" y="1439.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.76%)</title><rect x="5.3030%" y="1493" width="0.7576%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="5.5530%" y="1503.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="5.3030%" y="1477" width="0.7576%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="5.5530%" y="1487.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="5.3030%" y="1461" width="0.7576%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="5.5530%" y="1471.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="5.3030%" y="1445" width="0.7576%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="5.5530%" y="1455.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 3.03%)</title><rect x="6.0606%" y="1493" width="3.0303%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="4"/><text x="6.3106%" y="1503.50">&lt;pp..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 3.03%)</title><rect x="6.0606%" y="1477" width="3.0303%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="4"/><text x="6.3106%" y="1487.50">bac..</text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 3.03%)</title><rect x="6.0606%" y="1461" width="3.0303%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="4"/><text x="6.3106%" y="1471.50">bac..</text></g><g><title>discord_gating_bot::controller::Controller&lt;S&gt;::new (14 samples, 10.61%)</title><rect x="0.0000%" y="1701" width="10.6061%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1711.50">discord_gating_..</text></g><g><title>&lt;discord_gating_bot::storage::SledEncryptedStorage as discord_gating_bot::storage::Storage&gt;::new (14 samples, 10.61%)</title><rect x="0.0000%" y="1685" width="10.6061%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1695.50">&lt;discord_gating..</text></g><g><title>sled::db::open (14 samples, 10.61%)</title><rect x="0.0000%" y="1669" width="10.6061%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1679.50">sled::db::open</text></g><g><title>sled::config::Config::open (14 samples, 10.61%)</title><rect x="0.0000%" y="1653" width="10.6061%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1663.50">sled::config::C..</text></g><g><title>sled::db::Db::start_inner (14 samples, 10.61%)</title><rect x="0.0000%" y="1637" width="10.6061%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1647.50">sled::db::Db::s..</text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 10.61%)</title><rect x="0.0000%" y="1621" width="10.6061%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1631.50">&lt;sled::lazy::La..</text></g><g><title>core::ops::function::Fn::call (14 samples, 10.61%)</title><rect x="0.0000%" y="1605" width="10.6061%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1615.50">core::ops::func..</text></g><g><title>&lt;sled::metrics::Metrics as core::default::Default&gt;::default (14 samples, 10.61%)</title><rect x="0.0000%" y="1589" width="10.6061%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1599.50">&lt;sled::metrics:..</text></g><g><title>&lt;sled::histogram::Histogram as core::default::Default&gt;::default (14 samples, 10.61%)</title><rect x="0.0000%" y="1573" width="10.6061%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1583.50">&lt;sled::histogra..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (14 samples, 10.61%)</title><rect x="0.0000%" y="1557" width="10.6061%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1567.50">alloc::vec::Vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (14 samples, 10.61%)</title><rect x="0.0000%" y="1541" width="10.6061%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1551.50">alloc::vec::Vec..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (14 samples, 10.61%)</title><rect x="0.0000%" y="1525" width="10.6061%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1535.50">&lt;core::iter::ad..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 10.61%)</title><rect x="0.0000%" y="1509" width="10.6061%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1519.50">&lt;core::iter::so..</text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 1.52%)</title><rect x="9.0909%" y="1493" width="1.5152%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="2"/><text x="9.3409%" y="1503.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 1.52%)</title><rect x="9.0909%" y="1477" width="1.5152%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="2"/><text x="9.3409%" y="1487.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 1.52%)</title><rect x="9.0909%" y="1461" width="1.5152%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="2"/><text x="9.3409%" y="1471.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 1.52%)</title><rect x="9.0909%" y="1445" width="1.5152%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="2"/><text x="9.3409%" y="1455.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.76%)</title><rect x="10.6061%" y="1605" width="0.7576%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="1"/><text x="10.8561%" y="1615.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.76%)</title><rect x="10.6061%" y="1589" width="0.7576%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="10.8561%" y="1599.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (1 samples, 0.76%)</title><rect x="10.6061%" y="1573" width="0.7576%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="10.8561%" y="1583.50"></text></g><g><title>tokio::runtime::coop::with_budget::{{closure}} (1 samples, 0.76%)</title><rect x="10.6061%" y="1557" width="0.7576%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="1"/><text x="10.8561%" y="1567.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="10.6061%" y="1541" width="0.7576%" height="15" fill="rgb(238,167,29)" fg:x="14" fg:w="1"/><text x="10.8561%" y="1551.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="10.6061%" y="1525" width="0.7576%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="1"/><text x="10.8561%" y="1535.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="10.6061%" y="1509" width="0.7576%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="1"/><text x="10.8561%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="11.3636%" y="1573" width="0.7576%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1583.50"></text></g><g><title>&lt;sled::iter::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="11.3636%" y="1557" width="0.7576%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1567.50"></text></g><g><title>sled::iter::Iter::next_inner (1 samples, 0.76%)</title><rect x="11.3636%" y="1541" width="0.7576%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1551.50"></text></g><g><title>sled::tree::Tree::view_for_key (1 samples, 0.76%)</title><rect x="11.3636%" y="1525" width="0.7576%" height="15" fill="rgb(222,207,29)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1535.50"></text></g><g><title>sled::tree::Tree::view_for_pid (1 samples, 0.76%)</title><rect x="11.3636%" y="1509" width="0.7576%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1519.50"></text></g><g><title>sled::pagecache::PageCache::get (1 samples, 0.76%)</title><rect x="11.3636%" y="1493" width="0.7576%" height="15" fill="rgb(218,138,4)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.76%)</title><rect x="11.3636%" y="1477" width="0.7576%" height="15" fill="rgb(250,191,14)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="11.3636%" y="1461" width="0.7576%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1471.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.76%)</title><rect x="11.3636%" y="1445" width="0.7576%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1455.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.76%)</title><rect x="11.3636%" y="1429" width="0.7576%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.76%)</title><rect x="11.3636%" y="1413" width="0.7576%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="11.3636%" y="1397" width="0.7576%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="11.3636%" y="1381" width="0.7576%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="11.3636%" y="1365" width="0.7576%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="11.3636%" y="1349" width="0.7576%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.76%)</title><rect x="11.3636%" y="1333" width="0.7576%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.76%)</title><rect x="11.3636%" y="1317" width="0.7576%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.76%)</title><rect x="11.3636%" y="1301" width="0.7576%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.76%)</title><rect x="11.3636%" y="1285" width="0.7576%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1295.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.76%)</title><rect x="11.3636%" y="1269" width="0.7576%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1279.50"></text></g><g><title>sled::pagecache::PageCache::get::{{closure}} (1 samples, 0.76%)</title><rect x="11.3636%" y="1253" width="0.7576%" height="15" fill="rgb(221,10,30)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1263.50"></text></g><g><title>sled::pagecache::PageCache::pull (1 samples, 0.76%)</title><rect x="11.3636%" y="1237" width="0.7576%" height="15" fill="rgb(210,229,1)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1247.50"></text></g><g><title>sled::pagecache::logger::Log::read (1 samples, 0.76%)</title><rect x="11.3636%" y="1221" width="0.7576%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1231.50"></text></g><g><title>sled::pagecache::logger::read_message (1 samples, 0.76%)</title><rect x="11.3636%" y="1205" width="0.7576%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.76%)</title><rect x="11.3636%" y="1189" width="0.7576%" height="15" fill="rgb(247,98,35)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.76%)</title><rect x="11.3636%" y="1173" width="0.7576%" height="15" fill="rgb(247,138,52)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="11.3636%" y="1157" width="0.7576%" height="15" fill="rgb(213,79,30)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1167.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="11.3636%" y="1141" width="0.7576%" height="15" fill="rgb(246,177,23)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1151.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="11.3636%" y="1125" width="0.7576%" height="15" fill="rgb(230,62,27)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1135.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="11.3636%" y="1109" width="0.7576%" height="15" fill="rgb(216,154,8)" fg:x="15" fg:w="1"/><text x="11.6136%" y="1119.50"></text></g><g><title>discord-gating- (17 samples, 12.88%)</title><rect x="0.0000%" y="2005" width="12.8788%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="17"/><text x="0.2500%" y="2015.50">discord-gating-</text></g><g><title>_start (17 samples, 12.88%)</title><rect x="0.0000%" y="1989" width="12.8788%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1999.50">_start</text></g><g><title>__libc_start_main (17 samples, 12.88%)</title><rect x="0.0000%" y="1973" width="12.8788%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1983.50">__libc_start_main</text></g><g><title>main (17 samples, 12.88%)</title><rect x="0.0000%" y="1957" width="12.8788%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1967.50">main</text></g><g><title>std::rt::lang_start (17 samples, 12.88%)</title><rect x="0.0000%" y="1941" width="12.8788%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1951.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (17 samples, 12.88%)</title><rect x="0.0000%" y="1925" width="12.8788%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1935.50">std::rt::lang_start..</text></g><g><title>std::panic::catch_unwind (17 samples, 12.88%)</title><rect x="0.0000%" y="1909" width="12.8788%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1919.50">std::panic::catch_u..</text></g><g><title>std::panicking::try (17 samples, 12.88%)</title><rect x="0.0000%" y="1893" width="12.8788%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1903.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17 samples, 12.88%)</title><rect x="0.0000%" y="1877" width="12.8788%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1887.50">std::panicking::try..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (17 samples, 12.88%)</title><rect x="0.0000%" y="1861" width="12.8788%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1871.50">std::rt::lang_start..</text></g><g><title>std::panic::catch_unwind (17 samples, 12.88%)</title><rect x="0.0000%" y="1845" width="12.8788%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1855.50">std::panic::catch_u..</text></g><g><title>std::panicking::try (17 samples, 12.88%)</title><rect x="0.0000%" y="1829" width="12.8788%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1839.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17 samples, 12.88%)</title><rect x="0.0000%" y="1813" width="12.8788%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1823.50">std::panicking::try..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 12.88%)</title><rect x="0.0000%" y="1797" width="12.8788%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1807.50">core::ops::function..</text></g><g><title>std::rt::lang_start::{{closure}} (17 samples, 12.88%)</title><rect x="0.0000%" y="1781" width="12.8788%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1791.50">std::rt::lang_start..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 12.88%)</title><rect x="0.0000%" y="1765" width="12.8788%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1775.50">std::sys_common::ba..</text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 12.88%)</title><rect x="0.0000%" y="1749" width="12.8788%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1759.50">core::ops::function..</text></g><g><title>discord_gating_bot::main (17 samples, 12.88%)</title><rect x="0.0000%" y="1733" width="12.8788%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1743.50">discord_gating_bot:..</text></g><g><title>discord_gating_bot::command::execute (17 samples, 12.88%)</title><rect x="0.0000%" y="1717" width="12.8788%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1727.50">discord_gating_bot:..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (3 samples, 2.27%)</title><rect x="10.6061%" y="1701" width="2.2727%" height="15" fill="rgb(224,169,11)" fg:x="14" fg:w="3"/><text x="10.8561%" y="1711.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (3 samples, 2.27%)</title><rect x="10.6061%" y="1685" width="2.2727%" height="15" fill="rgb(250,166,2)" fg:x="14" fg:w="3"/><text x="10.8561%" y="1695.50">t..</text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (3 samples, 2.27%)</title><rect x="10.6061%" y="1669" width="2.2727%" height="15" fill="rgb(242,216,29)" fg:x="14" fg:w="3"/><text x="10.8561%" y="1679.50">t..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (3 samples, 2.27%)</title><rect x="10.6061%" y="1653" width="2.2727%" height="15" fill="rgb(230,116,27)" fg:x="14" fg:w="3"/><text x="10.8561%" y="1663.50">t..</text></g><g><title>tokio::runtime::coop::budget (3 samples, 2.27%)</title><rect x="10.6061%" y="1637" width="2.2727%" height="15" fill="rgb(228,99,48)" fg:x="14" fg:w="3"/><text x="10.8561%" y="1647.50">t..</text></g><g><title>tokio::runtime::coop::with_budget (3 samples, 2.27%)</title><rect x="10.6061%" y="1621" width="2.2727%" height="15" fill="rgb(253,11,6)" fg:x="14" fg:w="3"/><text x="10.8561%" y="1631.50">t..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (2 samples, 1.52%)</title><rect x="11.3636%" y="1605" width="1.5152%" height="15" fill="rgb(247,143,39)" fg:x="15" fg:w="2"/><text x="11.6136%" y="1615.50"></text></g><g><title>discord_gating_bot::controller::check_user::{{closure}} (2 samples, 1.52%)</title><rect x="11.3636%" y="1589" width="1.5152%" height="15" fill="rgb(236,97,10)" fg:x="15" fg:w="2"/><text x="11.6136%" y="1599.50"></text></g><g><title>tokio::task::join_set::JoinSet&lt;T&gt;::spawn (1 samples, 0.76%)</title><rect x="12.1212%" y="1573" width="0.7576%" height="15" fill="rgb(233,208,19)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1583.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.76%)</title><rect x="12.1212%" y="1557" width="0.7576%" height="15" fill="rgb(216,164,2)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1567.50"></text></g><g><title>tokio::task::spawn::spawn_inner (1 samples, 0.76%)</title><rect x="12.1212%" y="1541" width="0.7576%" height="15" fill="rgb(220,129,5)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1551.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (1 samples, 0.76%)</title><rect x="12.1212%" y="1525" width="0.7576%" height="15" fill="rgb(242,17,10)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1535.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (1 samples, 0.76%)</title><rect x="12.1212%" y="1509" width="0.7576%" height="15" fill="rgb(242,107,0)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1 samples, 0.76%)</title><rect x="12.1212%" y="1493" width="0.7576%" height="15" fill="rgb(251,28,31)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1503.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.76%)</title><rect x="12.1212%" y="1477" width="0.7576%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1487.50"></text></g><g><title>tokio::runtime::task::new_task (1 samples, 0.76%)</title><rect x="12.1212%" y="1461" width="0.7576%" height="15" fill="rgb(215,21,27)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1471.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.76%)</title><rect x="12.1212%" y="1445" width="0.7576%" height="15" fill="rgb(232,23,21)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1455.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.76%)</title><rect x="12.1212%" y="1429" width="0.7576%" height="15" fill="rgb(244,5,23)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1439.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.76%)</title><rect x="12.1212%" y="1413" width="0.7576%" height="15" fill="rgb(226,81,46)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1423.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.76%)</title><rect x="12.1212%" y="1397" width="0.7576%" height="15" fill="rgb(247,70,30)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.76%)</title><rect x="12.1212%" y="1381" width="0.7576%" height="15" fill="rgb(212,68,19)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.76%)</title><rect x="12.1212%" y="1365" width="0.7576%" height="15" fill="rgb(240,187,13)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.76%)</title><rect x="12.1212%" y="1349" width="0.7576%" height="15" fill="rgb(223,113,26)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1359.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="12.1212%" y="1333" width="0.7576%" height="15" fill="rgb(206,192,2)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1343.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="12.1212%" y="1317" width="0.7576%" height="15" fill="rgb(241,108,4)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1327.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="12.1212%" y="1301" width="0.7576%" height="15" fill="rgb(247,173,49)" fg:x="16" fg:w="1"/><text x="12.3712%" y="1311.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="12.8788%" y="1413" width="0.7576%" height="15" fill="rgb(224,114,35)" fg:x="17" fg:w="1"/><text x="13.1288%" y="1423.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="12.8788%" y="1397" width="0.7576%" height="15" fill="rgb(245,159,27)" fg:x="17" fg:w="1"/><text x="13.1288%" y="1407.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="12.8788%" y="1381" width="0.7576%" height="15" fill="rgb(245,172,44)" fg:x="17" fg:w="1"/><text x="13.1288%" y="1391.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.76%)</title><rect x="13.6364%" y="1381" width="0.7576%" height="15" fill="rgb(236,23,11)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1391.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.76%)</title><rect x="13.6364%" y="1365" width="0.7576%" height="15" fill="rgb(205,117,38)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1375.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.76%)</title><rect x="13.6364%" y="1349" width="0.7576%" height="15" fill="rgb(237,72,25)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1359.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.76%)</title><rect x="13.6364%" y="1333" width="0.7576%" height="15" fill="rgb(244,70,9)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1343.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.76%)</title><rect x="13.6364%" y="1317" width="0.7576%" height="15" fill="rgb(217,125,39)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1327.50"></text></g><g><title>core::mem::replace (1 samples, 0.76%)</title><rect x="13.6364%" y="1301" width="0.7576%" height="15" fill="rgb(235,36,10)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1311.50"></text></g><g><title>core::ptr::read (1 samples, 0.76%)</title><rect x="13.6364%" y="1285" width="0.7576%" height="15" fill="rgb(251,123,47)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1295.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="13.6364%" y="1269" width="0.7576%" height="15" fill="rgb(221,13,13)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1279.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="13.6364%" y="1253" width="0.7576%" height="15" fill="rgb(238,131,9)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1263.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="13.6364%" y="1237" width="0.7576%" height="15" fill="rgb(211,50,8)" fg:x="18" fg:w="1"/><text x="13.8864%" y="1247.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="14.3939%" y="1317" width="0.7576%" height="15" fill="rgb(245,182,24)" fg:x="19" fg:w="1"/><text x="14.6439%" y="1327.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="14.3939%" y="1301" width="0.7576%" height="15" fill="rgb(242,14,37)" fg:x="19" fg:w="1"/><text x="14.6439%" y="1311.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="14.3939%" y="1285" width="0.7576%" height="15" fill="rgb(246,228,12)" fg:x="19" fg:w="1"/><text x="14.6439%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (2 samples, 1.52%)</title><rect x="14.3939%" y="1349" width="1.5152%" height="15" fill="rgb(213,55,15)" fg:x="19" fg:w="2"/><text x="14.6439%" y="1359.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (2 samples, 1.52%)</title><rect x="14.3939%" y="1333" width="1.5152%" height="15" fill="rgb(209,9,3)" fg:x="19" fg:w="2"/><text x="14.6439%" y="1343.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (1 samples, 0.76%)</title><rect x="15.1515%" y="1317" width="0.7576%" height="15" fill="rgb(230,59,30)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1327.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.76%)</title><rect x="15.1515%" y="1301" width="0.7576%" height="15" fill="rgb(209,121,21)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.76%)</title><rect x="15.1515%" y="1285" width="0.7576%" height="15" fill="rgb(220,109,13)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.76%)</title><rect x="15.1515%" y="1269" width="0.7576%" height="15" fill="rgb(232,18,1)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.76%)</title><rect x="15.1515%" y="1253" width="0.7576%" height="15" fill="rgb(215,41,42)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1263.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::prepare_park (1 samples, 0.76%)</title><rect x="15.1515%" y="1237" width="0.7576%" height="15" fill="rgb(224,123,36)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicI32::store (1 samples, 0.76%)</title><rect x="15.1515%" y="1221" width="0.7576%" height="15" fill="rgb(240,125,3)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.76%)</title><rect x="15.1515%" y="1205" width="0.7576%" height="15" fill="rgb(205,98,50)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1215.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="15.1515%" y="1189" width="0.7576%" height="15" fill="rgb(205,185,37)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1199.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="15.1515%" y="1173" width="0.7576%" height="15" fill="rgb(238,207,15)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1183.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="15.1515%" y="1157" width="0.7576%" height="15" fill="rgb(213,199,42)" fg:x="20" fg:w="1"/><text x="15.4015%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (3 samples, 2.27%)</title><rect x="14.3939%" y="1381" width="2.2727%" height="15" fill="rgb(235,201,11)" fg:x="19" fg:w="3"/><text x="14.6439%" y="1391.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (3 samples, 2.27%)</title><rect x="14.3939%" y="1365" width="2.2727%" height="15" fill="rgb(207,46,11)" fg:x="19" fg:w="3"/><text x="14.6439%" y="1375.50">t..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (1 samples, 0.76%)</title><rect x="15.9091%" y="1349" width="0.7576%" height="15" fill="rgb(241,35,35)" fg:x="21" fg:w="1"/><text x="16.1591%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.76%)</title><rect x="15.9091%" y="1333" width="0.7576%" height="15" fill="rgb(243,32,47)" fg:x="21" fg:w="1"/><text x="16.1591%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.76%)</title><rect x="15.9091%" y="1317" width="0.7576%" height="15" fill="rgb(247,202,23)" fg:x="21" fg:w="1"/><text x="16.1591%" y="1327.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="15.9091%" y="1301" width="0.7576%" height="15" fill="rgb(219,102,11)" fg:x="21" fg:w="1"/><text x="16.1591%" y="1311.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="15.9091%" y="1285" width="0.7576%" height="15" fill="rgb(243,110,44)" fg:x="21" fg:w="1"/><text x="16.1591%" y="1295.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="15.9091%" y="1269" width="0.7576%" height="15" fill="rgb(222,74,54)" fg:x="21" fg:w="1"/><text x="16.1591%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (5 samples, 3.79%)</title><rect x="13.6364%" y="1397" width="3.7879%" height="15" fill="rgb(216,99,12)" fg:x="18" fg:w="5"/><text x="13.8864%" y="1407.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::wake_deferred_tasks (1 samples, 0.76%)</title><rect x="16.6667%" y="1381" width="0.7576%" height="15" fill="rgb(226,22,26)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1391.50"></text></g><g><title>tokio::runtime::context::with_defer (1 samples, 0.76%)</title><rect x="16.6667%" y="1365" width="0.7576%" height="15" fill="rgb(217,163,10)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.76%)</title><rect x="16.6667%" y="1349" width="0.7576%" height="15" fill="rgb(213,25,53)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.76%)</title><rect x="16.6667%" y="1333" width="0.7576%" height="15" fill="rgb(252,105,26)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1343.50"></text></g><g><title>tokio::runtime::context::with_defer::{{closure}} (1 samples, 0.76%)</title><rect x="16.6667%" y="1317" width="0.7576%" height="15" fill="rgb(220,39,43)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.76%)</title><rect x="16.6667%" y="1301" width="0.7576%" height="15" fill="rgb(229,68,48)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::wake_deferred_tasks::{{closure}} (1 samples, 0.76%)</title><rect x="16.6667%" y="1285" width="0.7576%" height="15" fill="rgb(252,8,32)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1295.50"></text></g><g><title>tokio::runtime::defer::Defer::wake (1 samples, 0.76%)</title><rect x="16.6667%" y="1269" width="0.7576%" height="15" fill="rgb(223,20,43)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.76%)</title><rect x="16.6667%" y="1253" width="0.7576%" height="15" fill="rgb(229,81,49)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.76%)</title><rect x="16.6667%" y="1237" width="0.7576%" height="15" fill="rgb(236,28,36)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="16.6667%" y="1221" width="0.7576%" height="15" fill="rgb(249,185,26)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1231.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="16.6667%" y="1205" width="0.7576%" height="15" fill="rgb(249,174,33)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1215.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="16.6667%" y="1189" width="0.7576%" height="15" fill="rgb(233,201,37)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1199.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="16.6667%" y="1173" width="0.7576%" height="15" fill="rgb(221,78,26)" fg:x="22" fg:w="1"/><text x="16.9167%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1 samples, 0.76%)</title><rect x="17.4242%" y="1397" width="0.7576%" height="15" fill="rgb(250,127,30)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (1 samples, 0.76%)</title><rect x="17.4242%" y="1381" width="0.7576%" height="15" fill="rgb(230,49,44)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1391.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.76%)</title><rect x="17.4242%" y="1365" width="0.7576%" height="15" fill="rgb(229,67,23)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1375.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.76%)</title><rect x="17.4242%" y="1349" width="0.7576%" height="15" fill="rgb(249,83,47)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.76%)</title><rect x="17.4242%" y="1333" width="0.7576%" height="15" fill="rgb(215,43,3)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1343.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (1 samples, 0.76%)</title><rect x="17.4242%" y="1317" width="0.7576%" height="15" fill="rgb(238,154,13)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1327.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="17.4242%" y="1301" width="0.7576%" height="15" fill="rgb(219,56,2)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1311.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="17.4242%" y="1285" width="0.7576%" height="15" fill="rgb(233,0,4)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1295.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="17.4242%" y="1269" width="0.7576%" height="15" fill="rgb(235,30,7)" fg:x="23" fg:w="1"/><text x="17.6742%" y="1279.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.76%)</title><rect x="18.1818%" y="1349" width="0.7576%" height="15" fill="rgb(250,79,13)" fg:x="24" fg:w="1"/><text x="18.4318%" y="1359.50"></text></g><g><title>core::ptr::null (1 samples, 0.76%)</title><rect x="18.1818%" y="1333" width="0.7576%" height="15" fill="rgb(211,146,34)" fg:x="24" fg:w="1"/><text x="18.4318%" y="1343.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.76%)</title><rect x="18.1818%" y="1317" width="0.7576%" height="15" fill="rgb(228,22,38)" fg:x="24" fg:w="1"/><text x="18.4318%" y="1327.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="18.1818%" y="1301" width="0.7576%" height="15" fill="rgb(235,168,5)" fg:x="24" fg:w="1"/><text x="18.4318%" y="1311.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="18.1818%" y="1285" width="0.7576%" height="15" fill="rgb(221,155,16)" fg:x="24" fg:w="1"/><text x="18.4318%" y="1295.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="18.1818%" y="1269" width="0.7576%" height="15" fill="rgb(215,215,53)" fg:x="24" fg:w="1"/><text x="18.4318%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (8 samples, 6.06%)</title><rect x="13.6364%" y="1413" width="6.0606%" height="15" fill="rgb(223,4,10)" fg:x="18" fg:w="8"/><text x="13.8864%" y="1423.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (2 samples, 1.52%)</title><rect x="18.1818%" y="1397" width="1.5152%" height="15" fill="rgb(234,103,6)" fg:x="24" fg:w="2"/><text x="18.4318%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (2 samples, 1.52%)</title><rect x="18.1818%" y="1381" width="1.5152%" height="15" fill="rgb(227,97,0)" fg:x="24" fg:w="2"/><text x="18.4318%" y="1391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.52%)</title><rect x="18.1818%" y="1365" width="1.5152%" height="15" fill="rgb(234,150,53)" fg:x="24" fg:w="2"/><text x="18.4318%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="18.9394%" y="1349" width="0.7576%" height="15" fill="rgb(228,201,54)" fg:x="25" fg:w="1"/><text x="19.1894%" y="1359.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.76%)</title><rect x="18.9394%" y="1333" width="0.7576%" height="15" fill="rgb(222,22,37)" fg:x="25" fg:w="1"/><text x="19.1894%" y="1343.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="18.9394%" y="1317" width="0.7576%" height="15" fill="rgb(237,53,32)" fg:x="25" fg:w="1"/><text x="19.1894%" y="1327.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="18.9394%" y="1301" width="0.7576%" height="15" fill="rgb(233,25,53)" fg:x="25" fg:w="1"/><text x="19.1894%" y="1311.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="18.9394%" y="1285" width="0.7576%" height="15" fill="rgb(210,40,34)" fg:x="25" fg:w="1"/><text x="19.1894%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (1 samples, 0.76%)</title><rect x="19.6970%" y="1365" width="0.7576%" height="15" fill="rgb(241,220,44)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (1 samples, 0.76%)</title><rect x="19.6970%" y="1349" width="0.7576%" height="15" fill="rgb(235,28,35)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="19.6970%" y="1333" width="0.7576%" height="15" fill="rgb(210,56,17)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1343.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.76%)</title><rect x="19.6970%" y="1317" width="0.7576%" height="15" fill="rgb(224,130,29)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.76%)</title><rect x="19.6970%" y="1301" width="0.7576%" height="15" fill="rgb(235,212,8)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1311.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.76%)</title><rect x="19.6970%" y="1285" width="0.7576%" height="15" fill="rgb(223,33,50)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1295.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.76%)</title><rect x="19.6970%" y="1269" width="0.7576%" height="15" fill="rgb(219,149,13)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1279.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="19.6970%" y="1253" width="0.7576%" height="15" fill="rgb(250,156,29)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1263.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="19.6970%" y="1237" width="0.7576%" height="15" fill="rgb(216,193,19)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1247.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="19.6970%" y="1221" width="0.7576%" height="15" fill="rgb(216,135,14)" fg:x="26" fg:w="1"/><text x="19.9470%" y="1231.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="20.4545%" y="1349" width="0.7576%" height="15" fill="rgb(241,47,5)" fg:x="27" fg:w="1"/><text x="20.7045%" y="1359.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="20.4545%" y="1333" width="0.7576%" height="15" fill="rgb(233,42,35)" fg:x="27" fg:w="1"/><text x="20.7045%" y="1343.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="20.4545%" y="1317" width="0.7576%" height="15" fill="rgb(231,13,6)" fg:x="27" fg:w="1"/><text x="20.7045%" y="1327.50"></text></g><g><title>tokio::runtime::coop::has_budget_remaining (1 samples, 0.76%)</title><rect x="21.2121%" y="1349" width="0.7576%" height="15" fill="rgb(207,181,40)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1359.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.76%)</title><rect x="21.2121%" y="1333" width="0.7576%" height="15" fill="rgb(254,173,49)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.76%)</title><rect x="21.2121%" y="1317" width="0.7576%" height="15" fill="rgb(221,1,38)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1327.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (1 samples, 0.76%)</title><rect x="21.2121%" y="1301" width="0.7576%" height="15" fill="rgb(206,124,46)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1311.50"></text></g><g><title>tokio::runtime::coop::has_budget_remaining::{{closure}} (1 samples, 0.76%)</title><rect x="21.2121%" y="1285" width="0.7576%" height="15" fill="rgb(249,21,11)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1295.50"></text></g><g><title>tokio::runtime::coop::Budget::has_remaining (1 samples, 0.76%)</title><rect x="21.2121%" y="1269" width="0.7576%" height="15" fill="rgb(222,201,40)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.76%)</title><rect x="21.2121%" y="1253" width="0.7576%" height="15" fill="rgb(235,61,29)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1263.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="21.2121%" y="1237" width="0.7576%" height="15" fill="rgb(219,207,3)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1247.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="21.2121%" y="1221" width="0.7576%" height="15" fill="rgb(222,56,46)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1231.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="21.2121%" y="1205" width="0.7576%" height="15" fill="rgb(239,76,54)" fg:x="28" fg:w="1"/><text x="21.4621%" y="1215.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="21.9697%" y="1285" width="0.7576%" height="15" fill="rgb(231,124,27)" fg:x="29" fg:w="1"/><text x="22.2197%" y="1295.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="21.9697%" y="1269" width="0.7576%" height="15" fill="rgb(249,195,6)" fg:x="29" fg:w="1"/><text x="22.2197%" y="1279.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="21.9697%" y="1253" width="0.7576%" height="15" fill="rgb(237,174,47)" fg:x="29" fg:w="1"/><text x="22.2197%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (1 samples, 0.76%)</title><rect x="22.7273%" y="1285" width="0.7576%" height="15" fill="rgb(206,201,31)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.76%)</title><rect x="22.7273%" y="1269" width="0.7576%" height="15" fill="rgb(231,57,52)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1279.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.76%)</title><rect x="22.7273%" y="1253" width="0.7576%" height="15" fill="rgb(248,177,22)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.76%)</title><rect x="22.7273%" y="1237" width="0.7576%" height="15" fill="rgb(215,211,37)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.76%)</title><rect x="22.7273%" y="1221" width="0.7576%" height="15" fill="rgb(241,128,51)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1231.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="22.7273%" y="1205" width="0.7576%" height="15" fill="rgb(227,165,31)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1215.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="22.7273%" y="1189" width="0.7576%" height="15" fill="rgb(228,167,24)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1199.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="22.7273%" y="1173" width="0.7576%" height="15" fill="rgb(228,143,12)" fg:x="30" fg:w="1"/><text x="22.9773%" y="1183.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="23.4848%" y="1237" width="0.7576%" height="15" fill="rgb(249,149,8)" fg:x="31" fg:w="1"/><text x="23.7348%" y="1247.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="23.4848%" y="1221" width="0.7576%" height="15" fill="rgb(243,35,44)" fg:x="31" fg:w="1"/><text x="23.7348%" y="1231.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="23.4848%" y="1205" width="0.7576%" height="15" fill="rgb(246,89,9)" fg:x="31" fg:w="1"/><text x="23.7348%" y="1215.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="24.2424%" y="1157" width="0.7576%" height="15" fill="rgb(233,213,13)" fg:x="32" fg:w="1"/><text x="24.4924%" y="1167.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="24.2424%" y="1141" width="0.7576%" height="15" fill="rgb(233,141,41)" fg:x="32" fg:w="1"/><text x="24.4924%" y="1151.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="24.2424%" y="1125" width="0.7576%" height="15" fill="rgb(239,167,4)" fg:x="32" fg:w="1"/><text x="24.4924%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1 samples, 0.76%)</title><rect x="25.0000%" y="869" width="0.7576%" height="15" fill="rgb(209,217,16)" fg:x="33" fg:w="1"/><text x="25.2500%" y="879.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (1 samples, 0.76%)</title><rect x="25.0000%" y="853" width="0.7576%" height="15" fill="rgb(219,88,35)" fg:x="33" fg:w="1"/><text x="25.2500%" y="863.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (1 samples, 0.76%)</title><rect x="25.0000%" y="837" width="0.7576%" height="15" fill="rgb(220,193,23)" fg:x="33" fg:w="1"/><text x="25.2500%" y="847.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (1 samples, 0.76%)</title><rect x="25.0000%" y="821" width="0.7576%" height="15" fill="rgb(230,90,52)" fg:x="33" fg:w="1"/><text x="25.2500%" y="831.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (1 samples, 0.76%)</title><rect x="25.0000%" y="805" width="0.7576%" height="15" fill="rgb(252,106,19)" fg:x="33" fg:w="1"/><text x="25.2500%" y="815.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.76%)</title><rect x="25.0000%" y="789" width="0.7576%" height="15" fill="rgb(206,74,20)" fg:x="33" fg:w="1"/><text x="25.2500%" y="799.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (1 samples, 0.76%)</title><rect x="25.0000%" y="773" width="0.7576%" height="15" fill="rgb(230,138,44)" fg:x="33" fg:w="1"/><text x="25.2500%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.76%)</title><rect x="25.0000%" y="757" width="0.7576%" height="15" fill="rgb(235,182,43)" fg:x="33" fg:w="1"/><text x="25.2500%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (1 samples, 0.76%)</title><rect x="25.0000%" y="741" width="0.7576%" height="15" fill="rgb(242,16,51)" fg:x="33" fg:w="1"/><text x="25.2500%" y="751.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.76%)</title><rect x="25.0000%" y="725" width="0.7576%" height="15" fill="rgb(248,9,4)" fg:x="33" fg:w="1"/><text x="25.2500%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (1 samples, 0.76%)</title><rect x="25.0000%" y="709" width="0.7576%" height="15" fill="rgb(210,31,22)" fg:x="33" fg:w="1"/><text x="25.2500%" y="719.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.76%)</title><rect x="25.0000%" y="693" width="0.7576%" height="15" fill="rgb(239,54,39)" fg:x="33" fg:w="1"/><text x="25.2500%" y="703.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.76%)</title><rect x="25.0000%" y="677" width="0.7576%" height="15" fill="rgb(230,99,41)" fg:x="33" fg:w="1"/><text x="25.2500%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.76%)</title><rect x="25.0000%" y="661" width="0.7576%" height="15" fill="rgb(253,106,12)" fg:x="33" fg:w="1"/><text x="25.2500%" y="671.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="25.0000%" y="645" width="0.7576%" height="15" fill="rgb(213,46,41)" fg:x="33" fg:w="1"/><text x="25.2500%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="25.0000%" y="629" width="0.7576%" height="15" fill="rgb(215,133,35)" fg:x="33" fg:w="1"/><text x="25.2500%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="25.0000%" y="613" width="0.7576%" height="15" fill="rgb(213,28,5)" fg:x="33" fg:w="1"/><text x="25.2500%" y="623.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="25.7576%" y="869" width="0.7576%" height="15" fill="rgb(215,77,49)" fg:x="34" fg:w="1"/><text x="26.0076%" y="879.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="25.7576%" y="853" width="0.7576%" height="15" fill="rgb(248,100,22)" fg:x="34" fg:w="1"/><text x="26.0076%" y="863.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="25.7576%" y="837" width="0.7576%" height="15" fill="rgb(208,67,9)" fg:x="34" fg:w="1"/><text x="26.0076%" y="847.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.76%)</title><rect x="26.5152%" y="837" width="0.7576%" height="15" fill="rgb(219,133,21)" fg:x="35" fg:w="1"/><text x="26.7652%" y="847.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.76%)</title><rect x="26.5152%" y="821" width="0.7576%" height="15" fill="rgb(246,46,29)" fg:x="35" fg:w="1"/><text x="26.7652%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.76%)</title><rect x="26.5152%" y="805" width="0.7576%" height="15" fill="rgb(246,185,52)" fg:x="35" fg:w="1"/><text x="26.7652%" y="815.50"></text></g><g><title>&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.76%)</title><rect x="26.5152%" y="789" width="0.7576%" height="15" fill="rgb(252,136,11)" fg:x="35" fg:w="1"/><text x="26.7652%" y="799.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.76%)</title><rect x="26.5152%" y="773" width="0.7576%" height="15" fill="rgb(219,138,53)" fg:x="35" fg:w="1"/><text x="26.7652%" y="783.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.76%)</title><rect x="26.5152%" y="757" width="0.7576%" height="15" fill="rgb(211,51,23)" fg:x="35" fg:w="1"/><text x="26.7652%" y="767.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 0.76%)</title><rect x="26.5152%" y="741" width="0.7576%" height="15" fill="rgb(247,221,28)" fg:x="35" fg:w="1"/><text x="26.7652%" y="751.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.76%)</title><rect x="26.5152%" y="725" width="0.7576%" height="15" fill="rgb(251,222,45)" fg:x="35" fg:w="1"/><text x="26.7652%" y="735.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.76%)</title><rect x="26.5152%" y="709" width="0.7576%" height="15" fill="rgb(217,162,53)" fg:x="35" fg:w="1"/><text x="26.7652%" y="719.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.76%)</title><rect x="26.5152%" y="693" width="0.7576%" height="15" fill="rgb(229,93,14)" fg:x="35" fg:w="1"/><text x="26.7652%" y="703.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 0.76%)</title><rect x="26.5152%" y="677" width="0.7576%" height="15" fill="rgb(209,67,49)" fg:x="35" fg:w="1"/><text x="26.7652%" y="687.50"></text></g><g><title>openssl::ssl::SslRef::read (1 samples, 0.76%)</title><rect x="26.5152%" y="661" width="0.7576%" height="15" fill="rgb(213,87,29)" fg:x="35" fg:w="1"/><text x="26.7652%" y="671.50"></text></g><g><title>SSL_read (1 samples, 0.76%)</title><rect x="26.5152%" y="645" width="0.7576%" height="15" fill="rgb(205,151,52)" fg:x="35" fg:w="1"/><text x="26.7652%" y="655.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="26.5152%" y="629" width="0.7576%" height="15" fill="rgb(253,215,39)" fg:x="35" fg:w="1"/><text x="26.7652%" y="639.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="26.5152%" y="613" width="0.7576%" height="15" fill="rgb(221,220,41)" fg:x="35" fg:w="1"/><text x="26.7652%" y="623.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="26.5152%" y="597" width="0.7576%" height="15" fill="rgb(218,133,21)" fg:x="35" fg:w="1"/><text x="26.7652%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (1 samples, 0.76%)</title><rect x="27.2727%" y="805" width="0.7576%" height="15" fill="rgb(221,193,43)" fg:x="36" fg:w="1"/><text x="27.5227%" y="815.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="27.2727%" y="789" width="0.7576%" height="15" fill="rgb(240,128,52)" fg:x="36" fg:w="1"/><text x="27.5227%" y="799.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="27.2727%" y="773" width="0.7576%" height="15" fill="rgb(253,114,12)" fg:x="36" fg:w="1"/><text x="27.5227%" y="783.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="27.2727%" y="757" width="0.7576%" height="15" fill="rgb(215,223,47)" fg:x="36" fg:w="1"/><text x="27.5227%" y="767.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (1 samples, 0.76%)</title><rect x="28.0303%" y="805" width="0.7576%" height="15" fill="rgb(248,225,23)" fg:x="37" fg:w="1"/><text x="28.2803%" y="815.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::append (1 samples, 0.76%)</title><rect x="28.0303%" y="789" width="0.7576%" height="15" fill="rgb(250,108,0)" fg:x="37" fg:w="1"/><text x="28.2803%" y="799.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (1 samples, 0.76%)</title><rect x="28.0303%" y="773" width="0.7576%" height="15" fill="rgb(228,208,7)" fg:x="37" fg:w="1"/><text x="28.2803%" y="783.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.76%)</title><rect x="28.0303%" y="757" width="0.7576%" height="15" fill="rgb(244,45,10)" fg:x="37" fg:w="1"/><text x="28.2803%" y="767.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (1 samples, 0.76%)</title><rect x="28.0303%" y="741" width="0.7576%" height="15" fill="rgb(207,125,25)" fg:x="37" fg:w="1"/><text x="28.2803%" y="751.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.76%)</title><rect x="28.0303%" y="725" width="0.7576%" height="15" fill="rgb(210,195,18)" fg:x="37" fg:w="1"/><text x="28.2803%" y="735.50"></text></g><g><title>&lt;http::header::name::StandardHeader as core::hash::Hash&gt;::hash (1 samples, 0.76%)</title><rect x="28.0303%" y="709" width="0.7576%" height="15" fill="rgb(249,80,12)" fg:x="37" fg:w="1"/><text x="28.2803%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.76%)</title><rect x="28.0303%" y="693" width="0.7576%" height="15" fill="rgb(221,65,9)" fg:x="37" fg:w="1"/><text x="28.2803%" y="703.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.76%)</title><rect x="28.0303%" y="677" width="0.7576%" height="15" fill="rgb(235,49,36)" fg:x="37" fg:w="1"/><text x="28.2803%" y="687.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.76%)</title><rect x="28.0303%" y="661" width="0.7576%" height="15" fill="rgb(225,32,20)" fg:x="37" fg:w="1"/><text x="28.2803%" y="671.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1 samples, 0.76%)</title><rect x="28.0303%" y="645" width="0.7576%" height="15" fill="rgb(215,141,46)" fg:x="37" fg:w="1"/><text x="28.2803%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="28.0303%" y="629" width="0.7576%" height="15" fill="rgb(250,160,47)" fg:x="37" fg:w="1"/><text x="28.2803%" y="639.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="28.0303%" y="613" width="0.7576%" height="15" fill="rgb(216,222,40)" fg:x="37" fg:w="1"/><text x="28.2803%" y="623.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="28.0303%" y="597" width="0.7576%" height="15" fill="rgb(234,217,39)" fg:x="37" fg:w="1"/><text x="28.2803%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="28.0303%" y="581" width="0.7576%" height="15" fill="rgb(207,178,40)" fg:x="37" fg:w="1"/><text x="28.2803%" y="591.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (1 samples, 0.76%)</title><rect x="28.7879%" y="805" width="0.7576%" height="15" fill="rgb(221,136,13)" fg:x="38" fg:w="1"/><text x="29.0379%" y="815.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (1 samples, 0.76%)</title><rect x="28.7879%" y="789" width="0.7576%" height="15" fill="rgb(249,199,10)" fg:x="38" fg:w="1"/><text x="29.0379%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.76%)</title><rect x="28.7879%" y="773" width="0.7576%" height="15" fill="rgb(249,222,13)" fg:x="38" fg:w="1"/><text x="29.0379%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.76%)</title><rect x="28.7879%" y="757" width="0.7576%" height="15" fill="rgb(244,185,38)" fg:x="38" fg:w="1"/><text x="29.0379%" y="767.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;::from (1 samples, 0.76%)</title><rect x="28.7879%" y="741" width="0.7576%" height="15" fill="rgb(236,202,9)" fg:x="38" fg:w="1"/><text x="29.0379%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.76%)</title><rect x="28.7879%" y="725" width="0.7576%" height="15" fill="rgb(250,229,37)" fg:x="38" fg:w="1"/><text x="29.0379%" y="735.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="28.7879%" y="709" width="0.7576%" height="15" fill="rgb(206,174,23)" fg:x="38" fg:w="1"/><text x="29.0379%" y="719.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="28.7879%" y="693" width="0.7576%" height="15" fill="rgb(211,33,43)" fg:x="38" fg:w="1"/><text x="29.0379%" y="703.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="28.7879%" y="677" width="0.7576%" height="15" fill="rgb(245,58,50)" fg:x="38" fg:w="1"/><text x="29.0379%" y="687.50"></text></g><g><title>http::header::value::HeaderValue::from_maybe_shared_unchecked (1 samples, 0.76%)</title><rect x="29.5455%" y="805" width="0.7576%" height="15" fill="rgb(244,68,36)" fg:x="39" fg:w="1"/><text x="29.7955%" y="815.50"></text></g><g><title>http::header::value::HeaderValue::from_maybe_shared (1 samples, 0.76%)</title><rect x="29.5455%" y="789" width="0.7576%" height="15" fill="rgb(232,229,15)" fg:x="39" fg:w="1"/><text x="29.7955%" y="799.50"></text></g><g><title>http::header::value::HeaderValue::from_shared (1 samples, 0.76%)</title><rect x="29.5455%" y="773" width="0.7576%" height="15" fill="rgb(254,30,23)" fg:x="39" fg:w="1"/><text x="29.7955%" y="783.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic (1 samples, 0.76%)</title><rect x="29.5455%" y="757" width="0.7576%" height="15" fill="rgb(235,160,14)" fg:x="39" fg:w="1"/><text x="29.7955%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="29.5455%" y="741" width="0.7576%" height="15" fill="rgb(212,155,44)" fg:x="39" fg:w="1"/><text x="29.7955%" y="751.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.76%)</title><rect x="29.5455%" y="725" width="0.7576%" height="15" fill="rgb(226,2,50)" fg:x="39" fg:w="1"/><text x="29.7955%" y="735.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="29.5455%" y="709" width="0.7576%" height="15" fill="rgb(234,177,6)" fg:x="39" fg:w="1"/><text x="29.7955%" y="719.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="29.5455%" y="693" width="0.7576%" height="15" fill="rgb(217,24,9)" fg:x="39" fg:w="1"/><text x="29.7955%" y="703.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="29.5455%" y="677" width="0.7576%" height="15" fill="rgb(220,13,46)" fg:x="39" fg:w="1"/><text x="29.7955%" y="687.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (8 samples, 6.06%)</title><rect x="25.0000%" y="901" width="6.0606%" height="15" fill="rgb(239,221,27)" fg:x="33" fg:w="8"/><text x="25.2500%" y="911.50">hyper::p..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (8 samples, 6.06%)</title><rect x="25.0000%" y="885" width="6.0606%" height="15" fill="rgb(222,198,25)" fg:x="33" fg:w="8"/><text x="25.2500%" y="895.50">hyper::p..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (6 samples, 4.55%)</title><rect x="26.5152%" y="869" width="4.5455%" height="15" fill="rgb(211,99,13)" fg:x="35" fg:w="6"/><text x="26.7652%" y="879.50">hyper..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (6 samples, 4.55%)</title><rect x="26.5152%" y="853" width="4.5455%" height="15" fill="rgb(232,111,31)" fg:x="35" fg:w="6"/><text x="26.7652%" y="863.50">hyper..</text></g><g><title>hyper::proto::h1::role::parse_headers (5 samples, 3.79%)</title><rect x="27.2727%" y="837" width="3.7879%" height="15" fill="rgb(245,82,37)" fg:x="36" fg:w="5"/><text x="27.5227%" y="847.50">hype..</text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (5 samples, 3.79%)</title><rect x="27.2727%" y="821" width="3.7879%" height="15" fill="rgb(227,149,46)" fg:x="36" fg:w="5"/><text x="27.5227%" y="831.50">&lt;hyp..</text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (1 samples, 0.76%)</title><rect x="30.3030%" y="805" width="0.7576%" height="15" fill="rgb(218,36,50)" fg:x="40" fg:w="1"/><text x="30.5530%" y="815.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (1 samples, 0.76%)</title><rect x="30.3030%" y="789" width="0.7576%" height="15" fill="rgb(226,80,48)" fg:x="40" fg:w="1"/><text x="30.5530%" y="799.50"></text></g><g><title>httparse::parse_headers_iter_uninit (1 samples, 0.76%)</title><rect x="30.3030%" y="773" width="0.7576%" height="15" fill="rgb(238,224,15)" fg:x="40" fg:w="1"/><text x="30.5530%" y="783.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="30.3030%" y="757" width="0.7576%" height="15" fill="rgb(241,136,10)" fg:x="40" fg:w="1"/><text x="30.5530%" y="767.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="30.3030%" y="741" width="0.7576%" height="15" fill="rgb(208,32,45)" fg:x="40" fg:w="1"/><text x="30.5530%" y="751.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="30.3030%" y="725" width="0.7576%" height="15" fill="rgb(207,135,9)" fg:x="40" fg:w="1"/><text x="30.5530%" y="735.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="1109" width="6.8182%" height="15" fill="rgb(206,86,44)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1119.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="1093" width="6.8182%" height="15" fill="rgb(245,177,15)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1103.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="1077" width="6.8182%" height="15" fill="rgb(206,64,50)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1087.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="1061" width="6.8182%" height="15" fill="rgb(234,36,40)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1071.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="1045" width="6.8182%" height="15" fill="rgb(213,64,8)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1055.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="1029" width="6.8182%" height="15" fill="rgb(210,75,36)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1039.50">&lt;futures_..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (9 samples, 6.82%)</title><rect x="25.0000%" y="1013" width="6.8182%" height="15" fill="rgb(229,88,21)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1023.50">&lt;F as fut..</text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="997" width="6.8182%" height="15" fill="rgb(252,204,47)" fg:x="33" fg:w="9"/><text x="25.2500%" y="1007.50">&lt;hyper::c..</text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="981" width="6.8182%" height="15" fill="rgb(208,77,27)" fg:x="33" fg:w="9"/><text x="25.2500%" y="991.50">&lt;hyper::c..</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="25.0000%" y="965" width="6.8182%" height="15" fill="rgb(221,76,26)" fg:x="33" fg:w="9"/><text x="25.2500%" y="975.50">&lt;hyper::p..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (9 samples, 6.82%)</title><rect x="25.0000%" y="949" width="6.8182%" height="15" fill="rgb(225,139,18)" fg:x="33" fg:w="9"/><text x="25.2500%" y="959.50">hyper::pr..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (9 samples, 6.82%)</title><rect x="25.0000%" y="933" width="6.8182%" height="15" fill="rgb(230,137,11)" fg:x="33" fg:w="9"/><text x="25.2500%" y="943.50">hyper::pr..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (9 samples, 6.82%)</title><rect x="25.0000%" y="917" width="6.8182%" height="15" fill="rgb(212,28,1)" fg:x="33" fg:w="9"/><text x="25.2500%" y="927.50">hyper::pr..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (1 samples, 0.76%)</title><rect x="31.0606%" y="901" width="0.7576%" height="15" fill="rgb(248,164,17)" fg:x="41" fg:w="1"/><text x="31.3106%" y="911.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="31.0606%" y="885" width="0.7576%" height="15" fill="rgb(222,171,42)" fg:x="41" fg:w="1"/><text x="31.3106%" y="895.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="31.0606%" y="869" width="0.7576%" height="15" fill="rgb(243,84,45)" fg:x="41" fg:w="1"/><text x="31.3106%" y="879.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="31.0606%" y="853" width="0.7576%" height="15" fill="rgb(252,49,23)" fg:x="41" fg:w="1"/><text x="31.3106%" y="863.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (1 samples, 0.76%)</title><rect x="31.8182%" y="965" width="0.7576%" height="15" fill="rgb(215,19,7)" fg:x="42" fg:w="1"/><text x="32.0682%" y="975.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="949" width="0.7576%" height="15" fill="rgb(238,81,41)" fg:x="42" fg:w="1"/><text x="32.0682%" y="959.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.76%)</title><rect x="31.8182%" y="933" width="0.7576%" height="15" fill="rgb(210,199,37)" fg:x="42" fg:w="1"/><text x="32.0682%" y="943.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="917" width="0.7576%" height="15" fill="rgb(244,192,49)" fg:x="42" fg:w="1"/><text x="32.0682%" y="927.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="901" width="0.7576%" height="15" fill="rgb(226,211,11)" fg:x="42" fg:w="1"/><text x="32.0682%" y="911.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="885" width="0.7576%" height="15" fill="rgb(236,162,54)" fg:x="42" fg:w="1"/><text x="32.0682%" y="895.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="869" width="0.7576%" height="15" fill="rgb(220,229,9)" fg:x="42" fg:w="1"/><text x="32.0682%" y="879.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="853" width="0.7576%" height="15" fill="rgb(250,87,22)" fg:x="42" fg:w="1"/><text x="32.0682%" y="863.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.76%)</title><rect x="31.8182%" y="837" width="0.7576%" height="15" fill="rgb(239,43,17)" fg:x="42" fg:w="1"/><text x="32.0682%" y="847.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="821" width="0.7576%" height="15" fill="rgb(231,177,25)" fg:x="42" fg:w="1"/><text x="32.0682%" y="831.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="805" width="0.7576%" height="15" fill="rgb(219,179,1)" fg:x="42" fg:w="1"/><text x="32.0682%" y="815.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="789" width="0.7576%" height="15" fill="rgb(238,219,53)" fg:x="42" fg:w="1"/><text x="32.0682%" y="799.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="773" width="0.7576%" height="15" fill="rgb(232,167,36)" fg:x="42" fg:w="1"/><text x="32.0682%" y="783.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.76%)</title><rect x="31.8182%" y="757" width="0.7576%" height="15" fill="rgb(244,19,51)" fg:x="42" fg:w="1"/><text x="32.0682%" y="767.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="741" width="0.7576%" height="15" fill="rgb(224,6,22)" fg:x="42" fg:w="1"/><text x="32.0682%" y="751.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="725" width="0.7576%" height="15" fill="rgb(224,145,5)" fg:x="42" fg:w="1"/><text x="32.0682%" y="735.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="709" width="0.7576%" height="15" fill="rgb(234,130,49)" fg:x="42" fg:w="1"/><text x="32.0682%" y="719.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="693" width="0.7576%" height="15" fill="rgb(254,6,2)" fg:x="42" fg:w="1"/><text x="32.0682%" y="703.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.76%)</title><rect x="31.8182%" y="677" width="0.7576%" height="15" fill="rgb(208,96,46)" fg:x="42" fg:w="1"/><text x="32.0682%" y="687.50"></text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="661" width="0.7576%" height="15" fill="rgb(239,3,39)" fg:x="42" fg:w="1"/><text x="32.0682%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="645" width="0.7576%" height="15" fill="rgb(233,210,1)" fg:x="42" fg:w="1"/><text x="32.0682%" y="655.50"></text></g><g><title>reqwest::connect::with_timeout::{{closure}} (1 samples, 0.76%)</title><rect x="31.8182%" y="629" width="0.7576%" height="15" fill="rgb(244,137,37)" fg:x="42" fg:w="1"/><text x="32.0682%" y="639.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (1 samples, 0.76%)</title><rect x="31.8182%" y="613" width="0.7576%" height="15" fill="rgb(240,136,2)" fg:x="42" fg:w="1"/><text x="32.0682%" y="623.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="597" width="0.7576%" height="15" fill="rgb(239,18,37)" fg:x="42" fg:w="1"/><text x="32.0682%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="581" width="0.7576%" height="15" fill="rgb(218,185,22)" fg:x="42" fg:w="1"/><text x="32.0682%" y="591.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 0.76%)</title><rect x="31.8182%" y="565" width="0.7576%" height="15" fill="rgb(225,218,4)" fg:x="42" fg:w="1"/><text x="32.0682%" y="575.50"></text></g><g><title>tokio_native_tls::TlsConnector::connect::{{closure}} (1 samples, 0.76%)</title><rect x="31.8182%" y="549" width="0.7576%" height="15" fill="rgb(230,182,32)" fg:x="42" fg:w="1"/><text x="32.0682%" y="559.50"></text></g><g><title>tokio_native_tls::handshake::{{closure}} (1 samples, 0.76%)</title><rect x="31.8182%" y="533" width="0.7576%" height="15" fill="rgb(242,56,43)" fg:x="42" fg:w="1"/><text x="32.0682%" y="543.50"></text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="31.8182%" y="517" width="0.7576%" height="15" fill="rgb(233,99,24)" fg:x="42" fg:w="1"/><text x="32.0682%" y="527.50"></text></g><g><title>native_tls::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 0.76%)</title><rect x="31.8182%" y="501" width="0.7576%" height="15" fill="rgb(234,209,42)" fg:x="42" fg:w="1"/><text x="32.0682%" y="511.50"></text></g><g><title>native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 0.76%)</title><rect x="31.8182%" y="485" width="0.7576%" height="15" fill="rgb(227,7,12)" fg:x="42" fg:w="1"/><text x="32.0682%" y="495.50"></text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (1 samples, 0.76%)</title><rect x="31.8182%" y="469" width="0.7576%" height="15" fill="rgb(245,203,43)" fg:x="42" fg:w="1"/><text x="32.0682%" y="479.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::do_handshake (1 samples, 0.76%)</title><rect x="31.8182%" y="453" width="0.7576%" height="15" fill="rgb(238,205,33)" fg:x="42" fg:w="1"/><text x="32.0682%" y="463.50"></text></g><g><title>BIO_read (1 samples, 0.76%)</title><rect x="31.8182%" y="437" width="0.7576%" height="15" fill="rgb(231,56,7)" fg:x="42" fg:w="1"/><text x="32.0682%" y="447.50"></text></g><g><title>openssl::ssl::bio::bread (1 samples, 0.76%)</title><rect x="31.8182%" y="421" width="0.7576%" height="15" fill="rgb(244,186,29)" fg:x="42" fg:w="1"/><text x="32.0682%" y="431.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.76%)</title><rect x="31.8182%" y="405" width="0.7576%" height="15" fill="rgb(234,111,31)" fg:x="42" fg:w="1"/><text x="32.0682%" y="415.50"></text></g><g><title>std::panicking::try (1 samples, 0.76%)</title><rect x="31.8182%" y="389" width="0.7576%" height="15" fill="rgb(241,149,10)" fg:x="42" fg:w="1"/><text x="32.0682%" y="399.50"></text></g><g><title>__rust_try (1 samples, 0.76%)</title><rect x="31.8182%" y="373" width="0.7576%" height="15" fill="rgb(249,206,44)" fg:x="42" fg:w="1"/><text x="32.0682%" y="383.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.76%)</title><rect x="31.8182%" y="357" width="0.7576%" height="15" fill="rgb(251,153,30)" fg:x="42" fg:w="1"/><text x="32.0682%" y="367.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.76%)</title><rect x="31.8182%" y="341" width="0.7576%" height="15" fill="rgb(239,152,38)" fg:x="42" fg:w="1"/><text x="32.0682%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.76%)</title><rect x="31.8182%" y="325" width="0.7576%" height="15" fill="rgb(249,139,47)" fg:x="42" fg:w="1"/><text x="32.0682%" y="335.50"></text></g><g><title>openssl::ssl::bio::bread::{{closure}} (1 samples, 0.76%)</title><rect x="31.8182%" y="309" width="0.7576%" height="15" fill="rgb(244,64,35)" fg:x="42" fg:w="1"/><text x="32.0682%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="31.8182%" y="293" width="0.7576%" height="15" fill="rgb(216,46,15)" fg:x="42" fg:w="1"/><text x="32.0682%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="31.8182%" y="277" width="0.7576%" height="15" fill="rgb(250,74,19)" fg:x="42" fg:w="1"/><text x="32.0682%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="31.8182%" y="261" width="0.7576%" height="15" fill="rgb(249,42,33)" fg:x="42" fg:w="1"/><text x="32.0682%" y="271.50"></text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="31.8182%" y="1045" width="1.5152%" height="15" fill="rgb(242,149,17)" fg:x="42" fg:w="2"/><text x="32.0682%" y="1055.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="31.8182%" y="1029" width="1.5152%" height="15" fill="rgb(244,29,21)" fg:x="42" fg:w="2"/><text x="32.0682%" y="1039.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="31.8182%" y="1013" width="1.5152%" height="15" fill="rgb(220,130,37)" fg:x="42" fg:w="2"/><text x="32.0682%" y="1023.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (2 samples, 1.52%)</title><rect x="31.8182%" y="997" width="1.5152%" height="15" fill="rgb(211,67,2)" fg:x="42" fg:w="2"/><text x="32.0682%" y="1007.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (2 samples, 1.52%)</title><rect x="31.8182%" y="981" width="1.5152%" height="15" fill="rgb(235,68,52)" fg:x="42" fg:w="2"/><text x="32.0682%" y="991.50"></text></g><g><title>hyper::client::client::PoolClient&lt;B&gt;::send_request_retryable (1 samples, 0.76%)</title><rect x="32.5758%" y="965" width="0.7576%" height="15" fill="rgb(246,142,3)" fg:x="43" fg:w="1"/><text x="32.8258%" y="975.50"></text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (1 samples, 0.76%)</title><rect x="32.5758%" y="949" width="0.7576%" height="15" fill="rgb(241,25,7)" fg:x="43" fg:w="1"/><text x="32.8258%" y="959.50"></text></g><g><title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (1 samples, 0.76%)</title><rect x="32.5758%" y="933" width="0.7576%" height="15" fill="rgb(242,119,39)" fg:x="43" fg:w="1"/><text x="32.8258%" y="943.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (1 samples, 0.76%)</title><rect x="32.5758%" y="917" width="0.7576%" height="15" fill="rgb(241,98,45)" fg:x="43" fg:w="1"/><text x="32.8258%" y="927.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (1 samples, 0.76%)</title><rect x="32.5758%" y="901" width="0.7576%" height="15" fill="rgb(254,28,30)" fg:x="43" fg:w="1"/><text x="32.8258%" y="911.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (1 samples, 0.76%)</title><rect x="32.5758%" y="885" width="0.7576%" height="15" fill="rgb(241,142,54)" fg:x="43" fg:w="1"/><text x="32.8258%" y="895.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (1 samples, 0.76%)</title><rect x="32.5758%" y="869" width="0.7576%" height="15" fill="rgb(222,85,15)" fg:x="43" fg:w="1"/><text x="32.8258%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.76%)</title><rect x="32.5758%" y="853" width="0.7576%" height="15" fill="rgb(210,85,47)" fg:x="43" fg:w="1"/><text x="32.8258%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.76%)</title><rect x="32.5758%" y="837" width="0.7576%" height="15" fill="rgb(224,206,25)" fg:x="43" fg:w="1"/><text x="32.8258%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.76%)</title><rect x="32.5758%" y="821" width="0.7576%" height="15" fill="rgb(243,201,19)" fg:x="43" fg:w="1"/><text x="32.8258%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.76%)</title><rect x="32.5758%" y="805" width="0.7576%" height="15" fill="rgb(236,59,4)" fg:x="43" fg:w="1"/><text x="32.8258%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.76%)</title><rect x="32.5758%" y="789" width="0.7576%" height="15" fill="rgb(254,179,45)" fg:x="43" fg:w="1"/><text x="32.8258%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.76%)</title><rect x="32.5758%" y="773" width="0.7576%" height="15" fill="rgb(226,14,10)" fg:x="43" fg:w="1"/><text x="32.8258%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.76%)</title><rect x="32.5758%" y="757" width="0.7576%" height="15" fill="rgb(244,27,41)" fg:x="43" fg:w="1"/><text x="32.8258%" y="767.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.76%)</title><rect x="32.5758%" y="741" width="0.7576%" height="15" fill="rgb(235,35,32)" fg:x="43" fg:w="1"/><text x="32.8258%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (1 samples, 0.76%)</title><rect x="32.5758%" y="725" width="0.7576%" height="15" fill="rgb(218,68,31)" fg:x="43" fg:w="1"/><text x="32.8258%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.76%)</title><rect x="32.5758%" y="709" width="0.7576%" height="15" fill="rgb(207,120,37)" fg:x="43" fg:w="1"/><text x="32.8258%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked (1 samples, 0.76%)</title><rect x="32.5758%" y="693" width="0.7576%" height="15" fill="rgb(227,98,0)" fg:x="43" fg:w="1"/><text x="32.8258%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.76%)</title><rect x="32.5758%" y="677" width="0.7576%" height="15" fill="rgb(207,7,3)" fg:x="43" fg:w="1"/><text x="32.8258%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1 samples, 0.76%)</title><rect x="32.5758%" y="661" width="0.7576%" height="15" fill="rgb(206,98,19)" fg:x="43" fg:w="1"/><text x="32.8258%" y="671.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="32.5758%" y="645" width="0.7576%" height="15" fill="rgb(217,5,26)" fg:x="43" fg:w="1"/><text x="32.8258%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="32.5758%" y="629" width="0.7576%" height="15" fill="rgb(235,190,38)" fg:x="43" fg:w="1"/><text x="32.8258%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="32.5758%" y="613" width="0.7576%" height="15" fill="rgb(247,86,24)" fg:x="43" fg:w="1"/><text x="32.8258%" y="623.50"></text></g><g><title>colony_rs::contracts::colony::colony::Colony&lt;M&gt;::get_domain (1 samples, 0.76%)</title><rect x="33.3333%" y="1029" width="0.7576%" height="15" fill="rgb(205,101,16)" fg:x="44" fg:w="1"/><text x="33.5833%" y="1039.50"></text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::method_hash (1 samples, 0.76%)</title><rect x="33.3333%" y="1013" width="0.7576%" height="15" fill="rgb(246,168,33)" fg:x="44" fg:w="1"/><text x="33.5833%" y="1023.50"></text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::method_func (1 samples, 0.76%)</title><rect x="33.3333%" y="997" width="0.7576%" height="15" fill="rgb(231,114,1)" fg:x="44" fg:w="1"/><text x="33.5833%" y="1007.50"></text></g><g><title>ethers_contract::base::encode_function_data (1 samples, 0.76%)</title><rect x="33.3333%" y="981" width="0.7576%" height="15" fill="rgb(207,184,53)" fg:x="44" fg:w="1"/><text x="33.5833%" y="991.50"></text></g><g><title>ethabi::function::Function::encode_input (1 samples, 0.76%)</title><rect x="33.3333%" y="965" width="0.7576%" height="15" fill="rgb(224,95,51)" fg:x="44" fg:w="1"/><text x="33.5833%" y="975.50"></text></g><g><title>ethabi::signature::short_signature (1 samples, 0.76%)</title><rect x="33.3333%" y="949" width="0.7576%" height="15" fill="rgb(212,188,45)" fg:x="44" fg:w="1"/><text x="33.5833%" y="959.50"></text></g><g><title>ethabi::signature::fill_signature (1 samples, 0.76%)</title><rect x="33.3333%" y="933" width="0.7576%" height="15" fill="rgb(223,154,38)" fg:x="44" fg:w="1"/><text x="33.5833%" y="943.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (1 samples, 0.76%)</title><rect x="33.3333%" y="917" width="0.7576%" height="15" fill="rgb(251,22,52)" fg:x="44" fg:w="1"/><text x="33.5833%" y="927.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.76%)</title><rect x="33.3333%" y="901" width="0.7576%" height="15" fill="rgb(229,209,22)" fg:x="44" fg:w="1"/><text x="33.5833%" y="911.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (1 samples, 0.76%)</title><rect x="33.3333%" y="885" width="0.7576%" height="15" fill="rgb(234,138,34)" fg:x="44" fg:w="1"/><text x="33.5833%" y="895.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.76%)</title><rect x="33.3333%" y="869" width="0.7576%" height="15" fill="rgb(212,95,11)" fg:x="44" fg:w="1"/><text x="33.5833%" y="879.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.76%)</title><rect x="33.3333%" y="853" width="0.7576%" height="15" fill="rgb(240,179,47)" fg:x="44" fg:w="1"/><text x="33.5833%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.76%)</title><rect x="33.3333%" y="837" width="0.7576%" height="15" fill="rgb(240,163,11)" fg:x="44" fg:w="1"/><text x="33.5833%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.76%)</title><rect x="33.3333%" y="821" width="0.7576%" height="15" fill="rgb(236,37,12)" fg:x="44" fg:w="1"/><text x="33.5833%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.76%)</title><rect x="33.3333%" y="805" width="0.7576%" height="15" fill="rgb(232,164,16)" fg:x="44" fg:w="1"/><text x="33.5833%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.76%)</title><rect x="33.3333%" y="789" width="0.7576%" height="15" fill="rgb(244,205,15)" fg:x="44" fg:w="1"/><text x="33.5833%" y="799.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="33.3333%" y="773" width="0.7576%" height="15" fill="rgb(223,117,47)" fg:x="44" fg:w="1"/><text x="33.5833%" y="783.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="33.3333%" y="757" width="0.7576%" height="15" fill="rgb(244,107,35)" fg:x="44" fg:w="1"/><text x="33.5833%" y="767.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="33.3333%" y="741" width="0.7576%" height="15" fill="rgb(205,140,8)" fg:x="44" fg:w="1"/><text x="33.5833%" y="751.50"></text></g><g><title>&lt;ethabi::event::Event as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.0909%" y="885" width="0.7576%" height="15" fill="rgb(228,84,46)" fg:x="45" fg:w="1"/><text x="34.3409%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.0909%" y="869" width="0.7576%" height="15" fill="rgb(254,188,9)" fg:x="45" fg:w="1"/><text x="34.3409%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.76%)</title><rect x="34.0909%" y="853" width="0.7576%" height="15" fill="rgb(206,112,54)" fg:x="45" fg:w="1"/><text x="34.3409%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.76%)</title><rect x="34.0909%" y="837" width="0.7576%" height="15" fill="rgb(216,84,49)" fg:x="45" fg:w="1"/><text x="34.3409%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="34.0909%" y="821" width="0.7576%" height="15" fill="rgb(214,194,35)" fg:x="45" fg:w="1"/><text x="34.3409%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.76%)</title><rect x="34.0909%" y="805" width="0.7576%" height="15" fill="rgb(249,28,3)" fg:x="45" fg:w="1"/><text x="34.3409%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.76%)</title><rect x="34.0909%" y="789" width="0.7576%" height="15" fill="rgb(222,56,52)" fg:x="45" fg:w="1"/><text x="34.3409%" y="799.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="34.0909%" y="773" width="0.7576%" height="15" fill="rgb(245,217,50)" fg:x="45" fg:w="1"/><text x="34.3409%" y="783.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="34.0909%" y="757" width="0.7576%" height="15" fill="rgb(213,201,24)" fg:x="45" fg:w="1"/><text x="34.3409%" y="767.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="34.0909%" y="741" width="0.7576%" height="15" fill="rgb(248,116,28)" fg:x="45" fg:w="1"/><text x="34.3409%" y="751.50"></text></g><g><title>&lt;ethabi::contract::Contract as core::clone::Clone&gt;::clone (2 samples, 1.52%)</title><rect x="34.0909%" y="1013" width="1.5152%" height="15" fill="rgb(219,72,43)" fg:x="45" fg:w="2"/><text x="34.3409%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2 samples, 1.52%)</title><rect x="34.0909%" y="997" width="1.5152%" height="15" fill="rgb(209,138,14)" fg:x="45" fg:w="2"/><text x="34.3409%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 1.52%)</title><rect x="34.0909%" y="981" width="1.5152%" height="15" fill="rgb(222,18,33)" fg:x="45" fg:w="2"/><text x="34.3409%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 1.52%)</title><rect x="34.0909%" y="965" width="1.5152%" height="15" fill="rgb(213,199,7)" fg:x="45" fg:w="2"/><text x="34.3409%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 1.52%)</title><rect x="34.0909%" y="949" width="1.5152%" height="15" fill="rgb(250,110,10)" fg:x="45" fg:w="2"/><text x="34.3409%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 1.52%)</title><rect x="34.0909%" y="933" width="1.5152%" height="15" fill="rgb(248,123,6)" fg:x="45" fg:w="2"/><text x="34.3409%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 1.52%)</title><rect x="34.0909%" y="917" width="1.5152%" height="15" fill="rgb(206,91,31)" fg:x="45" fg:w="2"/><text x="34.3409%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 1.52%)</title><rect x="34.0909%" y="901" width="1.5152%" height="15" fill="rgb(211,154,13)" fg:x="45" fg:w="2"/><text x="34.3409%" y="911.50"></text></g><g><title>&lt;ethabi::function::Function as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.8485%" y="885" width="0.7576%" height="15" fill="rgb(225,148,7)" fg:x="46" fg:w="1"/><text x="35.0985%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.8485%" y="869" width="0.7576%" height="15" fill="rgb(220,160,43)" fg:x="46" fg:w="1"/><text x="35.0985%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.76%)</title><rect x="34.8485%" y="853" width="0.7576%" height="15" fill="rgb(213,52,39)" fg:x="46" fg:w="1"/><text x="35.0985%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.76%)</title><rect x="34.8485%" y="837" width="0.7576%" height="15" fill="rgb(243,137,7)" fg:x="46" fg:w="1"/><text x="35.0985%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.76%)</title><rect x="34.8485%" y="821" width="0.7576%" height="15" fill="rgb(230,79,13)" fg:x="46" fg:w="1"/><text x="35.0985%" y="831.50"></text></g><g><title>&lt;ethabi::param::Param as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.8485%" y="805" width="0.7576%" height="15" fill="rgb(247,105,23)" fg:x="46" fg:w="1"/><text x="35.0985%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.8485%" y="789" width="0.7576%" height="15" fill="rgb(223,179,41)" fg:x="46" fg:w="1"/><text x="35.0985%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.8485%" y="773" width="0.7576%" height="15" fill="rgb(218,9,34)" fg:x="46" fg:w="1"/><text x="35.0985%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="34.8485%" y="757" width="0.7576%" height="15" fill="rgb(222,106,8)" fg:x="46" fg:w="1"/><text x="35.0985%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.76%)</title><rect x="34.8485%" y="741" width="0.7576%" height="15" fill="rgb(211,220,0)" fg:x="46" fg:w="1"/><text x="35.0985%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.76%)</title><rect x="34.8485%" y="725" width="0.7576%" height="15" fill="rgb(229,52,16)" fg:x="46" fg:w="1"/><text x="35.0985%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.76%)</title><rect x="34.8485%" y="709" width="0.7576%" height="15" fill="rgb(212,155,18)" fg:x="46" fg:w="1"/><text x="35.0985%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.76%)</title><rect x="34.8485%" y="693" width="0.7576%" height="15" fill="rgb(242,21,14)" fg:x="46" fg:w="1"/><text x="35.0985%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.76%)</title><rect x="34.8485%" y="677" width="0.7576%" height="15" fill="rgb(222,19,48)" fg:x="46" fg:w="1"/><text x="35.0985%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.76%)</title><rect x="34.8485%" y="661" width="0.7576%" height="15" fill="rgb(232,45,27)" fg:x="46" fg:w="1"/><text x="35.0985%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.76%)</title><rect x="34.8485%" y="645" width="0.7576%" height="15" fill="rgb(249,103,42)" fg:x="46" fg:w="1"/><text x="35.0985%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.76%)</title><rect x="34.8485%" y="629" width="0.7576%" height="15" fill="rgb(246,81,33)" fg:x="46" fg:w="1"/><text x="35.0985%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.76%)</title><rect x="34.8485%" y="613" width="0.7576%" height="15" fill="rgb(252,33,42)" fg:x="46" fg:w="1"/><text x="35.0985%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.76%)</title><rect x="34.8485%" y="597" width="0.7576%" height="15" fill="rgb(209,212,41)" fg:x="46" fg:w="1"/><text x="35.0985%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.76%)</title><rect x="34.8485%" y="581" width="0.7576%" height="15" fill="rgb(207,154,6)" fg:x="46" fg:w="1"/><text x="35.0985%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="34.8485%" y="565" width="0.7576%" height="15" fill="rgb(223,64,47)" fg:x="46" fg:w="1"/><text x="35.0985%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="34.8485%" y="549" width="0.7576%" height="15" fill="rgb(211,161,38)" fg:x="46" fg:w="1"/><text x="35.0985%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="34.8485%" y="533" width="0.7576%" height="15" fill="rgb(219,138,40)" fg:x="46" fg:w="1"/><text x="35.0985%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.76%)</title><rect x="35.6061%" y="645" width="0.7576%" height="15" fill="rgb(241,228,46)" fg:x="47" fg:w="1"/><text x="35.8561%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.76%)</title><rect x="35.6061%" y="629" width="0.7576%" height="15" fill="rgb(223,209,38)" fg:x="47" fg:w="1"/><text x="35.8561%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.76%)</title><rect x="35.6061%" y="613" width="0.7576%" height="15" fill="rgb(236,164,45)" fg:x="47" fg:w="1"/><text x="35.8561%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.76%)</title><rect x="35.6061%" y="597" width="0.7576%" height="15" fill="rgb(231,15,5)" fg:x="47" fg:w="1"/><text x="35.8561%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.76%)</title><rect x="35.6061%" y="581" width="0.7576%" height="15" fill="rgb(252,35,15)" fg:x="47" fg:w="1"/><text x="35.8561%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.76%)</title><rect x="35.6061%" y="565" width="0.7576%" height="15" fill="rgb(248,181,18)" fg:x="47" fg:w="1"/><text x="35.8561%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.76%)</title><rect x="35.6061%" y="549" width="0.7576%" height="15" fill="rgb(233,39,42)" fg:x="47" fg:w="1"/><text x="35.8561%" y="559.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (1 samples, 0.76%)</title><rect x="35.6061%" y="533" width="0.7576%" height="15" fill="rgb(238,110,33)" fg:x="47" fg:w="1"/><text x="35.8561%" y="543.50"></text></g><g><title> N]&gt;::hash (1 samples, 0.76%)</title><rect x="35.6061%" y="517" width="0.7576%" height="15" fill="rgb(233,195,10)" fg:x="47" fg:w="1"/><text x="35.8561%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.76%)</title><rect x="35.6061%" y="501" width="0.7576%" height="15" fill="rgb(254,105,3)" fg:x="47" fg:w="1"/><text x="35.8561%" y="511.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.76%)</title><rect x="35.6061%" y="485" width="0.7576%" height="15" fill="rgb(221,225,9)" fg:x="47" fg:w="1"/><text x="35.8561%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.76%)</title><rect x="35.6061%" y="469" width="0.7576%" height="15" fill="rgb(224,227,45)" fg:x="47" fg:w="1"/><text x="35.8561%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.76%)</title><rect x="35.6061%" y="453" width="0.7576%" height="15" fill="rgb(229,198,43)" fg:x="47" fg:w="1"/><text x="35.8561%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.76%)</title><rect x="35.6061%" y="437" width="0.7576%" height="15" fill="rgb(206,209,35)" fg:x="47" fg:w="1"/><text x="35.8561%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.76%)</title><rect x="35.6061%" y="421" width="0.7576%" height="15" fill="rgb(245,195,53)" fg:x="47" fg:w="1"/><text x="35.8561%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="35.6061%" y="405" width="0.7576%" height="15" fill="rgb(240,92,26)" fg:x="47" fg:w="1"/><text x="35.8561%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="35.6061%" y="389" width="0.7576%" height="15" fill="rgb(207,40,23)" fg:x="47" fg:w="1"/><text x="35.8561%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="35.6061%" y="373" width="0.7576%" height="15" fill="rgb(223,111,35)" fg:x="47" fg:w="1"/><text x="35.8561%" y="383.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (1 samples, 0.76%)</title><rect x="36.3636%" y="581" width="0.7576%" height="15" fill="rgb(229,147,28)" fg:x="48" fg:w="1"/><text x="36.6136%" y="591.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.76%)</title><rect x="36.3636%" y="565" width="0.7576%" height="15" fill="rgb(211,29,28)" fg:x="48" fg:w="1"/><text x="36.6136%" y="575.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.76%)</title><rect x="36.3636%" y="549" width="0.7576%" height="15" fill="rgb(228,72,33)" fg:x="48" fg:w="1"/><text x="36.6136%" y="559.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.76%)</title><rect x="36.3636%" y="533" width="0.7576%" height="15" fill="rgb(205,214,31)" fg:x="48" fg:w="1"/><text x="36.6136%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="36.3636%" y="517" width="0.7576%" height="15" fill="rgb(224,111,15)" fg:x="48" fg:w="1"/><text x="36.6136%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="36.3636%" y="501" width="0.7576%" height="15" fill="rgb(253,21,26)" fg:x="48" fg:w="1"/><text x="36.6136%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="36.3636%" y="485" width="0.7576%" height="15" fill="rgb(245,139,43)" fg:x="48" fg:w="1"/><text x="36.6136%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 1.52%)</title><rect x="37.1212%" y="565" width="1.5152%" height="15" fill="rgb(252,170,7)" fg:x="49" fg:w="2"/><text x="37.3712%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 1.52%)</title><rect x="37.1212%" y="549" width="1.5152%" height="15" fill="rgb(231,118,14)" fg:x="49" fg:w="2"/><text x="37.3712%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 1.52%)</title><rect x="37.1212%" y="533" width="1.5152%" height="15" fill="rgb(238,83,0)" fg:x="49" fg:w="2"/><text x="37.3712%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 1.52%)</title><rect x="37.1212%" y="517" width="1.5152%" height="15" fill="rgb(221,39,39)" fg:x="49" fg:w="2"/><text x="37.3712%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 1.52%)</title><rect x="37.1212%" y="501" width="1.5152%" height="15" fill="rgb(222,119,46)" fg:x="49" fg:w="2"/><text x="37.3712%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 1.52%)</title><rect x="37.1212%" y="485" width="1.5152%" height="15" fill="rgb(222,165,49)" fg:x="49" fg:w="2"/><text x="37.3712%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="38.6364%" y="437" width="0.7576%" height="15" fill="rgb(219,113,52)" fg:x="51" fg:w="1"/><text x="38.8864%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="38.6364%" y="421" width="0.7576%" height="15" fill="rgb(214,7,15)" fg:x="51" fg:w="1"/><text x="38.8864%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="38.6364%" y="405" width="0.7576%" height="15" fill="rgb(235,32,4)" fg:x="51" fg:w="1"/><text x="38.8864%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.76%)</title><rect x="39.3939%" y="165" width="0.7576%" height="15" fill="rgb(238,90,54)" fg:x="52" fg:w="1"/><text x="39.6439%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.76%)</title><rect x="39.3939%" y="149" width="0.7576%" height="15" fill="rgb(213,208,19)" fg:x="52" fg:w="1"/><text x="39.6439%" y="159.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="39.3939%" y="133" width="0.7576%" height="15" fill="rgb(233,156,4)" fg:x="52" fg:w="1"/><text x="39.6439%" y="143.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="39.3939%" y="117" width="0.7576%" height="15" fill="rgb(207,194,5)" fg:x="52" fg:w="1"/><text x="39.6439%" y="127.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="39.3939%" y="101" width="0.7576%" height="15" fill="rgb(206,111,30)" fg:x="52" fg:w="1"/><text x="39.6439%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 1.52%)</title><rect x="39.3939%" y="245" width="1.5152%" height="15" fill="rgb(243,70,54)" fg:x="52" fg:w="2"/><text x="39.6439%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 1.52%)</title><rect x="39.3939%" y="229" width="1.5152%" height="15" fill="rgb(242,28,8)" fg:x="52" fg:w="2"/><text x="39.6439%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 1.52%)</title><rect x="39.3939%" y="213" width="1.5152%" height="15" fill="rgb(219,106,18)" fg:x="52" fg:w="2"/><text x="39.6439%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 1.52%)</title><rect x="39.3939%" y="197" width="1.5152%" height="15" fill="rgb(244,222,10)" fg:x="52" fg:w="2"/><text x="39.6439%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 1.52%)</title><rect x="39.3939%" y="181" width="1.5152%" height="15" fill="rgb(236,179,52)" fg:x="52" fg:w="2"/><text x="39.6439%" y="191.50"></text></g><g><title>core::cmp::max (1 samples, 0.76%)</title><rect x="40.1515%" y="165" width="0.7576%" height="15" fill="rgb(213,23,39)" fg:x="53" fg:w="1"/><text x="40.4015%" y="175.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.76%)</title><rect x="40.1515%" y="149" width="0.7576%" height="15" fill="rgb(238,48,10)" fg:x="53" fg:w="1"/><text x="40.4015%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.76%)</title><rect x="40.1515%" y="133" width="0.7576%" height="15" fill="rgb(251,196,23)" fg:x="53" fg:w="1"/><text x="40.4015%" y="143.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="40.1515%" y="117" width="0.7576%" height="15" fill="rgb(250,152,24)" fg:x="53" fg:w="1"/><text x="40.4015%" y="127.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="40.1515%" y="101" width="0.7576%" height="15" fill="rgb(209,150,17)" fg:x="53" fg:w="1"/><text x="40.4015%" y="111.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="40.1515%" y="85" width="0.7576%" height="15" fill="rgb(234,202,34)" fg:x="53" fg:w="1"/><text x="40.4015%" y="95.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 2.27%)</title><rect x="39.3939%" y="357" width="2.2727%" height="15" fill="rgb(253,148,53)" fg:x="52" fg:w="3"/><text x="39.6439%" y="367.50">c..</text></g><g><title>core::fmt::write (3 samples, 2.27%)</title><rect x="39.3939%" y="341" width="2.2727%" height="15" fill="rgb(218,129,16)" fg:x="52" fg:w="3"/><text x="39.6439%" y="351.50">c..</text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (3 samples, 2.27%)</title><rect x="39.3939%" y="325" width="2.2727%" height="15" fill="rgb(216,85,19)" fg:x="52" fg:w="3"/><text x="39.6439%" y="335.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 2.27%)</title><rect x="39.3939%" y="309" width="2.2727%" height="15" fill="rgb(235,228,7)" fg:x="52" fg:w="3"/><text x="39.6439%" y="319.50">&lt;..</text></g><g><title>alloc::string::String::push_str (3 samples, 2.27%)</title><rect x="39.3939%" y="293" width="2.2727%" height="15" fill="rgb(245,175,0)" fg:x="52" fg:w="3"/><text x="39.6439%" y="303.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 2.27%)</title><rect x="39.3939%" y="277" width="2.2727%" height="15" fill="rgb(208,168,36)" fg:x="52" fg:w="3"/><text x="39.6439%" y="287.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 2.27%)</title><rect x="39.3939%" y="261" width="2.2727%" height="15" fill="rgb(246,171,24)" fg:x="52" fg:w="3"/><text x="39.6439%" y="271.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.76%)</title><rect x="40.9091%" y="245" width="0.7576%" height="15" fill="rgb(215,142,24)" fg:x="54" fg:w="1"/><text x="41.1591%" y="255.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (1 samples, 0.76%)</title><rect x="40.9091%" y="229" width="0.7576%" height="15" fill="rgb(250,187,7)" fg:x="54" fg:w="1"/><text x="41.1591%" y="239.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.76%)</title><rect x="40.9091%" y="213" width="0.7576%" height="15" fill="rgb(228,66,33)" fg:x="54" fg:w="1"/><text x="41.1591%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.76%)</title><rect x="40.9091%" y="197" width="0.7576%" height="15" fill="rgb(234,215,21)" fg:x="54" fg:w="1"/><text x="41.1591%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.76%)</title><rect x="40.9091%" y="181" width="0.7576%" height="15" fill="rgb(222,191,20)" fg:x="54" fg:w="1"/><text x="41.1591%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="40.9091%" y="165" width="0.7576%" height="15" fill="rgb(245,79,54)" fg:x="54" fg:w="1"/><text x="41.1591%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="40.9091%" y="149" width="0.7576%" height="15" fill="rgb(240,10,37)" fg:x="54" fg:w="1"/><text x="41.1591%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="40.9091%" y="133" width="0.7576%" height="15" fill="rgb(214,192,32)" fg:x="54" fg:w="1"/><text x="41.1591%" y="143.50"></text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::abi_signature (8 samples, 6.06%)</title><rect x="36.3636%" y="597" width="6.0606%" height="15" fill="rgb(209,36,54)" fg:x="48" fg:w="8"/><text x="36.6136%" y="607.50">&lt;ethabi:..</text></g><g><title>ethabi::function::Function::signature (7 samples, 5.30%)</title><rect x="37.1212%" y="581" width="5.3030%" height="15" fill="rgb(220,10,11)" fg:x="49" fg:w="7"/><text x="37.3712%" y="591.50">ethabi..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 3.79%)</title><rect x="38.6364%" y="565" width="3.7879%" height="15" fill="rgb(221,106,17)" fg:x="51" fg:w="5"/><text x="38.8864%" y="575.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 3.79%)</title><rect x="38.6364%" y="549" width="3.7879%" height="15" fill="rgb(251,142,44)" fg:x="51" fg:w="5"/><text x="38.8864%" y="559.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 3.79%)</title><rect x="38.6364%" y="533" width="3.7879%" height="15" fill="rgb(238,13,15)" fg:x="51" fg:w="5"/><text x="38.8864%" y="543.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 3.79%)</title><rect x="38.6364%" y="517" width="3.7879%" height="15" fill="rgb(208,107,27)" fg:x="51" fg:w="5"/><text x="38.8864%" y="527.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 3.79%)</title><rect x="38.6364%" y="501" width="3.7879%" height="15" fill="rgb(205,136,37)" fg:x="51" fg:w="5"/><text x="38.8864%" y="511.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5 samples, 3.79%)</title><rect x="38.6364%" y="485" width="3.7879%" height="15" fill="rgb(250,205,27)" fg:x="51" fg:w="5"/><text x="38.8864%" y="495.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 3.79%)</title><rect x="38.6364%" y="469" width="3.7879%" height="15" fill="rgb(210,80,43)" fg:x="51" fg:w="5"/><text x="38.8864%" y="479.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 3.79%)</title><rect x="38.6364%" y="453" width="3.7879%" height="15" fill="rgb(247,160,36)" fg:x="51" fg:w="5"/><text x="38.8864%" y="463.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 3.03%)</title><rect x="39.3939%" y="437" width="3.0303%" height="15" fill="rgb(234,13,49)" fg:x="52" fg:w="4"/><text x="39.6439%" y="447.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 3.03%)</title><rect x="39.3939%" y="421" width="3.0303%" height="15" fill="rgb(234,122,0)" fg:x="52" fg:w="4"/><text x="39.6439%" y="431.50">cor..</text></g><g><title>ethabi::function::Function::signature::{{closure}} (4 samples, 3.03%)</title><rect x="39.3939%" y="405" width="3.0303%" height="15" fill="rgb(207,146,38)" fg:x="52" fg:w="4"/><text x="39.6439%" y="415.50">eth..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (4 samples, 3.03%)</title><rect x="39.3939%" y="389" width="3.0303%" height="15" fill="rgb(207,177,25)" fg:x="52" fg:w="4"/><text x="39.6439%" y="399.50">&lt;T ..</text></g><g><title>&lt;ethabi::param_type::param_type::ParamType as core::fmt::Display&gt;::fmt (4 samples, 3.03%)</title><rect x="39.3939%" y="373" width="3.0303%" height="15" fill="rgb(211,178,42)" fg:x="52" fg:w="4"/><text x="39.6439%" y="383.50">&lt;et..</text></g><g><title>ethabi::param_type::writer::Writer::write (1 samples, 0.76%)</title><rect x="41.6667%" y="357" width="0.7576%" height="15" fill="rgb(230,69,54)" fg:x="55" fg:w="1"/><text x="41.9167%" y="367.50"></text></g><g><title>ethabi::param_type::writer::Writer::write_for_abi (1 samples, 0.76%)</title><rect x="41.6667%" y="341" width="0.7576%" height="15" fill="rgb(214,135,41)" fg:x="55" fg:w="1"/><text x="41.9167%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="41.6667%" y="325" width="0.7576%" height="15" fill="rgb(237,67,25)" fg:x="55" fg:w="1"/><text x="41.9167%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="41.6667%" y="309" width="0.7576%" height="15" fill="rgb(222,189,50)" fg:x="55" fg:w="1"/><text x="41.9167%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="41.6667%" y="293" width="0.7576%" height="15" fill="rgb(245,148,34)" fg:x="55" fg:w="1"/><text x="41.9167%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (9 samples, 6.82%)</title><rect x="42.4242%" y="469" width="6.8182%" height="15" fill="rgb(222,29,6)" fg:x="56" fg:w="9"/><text x="42.6742%" y="479.50">&lt;pprof::b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (9 samples, 6.82%)</title><rect x="42.4242%" y="453" width="6.8182%" height="15" fill="rgb(221,189,43)" fg:x="56" fg:w="9"/><text x="42.6742%" y="463.50">backtrace..</text></g><g><title>backtrace::backtrace::libunwind::trace (9 samples, 6.82%)</title><rect x="42.4242%" y="437" width="6.8182%" height="15" fill="rgb(207,36,27)" fg:x="56" fg:w="9"/><text x="42.6742%" y="447.50">backtrace..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (13 samples, 9.85%)</title><rect x="42.4242%" y="581" width="9.8485%" height="15" fill="rgb(217,90,24)" fg:x="56" fg:w="13"/><text x="42.6742%" y="591.50">&lt;tiny_keccak::..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (13 samples, 9.85%)</title><rect x="42.4242%" y="565" width="9.8485%" height="15" fill="rgb(224,66,35)" fg:x="56" fg:w="13"/><text x="42.6742%" y="575.50">tiny_keccak::K..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (13 samples, 9.85%)</title><rect x="42.4242%" y="549" width="9.8485%" height="15" fill="rgb(221,13,50)" fg:x="56" fg:w="13"/><text x="42.6742%" y="559.50">tiny_keccak::K..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (13 samples, 9.85%)</title><rect x="42.4242%" y="533" width="9.8485%" height="15" fill="rgb(236,68,49)" fg:x="56" fg:w="13"/><text x="42.6742%" y="543.50">tiny_keccak::K..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (13 samples, 9.85%)</title><rect x="42.4242%" y="517" width="9.8485%" height="15" fill="rgb(229,146,28)" fg:x="56" fg:w="13"/><text x="42.6742%" y="527.50">tiny_keccak::K..</text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (13 samples, 9.85%)</title><rect x="42.4242%" y="501" width="9.8485%" height="15" fill="rgb(225,31,38)" fg:x="56" fg:w="13"/><text x="42.6742%" y="511.50">&lt;tiny_keccak::..</text></g><g><title>tiny_keccak::keccakf::keccakf (13 samples, 9.85%)</title><rect x="42.4242%" y="485" width="9.8485%" height="15" fill="rgb(250,208,3)" fg:x="56" fg:w="13"/><text x="42.6742%" y="495.50">tiny_keccak::k..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 3.03%)</title><rect x="49.2424%" y="469" width="3.0303%" height="15" fill="rgb(246,54,23)" fg:x="65" fg:w="4"/><text x="49.4924%" y="479.50">cor..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 3.03%)</title><rect x="49.2424%" y="453" width="3.0303%" height="15" fill="rgb(243,76,11)" fg:x="65" fg:w="4"/><text x="49.4924%" y="463.50">&lt;pp..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 3.03%)</title><rect x="49.2424%" y="437" width="3.0303%" height="15" fill="rgb(245,21,50)" fg:x="65" fg:w="4"/><text x="49.4924%" y="447.50">bac..</text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 3.03%)</title><rect x="49.2424%" y="421" width="3.0303%" height="15" fill="rgb(228,9,43)" fg:x="65" fg:w="4"/><text x="49.4924%" y="431.50">bac..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (1 samples, 0.76%)</title><rect x="52.2727%" y="581" width="0.7576%" height="15" fill="rgb(208,100,47)" fg:x="69" fg:w="1"/><text x="52.5227%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (1 samples, 0.76%)</title><rect x="52.2727%" y="565" width="0.7576%" height="15" fill="rgb(232,26,8)" fg:x="69" fg:w="1"/><text x="52.5227%" y="575.50"></text></g><g><title>tiny_keccak::Buffer::xorin (1 samples, 0.76%)</title><rect x="52.2727%" y="549" width="0.7576%" height="15" fill="rgb(216,166,38)" fg:x="69" fg:w="1"/><text x="52.5227%" y="559.50"></text></g><g><title>tiny_keccak::Buffer::execute (1 samples, 0.76%)</title><rect x="52.2727%" y="533" width="0.7576%" height="15" fill="rgb(251,202,51)" fg:x="69" fg:w="1"/><text x="52.5227%" y="543.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (1 samples, 0.76%)</title><rect x="52.2727%" y="517" width="0.7576%" height="15" fill="rgb(254,216,34)" fg:x="69" fg:w="1"/><text x="52.5227%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="52.2727%" y="501" width="0.7576%" height="15" fill="rgb(251,32,27)" fg:x="69" fg:w="1"/><text x="52.5227%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="52.2727%" y="485" width="0.7576%" height="15" fill="rgb(208,127,28)" fg:x="69" fg:w="1"/><text x="52.5227%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="52.2727%" y="469" width="0.7576%" height="15" fill="rgb(224,137,22)" fg:x="69" fg:w="1"/><text x="52.5227%" y="479.50"></text></g><g><title>colony_rs::contracts::colony::colony::Colony&lt;M&gt;::new (26 samples, 19.70%)</title><rect x="34.0909%" y="1029" width="19.6970%" height="15" fill="rgb(254,70,32)" fg:x="45" fg:w="26"/><text x="34.3409%" y="1039.50">colony_rs::contracts::colony::c..</text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::new (24 samples, 18.18%)</title><rect x="35.6061%" y="1013" width="18.1818%" height="15" fill="rgb(229,75,37)" fg:x="47" fg:w="24"/><text x="35.8561%" y="1023.50">ethers_contract::contract::C..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 18.18%)</title><rect x="35.6061%" y="997" width="18.1818%" height="15" fill="rgb(252,64,23)" fg:x="47" fg:w="24"/><text x="35.8561%" y="1007.50">&lt;T as core::convert::Into&lt;U&gt;..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from (24 samples, 18.18%)</title><rect x="35.6061%" y="981" width="18.1818%" height="15" fill="rgb(232,162,48)" fg:x="47" fg:w="24"/><text x="35.8561%" y="991.50">&lt;ethers_contract::base::Base..</text></g><g><title>ethers_contract::base::create_mapping (24 samples, 18.18%)</title><rect x="35.6061%" y="965" width="18.1818%" height="15" fill="rgb(246,160,12)" fg:x="47" fg:w="24"/><text x="35.8561%" y="975.50">ethers_contract::base::creat..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 18.18%)</title><rect x="35.6061%" y="949" width="18.1818%" height="15" fill="rgb(247,166,0)" fg:x="47" fg:w="24"/><text x="35.8561%" y="959.50">core::iter::traits::iterator..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (24 samples, 18.18%)</title><rect x="35.6061%" y="933" width="18.1818%" height="15" fill="rgb(249,219,21)" fg:x="47" fg:w="24"/><text x="35.8561%" y="943.50">&lt;std::collections::hash::map..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (24 samples, 18.18%)</title><rect x="35.6061%" y="917" width="18.1818%" height="15" fill="rgb(205,209,3)" fg:x="47" fg:w="24"/><text x="35.8561%" y="927.50">&lt;std::collections::hash::map..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (24 samples, 18.18%)</title><rect x="35.6061%" y="901" width="18.1818%" height="15" fill="rgb(243,44,1)" fg:x="47" fg:w="24"/><text x="35.8561%" y="911.50">&lt;hashbrown::map::HashMap&lt;K,V..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 18.18%)</title><rect x="35.6061%" y="885" width="18.1818%" height="15" fill="rgb(206,159,16)" fg:x="47" fg:w="24"/><text x="35.8561%" y="895.50">core::iter::traits::iterator..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="869" width="18.1818%" height="15" fill="rgb(244,77,30)" fg:x="47" fg:w="24"/><text x="35.8561%" y="879.50">&lt;core::iter::adapters::flatt..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="853" width="18.1818%" height="15" fill="rgb(218,69,12)" fg:x="47" fg:w="24"/><text x="35.8561%" y="863.50">&lt;core::iter::adapters::flatt..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (24 samples, 18.18%)</title><rect x="35.6061%" y="837" width="18.1818%" height="15" fill="rgb(212,87,7)" fg:x="47" fg:w="24"/><text x="35.8561%" y="847.50">core::iter::adapters::flatte..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="821" width="18.1818%" height="15" fill="rgb(245,114,25)" fg:x="47" fg:w="24"/><text x="35.8561%" y="831.50">&lt;core::iter::adapters::fuse:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="805" width="18.1818%" height="15" fill="rgb(210,61,42)" fg:x="47" fg:w="24"/><text x="35.8561%" y="815.50">&lt;core::iter::adapters::map::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="789" width="18.1818%" height="15" fill="rgb(211,52,33)" fg:x="47" fg:w="24"/><text x="35.8561%" y="799.50">core::iter::traits::iterator..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (24 samples, 18.18%)</title><rect x="35.6061%" y="773" width="18.1818%" height="15" fill="rgb(234,58,33)" fg:x="47" fg:w="24"/><text x="35.8561%" y="783.50">core::iter::adapters::map::m..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (24 samples, 18.18%)</title><rect x="35.6061%" y="757" width="18.1818%" height="15" fill="rgb(220,115,36)" fg:x="47" fg:w="24"/><text x="35.8561%" y="767.50">core::iter::adapters::flatte..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (24 samples, 18.18%)</title><rect x="35.6061%" y="741" width="18.1818%" height="15" fill="rgb(243,153,54)" fg:x="47" fg:w="24"/><text x="35.8561%" y="751.50">&lt;core::iter::adapters::flatt..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="725" width="18.1818%" height="15" fill="rgb(251,47,18)" fg:x="47" fg:w="24"/><text x="35.8561%" y="735.50">&lt;core::iter::adapters::map::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="709" width="18.1818%" height="15" fill="rgb(242,102,42)" fg:x="47" fg:w="24"/><text x="35.8561%" y="719.50">&lt;core::iter::adapters::enume..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 18.18%)</title><rect x="35.6061%" y="693" width="18.1818%" height="15" fill="rgb(234,31,38)" fg:x="47" fg:w="24"/><text x="35.8561%" y="703.50">core::iter::traits::iterator..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (24 samples, 18.18%)</title><rect x="35.6061%" y="677" width="18.1818%" height="15" fill="rgb(221,117,51)" fg:x="47" fg:w="24"/><text x="35.8561%" y="687.50">&lt;core::iter::adapters::enume..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (24 samples, 18.18%)</title><rect x="35.6061%" y="661" width="18.1818%" height="15" fill="rgb(212,20,18)" fg:x="47" fg:w="24"/><text x="35.8561%" y="671.50">core::iter::adapters::map::m..</text></g><g><title>ethers_contract::base::create_mapping::{{closure}}::{{closure}} (23 samples, 17.42%)</title><rect x="36.3636%" y="645" width="17.4242%" height="15" fill="rgb(245,133,36)" fg:x="48" fg:w="23"/><text x="36.6136%" y="655.50">ethers_contract::base::crea..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from::{{closure}} (23 samples, 17.42%)</title><rect x="36.3636%" y="629" width="17.4242%" height="15" fill="rgb(212,6,19)" fg:x="48" fg:w="23"/><text x="36.6136%" y="639.50">&lt;ethers_contract::base::Bas..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::selector (23 samples, 17.42%)</title><rect x="36.3636%" y="613" width="17.4242%" height="15" fill="rgb(218,1,36)" fg:x="48" fg:w="23"/><text x="36.6136%" y="623.50">&lt;ethabi::function::Function..</text></g><g><title>ethers_core::utils::hash::id (15 samples, 11.36%)</title><rect x="42.4242%" y="597" width="11.3636%" height="15" fill="rgb(246,84,54)" fg:x="56" fg:w="15"/><text x="42.6742%" y="607.50">ethers_core::util..</text></g><g><title>tiny_keccak::keccak::Keccak::v256 (1 samples, 0.76%)</title><rect x="53.0303%" y="581" width="0.7576%" height="15" fill="rgb(242,110,6)" fg:x="70" fg:w="1"/><text x="53.2803%" y="591.50"></text></g><g><title>tiny_keccak::keccak::Keccak::new (1 samples, 0.76%)</title><rect x="53.0303%" y="565" width="0.7576%" height="15" fill="rgb(214,47,5)" fg:x="70" fg:w="1"/><text x="53.2803%" y="575.50"></text></g><g><title>tiny_keccak::bits_to_rate (1 samples, 0.76%)</title><rect x="53.0303%" y="549" width="0.7576%" height="15" fill="rgb(218,159,25)" fg:x="70" fg:w="1"/><text x="53.2803%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="53.0303%" y="533" width="0.7576%" height="15" fill="rgb(215,211,28)" fg:x="70" fg:w="1"/><text x="53.2803%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="53.0303%" y="517" width="0.7576%" height="15" fill="rgb(238,59,32)" fg:x="70" fg:w="1"/><text x="53.2803%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="53.0303%" y="501" width="0.7576%" height="15" fill="rgb(226,82,3)" fg:x="70" fg:w="1"/><text x="53.2803%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::event::Event&gt;&gt;&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="965" width="0.7576%" height="15" fill="rgb(240,164,32)" fg:x="71" fg:w="1"/><text x="54.0379%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="53.7879%" y="949" width="0.7576%" height="15" fill="rgb(232,46,7)" fg:x="71" fg:w="1"/><text x="54.0379%" y="959.50"></text></g><g><title>core::mem::drop (1 samples, 0.76%)</title><rect x="53.7879%" y="933" width="0.7576%" height="15" fill="rgb(229,129,53)" fg:x="71" fg:w="1"/><text x="54.0379%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::event::Event&gt;&gt;&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="917" width="0.7576%" height="15" fill="rgb(234,188,29)" fg:x="71" fg:w="1"/><text x="54.0379%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="53.7879%" y="901" width="0.7576%" height="15" fill="rgb(246,141,4)" fg:x="71" fg:w="1"/><text x="54.0379%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1 samples, 0.76%)</title><rect x="53.7879%" y="885" width="0.7576%" height="15" fill="rgb(229,23,39)" fg:x="71" fg:w="1"/><text x="54.0379%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1 samples, 0.76%)</title><rect x="53.7879%" y="869" width="0.7576%" height="15" fill="rgb(206,12,3)" fg:x="71" fg:w="1"/><text x="54.0379%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::event::Event&gt;&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="853" width="0.7576%" height="15" fill="rgb(252,226,20)" fg:x="71" fg:w="1"/><text x="54.0379%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="53.7879%" y="837" width="0.7576%" height="15" fill="rgb(216,123,35)" fg:x="71" fg:w="1"/><text x="54.0379%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ethabi::event::Event]&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="821" width="0.7576%" height="15" fill="rgb(212,68,40)" fg:x="71" fg:w="1"/><text x="54.0379%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;ethabi::event::Event&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="805" width="0.7576%" height="15" fill="rgb(254,125,32)" fg:x="71" fg:w="1"/><text x="54.0379%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::event_param::EventParam&gt;&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="789" width="0.7576%" height="15" fill="rgb(253,97,22)" fg:x="71" fg:w="1"/><text x="54.0379%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="53.7879%" y="773" width="0.7576%" height="15" fill="rgb(241,101,14)" fg:x="71" fg:w="1"/><text x="54.0379%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ethabi::event_param::EventParam]&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="757" width="0.7576%" height="15" fill="rgb(238,103,29)" fg:x="71" fg:w="1"/><text x="54.0379%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;ethabi::event_param::EventParam&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="741" width="0.7576%" height="15" fill="rgb(233,195,47)" fg:x="71" fg:w="1"/><text x="54.0379%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;ethabi::param_type::param_type::ParamType&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="725" width="0.7576%" height="15" fill="rgb(246,218,30)" fg:x="71" fg:w="1"/><text x="54.0379%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;ethabi::param_type::param_type::ParamType&gt;&gt; (1 samples, 0.76%)</title><rect x="53.7879%" y="709" width="0.7576%" height="15" fill="rgb(219,145,47)" fg:x="71" fg:w="1"/><text x="54.0379%" y="719.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="53.7879%" y="693" width="0.7576%" height="15" fill="rgb(243,12,26)" fg:x="71" fg:w="1"/><text x="54.0379%" y="703.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="53.7879%" y="677" width="0.7576%" height="15" fill="rgb(214,87,16)" fg:x="71" fg:w="1"/><text x="54.0379%" y="687.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="53.7879%" y="661" width="0.7576%" height="15" fill="rgb(208,99,42)" fg:x="71" fg:w="1"/><text x="54.0379%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.76%)</title><rect x="54.5455%" y="885" width="0.7576%" height="15" fill="rgb(253,99,2)" fg:x="72" fg:w="1"/><text x="54.7955%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1 samples, 0.76%)</title><rect x="54.5455%" y="869" width="0.7576%" height="15" fill="rgb(220,168,23)" fg:x="72" fg:w="1"/><text x="54.7955%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.76%)</title><rect x="54.5455%" y="853" width="0.7576%" height="15" fill="rgb(242,38,24)" fg:x="72" fg:w="1"/><text x="54.7955%" y="863.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.76%)</title><rect x="54.5455%" y="837" width="0.7576%" height="15" fill="rgb(225,182,9)" fg:x="72" fg:w="1"/><text x="54.7955%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (1 samples, 0.76%)</title><rect x="54.5455%" y="821" width="0.7576%" height="15" fill="rgb(243,178,37)" fg:x="72" fg:w="1"/><text x="54.7955%" y="831.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1 samples, 0.76%)</title><rect x="54.5455%" y="805" width="0.7576%" height="15" fill="rgb(232,139,19)" fg:x="72" fg:w="1"/><text x="54.7955%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1 samples, 0.76%)</title><rect x="54.5455%" y="789" width="0.7576%" height="15" fill="rgb(225,201,24)" fg:x="72" fg:w="1"/><text x="54.7955%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1 samples, 0.76%)</title><rect x="54.5455%" y="773" width="0.7576%" height="15" fill="rgb(221,47,46)" fg:x="72" fg:w="1"/><text x="54.7955%" y="783.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="54.5455%" y="757" width="0.7576%" height="15" fill="rgb(249,23,13)" fg:x="72" fg:w="1"/><text x="54.7955%" y="767.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="54.5455%" y="741" width="0.7576%" height="15" fill="rgb(219,9,5)" fg:x="72" fg:w="1"/><text x="54.7955%" y="751.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="54.5455%" y="725" width="0.7576%" height="15" fill="rgb(254,171,16)" fg:x="72" fg:w="1"/><text x="54.7955%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.76%)</title><rect x="55.3030%" y="757" width="0.7576%" height="15" fill="rgb(230,171,20)" fg:x="73" fg:w="1"/><text x="55.5530%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="55.3030%" y="741" width="0.7576%" height="15" fill="rgb(210,71,41)" fg:x="73" fg:w="1"/><text x="55.5530%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.76%)</title><rect x="55.3030%" y="725" width="0.7576%" height="15" fill="rgb(206,173,20)" fg:x="73" fg:w="1"/><text x="55.5530%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.76%)</title><rect x="55.3030%" y="709" width="0.7576%" height="15" fill="rgb(233,88,34)" fg:x="73" fg:w="1"/><text x="55.5530%" y="719.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="55.3030%" y="693" width="0.7576%" height="15" fill="rgb(223,209,46)" fg:x="73" fg:w="1"/><text x="55.5530%" y="703.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="55.3030%" y="677" width="0.7576%" height="15" fill="rgb(250,43,18)" fg:x="73" fg:w="1"/><text x="55.5530%" y="687.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="55.3030%" y="661" width="0.7576%" height="15" fill="rgb(208,13,10)" fg:x="73" fg:w="1"/><text x="55.5530%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="56.0606%" y="693" width="0.7576%" height="15" fill="rgb(212,200,36)" fg:x="74" fg:w="1"/><text x="56.3106%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.76%)</title><rect x="56.0606%" y="677" width="0.7576%" height="15" fill="rgb(225,90,30)" fg:x="74" fg:w="1"/><text x="56.3106%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.76%)</title><rect x="56.0606%" y="661" width="0.7576%" height="15" fill="rgb(236,182,39)" fg:x="74" fg:w="1"/><text x="56.3106%" y="671.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="56.0606%" y="645" width="0.7576%" height="15" fill="rgb(212,144,35)" fg:x="74" fg:w="1"/><text x="56.3106%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="56.0606%" y="629" width="0.7576%" height="15" fill="rgb(228,63,44)" fg:x="74" fg:w="1"/><text x="56.3106%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="56.0606%" y="613" width="0.7576%" height="15" fill="rgb(228,109,6)" fg:x="74" fg:w="1"/><text x="56.3106%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 1.52%)</title><rect x="56.0606%" y="725" width="1.5152%" height="15" fill="rgb(238,117,24)" fg:x="74" fg:w="2"/><text x="56.3106%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 1.52%)</title><rect x="56.0606%" y="709" width="1.5152%" height="15" fill="rgb(242,26,26)" fg:x="74" fg:w="2"/><text x="56.3106%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.76%)</title><rect x="56.8182%" y="693" width="0.7576%" height="15" fill="rgb(221,92,48)" fg:x="75" fg:w="1"/><text x="57.0682%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="56.8182%" y="677" width="0.7576%" height="15" fill="rgb(209,209,32)" fg:x="75" fg:w="1"/><text x="57.0682%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.76%)</title><rect x="56.8182%" y="661" width="0.7576%" height="15" fill="rgb(221,70,22)" fg:x="75" fg:w="1"/><text x="57.0682%" y="671.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="56.8182%" y="645" width="0.7576%" height="15" fill="rgb(248,145,5)" fg:x="75" fg:w="1"/><text x="57.0682%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="56.8182%" y="629" width="0.7576%" height="15" fill="rgb(226,116,26)" fg:x="75" fg:w="1"/><text x="57.0682%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="56.8182%" y="613" width="0.7576%" height="15" fill="rgb(244,5,17)" fg:x="75" fg:w="1"/><text x="57.0682%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;colony_rs::contracts::colony::colony::Colony&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (6 samples, 4.55%)</title><rect x="53.7879%" y="1029" width="4.5455%" height="15" fill="rgb(252,159,33)" fg:x="71" fg:w="6"/><text x="54.0379%" y="1039.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::contract::ContractInstance&lt;alloc::sync::Arc&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;,ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (6 samples, 4.55%)</title><rect x="53.7879%" y="1013" width="4.5455%" height="15" fill="rgb(206,71,0)" fg:x="71" fg:w="6"/><text x="54.0379%" y="1023.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::base::BaseContract&gt; (6 samples, 4.55%)</title><rect x="53.7879%" y="997" width="4.5455%" height="15" fill="rgb(233,118,54)" fg:x="71" fg:w="6"/><text x="54.0379%" y="1007.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::contract::Contract&gt; (6 samples, 4.55%)</title><rect x="53.7879%" y="981" width="4.5455%" height="15" fill="rgb(234,83,48)" fg:x="71" fg:w="6"/><text x="54.0379%" y="991.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (5 samples, 3.79%)</title><rect x="54.5455%" y="965" width="3.7879%" height="15" fill="rgb(228,3,54)" fg:x="72" fg:w="5"/><text x="54.7955%" y="975.50">core..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 3.79%)</title><rect x="54.5455%" y="949" width="3.7879%" height="15" fill="rgb(226,155,13)" fg:x="72" fg:w="5"/><text x="54.7955%" y="959.50">&lt;all..</text></g><g><title>core::mem::drop (5 samples, 3.79%)</title><rect x="54.5455%" y="933" width="3.7879%" height="15" fill="rgb(241,28,37)" fg:x="72" fg:w="5"/><text x="54.7955%" y="943.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (5 samples, 3.79%)</title><rect x="54.5455%" y="917" width="3.7879%" height="15" fill="rgb(233,93,10)" fg:x="72" fg:w="5"/><text x="54.7955%" y="927.50">core..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 3.79%)</title><rect x="54.5455%" y="901" width="3.7879%" height="15" fill="rgb(225,113,19)" fg:x="72" fg:w="5"/><text x="54.7955%" y="911.50">&lt;all..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4 samples, 3.03%)</title><rect x="55.3030%" y="885" width="3.0303%" height="15" fill="rgb(241,2,18)" fg:x="73" fg:w="4"/><text x="55.5530%" y="895.50">all..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4 samples, 3.03%)</title><rect x="55.3030%" y="869" width="3.0303%" height="15" fill="rgb(228,207,21)" fg:x="73" fg:w="4"/><text x="55.5530%" y="879.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt; (4 samples, 3.03%)</title><rect x="55.3030%" y="853" width="3.0303%" height="15" fill="rgb(213,211,35)" fg:x="73" fg:w="4"/><text x="55.5530%" y="863.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 3.03%)</title><rect x="55.3030%" y="837" width="3.0303%" height="15" fill="rgb(209,83,10)" fg:x="73" fg:w="4"/><text x="55.5530%" y="847.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[ethabi::function::Function]&gt; (4 samples, 3.03%)</title><rect x="55.3030%" y="821" width="3.0303%" height="15" fill="rgb(209,164,1)" fg:x="73" fg:w="4"/><text x="55.5530%" y="831.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::function::Function&gt; (4 samples, 3.03%)</title><rect x="55.3030%" y="805" width="3.0303%" height="15" fill="rgb(213,184,43)" fg:x="73" fg:w="4"/><text x="55.5530%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::param::Param&gt;&gt; (4 samples, 3.03%)</title><rect x="55.3030%" y="789" width="3.0303%" height="15" fill="rgb(231,61,34)" fg:x="73" fg:w="4"/><text x="55.5530%" y="799.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 3.03%)</title><rect x="55.3030%" y="773" width="3.0303%" height="15" fill="rgb(235,75,3)" fg:x="73" fg:w="4"/><text x="55.5530%" y="783.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[ethabi::param::Param]&gt; (3 samples, 2.27%)</title><rect x="56.0606%" y="757" width="2.2727%" height="15" fill="rgb(220,106,47)" fg:x="74" fg:w="3"/><text x="56.3106%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::param::Param&gt; (3 samples, 2.27%)</title><rect x="56.0606%" y="741" width="2.2727%" height="15" fill="rgb(210,196,33)" fg:x="74" fg:w="3"/><text x="56.3106%" y="751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.76%)</title><rect x="57.5758%" y="725" width="0.7576%" height="15" fill="rgb(229,154,42)" fg:x="76" fg:w="1"/><text x="57.8258%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.76%)</title><rect x="57.5758%" y="709" width="0.7576%" height="15" fill="rgb(228,114,26)" fg:x="76" fg:w="1"/><text x="57.8258%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.76%)</title><rect x="57.5758%" y="693" width="0.7576%" height="15" fill="rgb(208,144,1)" fg:x="76" fg:w="1"/><text x="57.8258%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="57.5758%" y="677" width="0.7576%" height="15" fill="rgb(239,112,37)" fg:x="76" fg:w="1"/><text x="57.8258%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.76%)</title><rect x="57.5758%" y="661" width="0.7576%" height="15" fill="rgb(210,96,50)" fg:x="76" fg:w="1"/><text x="57.8258%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="57.5758%" y="645" width="0.7576%" height="15" fill="rgb(222,178,2)" fg:x="76" fg:w="1"/><text x="57.8258%" y="655.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.76%)</title><rect x="57.5758%" y="629" width="0.7576%" height="15" fill="rgb(226,74,18)" fg:x="76" fg:w="1"/><text x="57.8258%" y="639.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.76%)</title><rect x="57.5758%" y="613" width="0.7576%" height="15" fill="rgb(225,67,54)" fg:x="76" fg:w="1"/><text x="57.8258%" y="623.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="57.5758%" y="597" width="0.7576%" height="15" fill="rgb(251,92,32)" fg:x="76" fg:w="1"/><text x="57.8258%" y="607.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="57.5758%" y="581" width="0.7576%" height="15" fill="rgb(228,149,22)" fg:x="76" fg:w="1"/><text x="57.8258%" y="591.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="57.5758%" y="565" width="0.7576%" height="15" fill="rgb(243,54,13)" fg:x="76" fg:w="1"/><text x="57.8258%" y="575.50"></text></g><g><title>reqwest::async_impl::request::RequestBuilder::json (1 samples, 0.76%)</title><rect x="58.3333%" y="869" width="0.7576%" height="15" fill="rgb(243,180,28)" fg:x="77" fg:w="1"/><text x="58.5833%" y="879.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (1 samples, 0.76%)</title><rect x="58.3333%" y="853" width="0.7576%" height="15" fill="rgb(208,167,24)" fg:x="77" fg:w="1"/><text x="58.5833%" y="863.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::insert (1 samples, 0.76%)</title><rect x="58.3333%" y="837" width="0.7576%" height="15" fill="rgb(245,73,45)" fg:x="77" fg:w="1"/><text x="58.5833%" y="847.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert2 (1 samples, 0.76%)</title><rect x="58.3333%" y="821" width="0.7576%" height="15" fill="rgb(237,203,48)" fg:x="77" fg:w="1"/><text x="58.5833%" y="831.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.76%)</title><rect x="58.3333%" y="805" width="0.7576%" height="15" fill="rgb(211,197,16)" fg:x="77" fg:w="1"/><text x="58.5833%" y="815.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (1 samples, 0.76%)</title><rect x="58.3333%" y="789" width="0.7576%" height="15" fill="rgb(243,99,51)" fg:x="77" fg:w="1"/><text x="58.5833%" y="799.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.76%)</title><rect x="58.3333%" y="773" width="0.7576%" height="15" fill="rgb(215,123,29)" fg:x="77" fg:w="1"/><text x="58.5833%" y="783.50"></text></g><g><title>&lt;http::header::name::StandardHeader as core::hash::Hash&gt;::hash (1 samples, 0.76%)</title><rect x="58.3333%" y="757" width="0.7576%" height="15" fill="rgb(239,186,37)" fg:x="77" fg:w="1"/><text x="58.5833%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.76%)</title><rect x="58.3333%" y="741" width="0.7576%" height="15" fill="rgb(252,136,39)" fg:x="77" fg:w="1"/><text x="58.5833%" y="751.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.76%)</title><rect x="58.3333%" y="725" width="0.7576%" height="15" fill="rgb(223,213,32)" fg:x="77" fg:w="1"/><text x="58.5833%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.76%)</title><rect x="58.3333%" y="709" width="0.7576%" height="15" fill="rgb(233,115,5)" fg:x="77" fg:w="1"/><text x="58.5833%" y="719.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1 samples, 0.76%)</title><rect x="58.3333%" y="693" width="0.7576%" height="15" fill="rgb(207,226,44)" fg:x="77" fg:w="1"/><text x="58.5833%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="58.3333%" y="677" width="0.7576%" height="15" fill="rgb(208,126,0)" fg:x="77" fg:w="1"/><text x="58.5833%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="58.3333%" y="661" width="0.7576%" height="15" fill="rgb(244,66,21)" fg:x="77" fg:w="1"/><text x="58.5833%" y="671.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="58.3333%" y="645" width="0.7576%" height="15" fill="rgb(222,97,12)" fg:x="77" fg:w="1"/><text x="58.5833%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="58.3333%" y="629" width="0.7576%" height="15" fill="rgb(219,213,19)" fg:x="77" fg:w="1"/><text x="58.5833%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="58.3333%" y="613" width="0.7576%" height="15" fill="rgb(252,169,30)" fg:x="77" fg:w="1"/><text x="58.5833%" y="623.50"></text></g><g><title>colony_rs::get_domain::{{closure}} (35 samples, 26.52%)</title><rect x="33.3333%" y="1045" width="26.5152%" height="15" fill="rgb(206,32,51)" fg:x="44" fg:w="35"/><text x="33.5833%" y="1055.50">colony_rs::get_domain::{{closure}}</text></g><g><title>ethers_contract::call::FunctionCall&lt;B,M,D&gt;::call::{{closure}} (2 samples, 1.52%)</title><rect x="58.3333%" y="1029" width="1.5152%" height="15" fill="rgb(250,172,42)" fg:x="77" fg:w="2"/><text x="58.5833%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="58.3333%" y="1013" width="1.5152%" height="15" fill="rgb(209,34,43)" fg:x="77" fg:w="2"/><text x="58.5833%" y="1023.50"></text></g><g><title>&lt;ethers_providers::rpc::provider::Provider&lt;P&gt; as ethers_providers::middleware::Middleware&gt;::call::{{closure}} (2 samples, 1.52%)</title><rect x="58.3333%" y="997" width="1.5152%" height="15" fill="rgb(223,11,35)" fg:x="77" fg:w="2"/><text x="58.5833%" y="1007.50"></text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}} (2 samples, 1.52%)</title><rect x="58.3333%" y="981" width="1.5152%" height="15" fill="rgb(251,219,26)" fg:x="77" fg:w="2"/><text x="58.5833%" y="991.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="58.3333%" y="965" width="1.5152%" height="15" fill="rgb(231,119,3)" fg:x="77" fg:w="2"/><text x="58.5833%" y="975.50"></text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}}::{{closure}} (2 samples, 1.52%)</title><rect x="58.3333%" y="949" width="1.5152%" height="15" fill="rgb(216,97,11)" fg:x="77" fg:w="2"/><text x="58.5833%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="58.3333%" y="933" width="1.5152%" height="15" fill="rgb(223,59,9)" fg:x="77" fg:w="2"/><text x="58.5833%" y="943.50"></text></g><g><title>&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;T&gt; as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (2 samples, 1.52%)</title><rect x="58.3333%" y="917" width="1.5152%" height="15" fill="rgb(233,93,31)" fg:x="77" fg:w="2"/><text x="58.5833%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="58.3333%" y="901" width="1.5152%" height="15" fill="rgb(239,81,33)" fg:x="77" fg:w="2"/><text x="58.5833%" y="911.50"></text></g><g><title>&lt;ethers_providers::rpc::transports::http::Provider as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (2 samples, 1.52%)</title><rect x="58.3333%" y="885" width="1.5152%" height="15" fill="rgb(213,120,34)" fg:x="77" fg:w="2"/><text x="58.5833%" y="895.50"></text></g><g><title>serde_json::de::from_str (1 samples, 0.76%)</title><rect x="59.0909%" y="869" width="0.7576%" height="15" fill="rgb(243,49,53)" fg:x="78" fg:w="1"/><text x="59.3409%" y="879.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.76%)</title><rect x="59.0909%" y="853" width="0.7576%" height="15" fill="rgb(247,216,33)" fg:x="78" fg:w="1"/><text x="59.3409%" y="863.50"></text></g><g><title>ethers_core::types::bytes::_::&lt;impl serde::de::Deserialize for ethers_core::types::bytes::Bytes&gt;::deserialize (1 samples, 0.76%)</title><rect x="59.0909%" y="837" width="0.7576%" height="15" fill="rgb(226,26,14)" fg:x="78" fg:w="1"/><text x="59.3409%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (1 samples, 0.76%)</title><rect x="59.0909%" y="821" width="0.7576%" height="15" fill="rgb(215,49,53)" fg:x="78" fg:w="1"/><text x="59.3409%" y="831.50"></text></g><g><title>&lt;ethers_core::types::bytes::_::&lt;impl serde::de::Deserialize for ethers_core::types::bytes::Bytes&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (1 samples, 0.76%)</title><rect x="59.0909%" y="805" width="0.7576%" height="15" fill="rgb(245,162,40)" fg:x="78" fg:w="1"/><text x="59.3409%" y="815.50"></text></g><g><title>ethers_core::types::bytes::deserialize_bytes (1 samples, 0.76%)</title><rect x="59.0909%" y="789" width="0.7576%" height="15" fill="rgb(229,68,17)" fg:x="78" fg:w="1"/><text x="59.3409%" y="799.50"></text></g><g><title>hex::decode (1 samples, 0.76%)</title><rect x="59.0909%" y="773" width="0.7576%" height="15" fill="rgb(213,182,10)" fg:x="78" fg:w="1"/><text x="59.3409%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (1 samples, 0.76%)</title><rect x="59.0909%" y="757" width="0.7576%" height="15" fill="rgb(245,125,30)" fg:x="78" fg:w="1"/><text x="59.3409%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.76%)</title><rect x="59.0909%" y="741" width="0.7576%" height="15" fill="rgb(232,202,2)" fg:x="78" fg:w="1"/><text x="59.3409%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="59.0909%" y="725" width="0.7576%" height="15" fill="rgb(237,140,51)" fg:x="78" fg:w="1"/><text x="59.3409%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.76%)</title><rect x="59.0909%" y="709" width="0.7576%" height="15" fill="rgb(236,157,25)" fg:x="78" fg:w="1"/><text x="59.3409%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.76%)</title><rect x="59.0909%" y="693" width="0.7576%" height="15" fill="rgb(219,209,0)" fg:x="78" fg:w="1"/><text x="59.3409%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.76%)</title><rect x="59.0909%" y="677" width="0.7576%" height="15" fill="rgb(240,116,54)" fg:x="78" fg:w="1"/><text x="59.3409%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="59.0909%" y="661" width="0.7576%" height="15" fill="rgb(216,10,36)" fg:x="78" fg:w="1"/><text x="59.3409%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="59.0909%" y="645" width="0.7576%" height="15" fill="rgb(222,72,44)" fg:x="78" fg:w="1"/><text x="59.3409%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.76%)</title><rect x="59.0909%" y="629" width="0.7576%" height="15" fill="rgb(232,159,9)" fg:x="78" fg:w="1"/><text x="59.3409%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.76%)</title><rect x="59.0909%" y="613" width="0.7576%" height="15" fill="rgb(210,39,32)" fg:x="78" fg:w="1"/><text x="59.3409%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.76%)</title><rect x="59.0909%" y="597" width="0.7576%" height="15" fill="rgb(216,194,45)" fg:x="78" fg:w="1"/><text x="59.3409%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="59.0909%" y="581" width="0.7576%" height="15" fill="rgb(218,18,35)" fg:x="78" fg:w="1"/><text x="59.3409%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.76%)</title><rect x="59.0909%" y="565" width="0.7576%" height="15" fill="rgb(207,83,51)" fg:x="78" fg:w="1"/><text x="59.3409%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.76%)</title><rect x="59.0909%" y="549" width="0.7576%" height="15" fill="rgb(225,63,43)" fg:x="78" fg:w="1"/><text x="59.3409%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.76%)</title><rect x="59.0909%" y="533" width="0.7576%" height="15" fill="rgb(207,57,36)" fg:x="78" fg:w="1"/><text x="59.3409%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="59.0909%" y="517" width="0.7576%" height="15" fill="rgb(216,99,33)" fg:x="78" fg:w="1"/><text x="59.3409%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="59.0909%" y="501" width="0.7576%" height="15" fill="rgb(225,42,16)" fg:x="78" fg:w="1"/><text x="59.3409%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="59.0909%" y="485" width="0.7576%" height="15" fill="rgb(220,201,45)" fg:x="78" fg:w="1"/><text x="59.3409%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="59.8485%" y="853" width="0.7576%" height="15" fill="rgb(225,33,4)" fg:x="79" fg:w="1"/><text x="60.0985%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="59.8485%" y="837" width="0.7576%" height="15" fill="rgb(224,33,50)" fg:x="79" fg:w="1"/><text x="60.0985%" y="847.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="59.8485%" y="821" width="0.7576%" height="15" fill="rgb(246,198,51)" fg:x="79" fg:w="1"/><text x="60.0985%" y="831.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="59.8485%" y="805" width="0.7576%" height="15" fill="rgb(205,22,4)" fg:x="79" fg:w="1"/><text x="60.0985%" y="815.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="59.8485%" y="789" width="0.7576%" height="15" fill="rgb(206,3,8)" fg:x="79" fg:w="1"/><text x="60.0985%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 1.52%)</title><rect x="59.8485%" y="949" width="1.5152%" height="15" fill="rgb(251,23,15)" fg:x="79" fg:w="2"/><text x="60.0985%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 1.52%)</title><rect x="59.8485%" y="933" width="1.5152%" height="15" fill="rgb(252,88,28)" fg:x="79" fg:w="2"/><text x="60.0985%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 1.52%)</title><rect x="59.8485%" y="917" width="1.5152%" height="15" fill="rgb(212,127,14)" fg:x="79" fg:w="2"/><text x="60.0985%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 1.52%)</title><rect x="59.8485%" y="901" width="1.5152%" height="15" fill="rgb(247,145,37)" fg:x="79" fg:w="2"/><text x="60.0985%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.52%)</title><rect x="59.8485%" y="885" width="1.5152%" height="15" fill="rgb(209,117,53)" fg:x="79" fg:w="2"/><text x="60.0985%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.52%)</title><rect x="59.8485%" y="869" width="1.5152%" height="15" fill="rgb(212,90,42)" fg:x="79" fg:w="2"/><text x="60.0985%" y="879.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="60.6061%" y="853" width="0.7576%" height="15" fill="rgb(218,164,37)" fg:x="80" fg:w="1"/><text x="60.8561%" y="863.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="60.6061%" y="837" width="0.7576%" height="15" fill="rgb(246,65,34)" fg:x="80" fg:w="1"/><text x="60.8561%" y="847.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="60.6061%" y="821" width="0.7576%" height="15" fill="rgb(231,100,33)" fg:x="80" fg:w="1"/><text x="60.8561%" y="831.50"></text></g><g><title>&lt;ethabi::contract::Contract as core::clone::Clone&gt;::clone (3 samples, 2.27%)</title><rect x="59.8485%" y="1013" width="2.2727%" height="15" fill="rgb(228,126,14)" fg:x="79" fg:w="3"/><text x="60.0985%" y="1023.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3 samples, 2.27%)</title><rect x="59.8485%" y="997" width="2.2727%" height="15" fill="rgb(215,173,21)" fg:x="79" fg:w="3"/><text x="60.0985%" y="1007.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 2.27%)</title><rect x="59.8485%" y="981" width="2.2727%" height="15" fill="rgb(210,6,40)" fg:x="79" fg:w="3"/><text x="60.0985%" y="991.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 2.27%)</title><rect x="59.8485%" y="965" width="2.2727%" height="15" fill="rgb(212,48,18)" fg:x="79" fg:w="3"/><text x="60.0985%" y="975.50">&lt;..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1 samples, 0.76%)</title><rect x="61.3636%" y="949" width="0.7576%" height="15" fill="rgb(230,214,11)" fg:x="81" fg:w="1"/><text x="61.6136%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1 samples, 0.76%)</title><rect x="61.3636%" y="933" width="0.7576%" height="15" fill="rgb(254,105,39)" fg:x="81" fg:w="1"/><text x="61.6136%" y="943.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.76%)</title><rect x="61.3636%" y="917" width="0.7576%" height="15" fill="rgb(245,158,5)" fg:x="81" fg:w="1"/><text x="61.6136%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (1 samples, 0.76%)</title><rect x="61.3636%" y="901" width="0.7576%" height="15" fill="rgb(249,208,11)" fg:x="81" fg:w="1"/><text x="61.6136%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (1 samples, 0.76%)</title><rect x="61.3636%" y="885" width="0.7576%" height="15" fill="rgb(210,39,28)" fg:x="81" fg:w="1"/><text x="61.6136%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (1 samples, 0.76%)</title><rect x="61.3636%" y="869" width="0.7576%" height="15" fill="rgb(211,56,53)" fg:x="81" fg:w="1"/><text x="61.6136%" y="879.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="61.3636%" y="853" width="0.7576%" height="15" fill="rgb(226,201,30)" fg:x="81" fg:w="1"/><text x="61.6136%" y="863.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="61.3636%" y="837" width="0.7576%" height="15" fill="rgb(239,101,34)" fg:x="81" fg:w="1"/><text x="61.6136%" y="847.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="61.3636%" y="821" width="0.7576%" height="15" fill="rgb(226,209,5)" fg:x="81" fg:w="1"/><text x="61.6136%" y="831.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.76%)</title><rect x="62.1212%" y="629" width="0.7576%" height="15" fill="rgb(250,105,47)" fg:x="82" fg:w="1"/><text x="62.3712%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="62.1212%" y="613" width="0.7576%" height="15" fill="rgb(230,72,3)" fg:x="82" fg:w="1"/><text x="62.3712%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.76%)</title><rect x="62.1212%" y="597" width="0.7576%" height="15" fill="rgb(232,218,39)" fg:x="82" fg:w="1"/><text x="62.3712%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.76%)</title><rect x="62.1212%" y="581" width="0.7576%" height="15" fill="rgb(248,166,6)" fg:x="82" fg:w="1"/><text x="62.3712%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.76%)</title><rect x="62.1212%" y="565" width="0.7576%" height="15" fill="rgb(247,89,20)" fg:x="82" fg:w="1"/><text x="62.3712%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.76%)</title><rect x="62.1212%" y="549" width="0.7576%" height="15" fill="rgb(248,130,54)" fg:x="82" fg:w="1"/><text x="62.3712%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.76%)</title><rect x="62.1212%" y="533" width="0.7576%" height="15" fill="rgb(234,196,4)" fg:x="82" fg:w="1"/><text x="62.3712%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.76%)</title><rect x="62.1212%" y="517" width="0.7576%" height="15" fill="rgb(250,143,31)" fg:x="82" fg:w="1"/><text x="62.3712%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.76%)</title><rect x="62.1212%" y="501" width="0.7576%" height="15" fill="rgb(211,110,34)" fg:x="82" fg:w="1"/><text x="62.3712%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.76%)</title><rect x="62.1212%" y="485" width="0.7576%" height="15" fill="rgb(215,124,48)" fg:x="82" fg:w="1"/><text x="62.3712%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.76%)</title><rect x="62.1212%" y="469" width="0.7576%" height="15" fill="rgb(216,46,13)" fg:x="82" fg:w="1"/><text x="62.3712%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.76%)</title><rect x="62.1212%" y="453" width="0.7576%" height="15" fill="rgb(205,184,25)" fg:x="82" fg:w="1"/><text x="62.3712%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.76%)</title><rect x="62.1212%" y="437" width="0.7576%" height="15" fill="rgb(228,1,10)" fg:x="82" fg:w="1"/><text x="62.3712%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.76%)</title><rect x="62.1212%" y="421" width="0.7576%" height="15" fill="rgb(213,116,27)" fg:x="82" fg:w="1"/><text x="62.3712%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="62.1212%" y="405" width="0.7576%" height="15" fill="rgb(241,95,50)" fg:x="82" fg:w="1"/><text x="62.3712%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="62.1212%" y="389" width="0.7576%" height="15" fill="rgb(238,48,32)" fg:x="82" fg:w="1"/><text x="62.3712%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="62.1212%" y="373" width="0.7576%" height="15" fill="rgb(235,113,49)" fg:x="82" fg:w="1"/><text x="62.3712%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.76%)</title><rect x="62.8788%" y="517" width="0.7576%" height="15" fill="rgb(205,127,43)" fg:x="83" fg:w="1"/><text x="63.1288%" y="527.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.76%)</title><rect x="62.8788%" y="501" width="0.7576%" height="15" fill="rgb(250,162,2)" fg:x="83" fg:w="1"/><text x="63.1288%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.76%)</title><rect x="62.8788%" y="485" width="0.7576%" height="15" fill="rgb(220,13,41)" fg:x="83" fg:w="1"/><text x="63.1288%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.76%)</title><rect x="62.8788%" y="469" width="0.7576%" height="15" fill="rgb(249,221,25)" fg:x="83" fg:w="1"/><text x="63.1288%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.76%)</title><rect x="62.8788%" y="453" width="0.7576%" height="15" fill="rgb(215,208,19)" fg:x="83" fg:w="1"/><text x="63.1288%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="62.8788%" y="437" width="0.7576%" height="15" fill="rgb(236,175,2)" fg:x="83" fg:w="1"/><text x="63.1288%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="62.8788%" y="421" width="0.7576%" height="15" fill="rgb(241,52,2)" fg:x="83" fg:w="1"/><text x="63.1288%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="62.8788%" y="405" width="0.7576%" height="15" fill="rgb(248,140,14)" fg:x="83" fg:w="1"/><text x="63.1288%" y="415.50"></text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::abi_signature (2 samples, 1.52%)</title><rect x="62.8788%" y="597" width="1.5152%" height="15" fill="rgb(253,22,42)" fg:x="83" fg:w="2"/><text x="63.1288%" y="607.50"></text></g><g><title>ethabi::function::Function::signature (2 samples, 1.52%)</title><rect x="62.8788%" y="581" width="1.5152%" height="15" fill="rgb(234,61,47)" fg:x="83" fg:w="2"/><text x="63.1288%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (2 samples, 1.52%)</title><rect x="62.8788%" y="565" width="1.5152%" height="15" fill="rgb(208,226,15)" fg:x="83" fg:w="2"/><text x="63.1288%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (2 samples, 1.52%)</title><rect x="62.8788%" y="549" width="1.5152%" height="15" fill="rgb(217,221,4)" fg:x="83" fg:w="2"/><text x="63.1288%" y="559.50"></text></g><g><title>alloc::str::join_generic_copy (2 samples, 1.52%)</title><rect x="62.8788%" y="533" width="1.5152%" height="15" fill="rgb(212,174,34)" fg:x="83" fg:w="2"/><text x="63.1288%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.76%)</title><rect x="63.6364%" y="517" width="0.7576%" height="15" fill="rgb(253,83,4)" fg:x="84" fg:w="1"/><text x="63.8864%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.76%)</title><rect x="63.6364%" y="501" width="0.7576%" height="15" fill="rgb(250,195,49)" fg:x="84" fg:w="1"/><text x="63.8864%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="63.6364%" y="485" width="0.7576%" height="15" fill="rgb(241,192,25)" fg:x="84" fg:w="1"/><text x="63.8864%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="63.6364%" y="469" width="0.7576%" height="15" fill="rgb(208,124,10)" fg:x="84" fg:w="1"/><text x="63.8864%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="63.6364%" y="453" width="0.7576%" height="15" fill="rgb(222,33,0)" fg:x="84" fg:w="1"/><text x="63.8864%" y="463.50"></text></g><g><title>colony_rs::contracts::colony_network::colony_network::ColonyNetwork&lt;M&gt;::new (13 samples, 9.85%)</title><rect x="59.8485%" y="1029" width="9.8485%" height="15" fill="rgb(234,209,28)" fg:x="79" fg:w="13"/><text x="60.0985%" y="1039.50">colony_rs::con..</text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::new (10 samples, 7.58%)</title><rect x="62.1212%" y="1013" width="7.5758%" height="15" fill="rgb(224,11,23)" fg:x="82" fg:w="10"/><text x="62.3712%" y="1023.50">ethers_con..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 7.58%)</title><rect x="62.1212%" y="997" width="7.5758%" height="15" fill="rgb(232,99,1)" fg:x="82" fg:w="10"/><text x="62.3712%" y="1007.50">&lt;T as core..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from (10 samples, 7.58%)</title><rect x="62.1212%" y="981" width="7.5758%" height="15" fill="rgb(237,95,45)" fg:x="82" fg:w="10"/><text x="62.3712%" y="991.50">&lt;ethers_co..</text></g><g><title>ethers_contract::base::create_mapping (10 samples, 7.58%)</title><rect x="62.1212%" y="965" width="7.5758%" height="15" fill="rgb(208,109,11)" fg:x="82" fg:w="10"/><text x="62.3712%" y="975.50">ethers_con..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 7.58%)</title><rect x="62.1212%" y="949" width="7.5758%" height="15" fill="rgb(216,190,48)" fg:x="82" fg:w="10"/><text x="62.3712%" y="959.50">core::iter..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 7.58%)</title><rect x="62.1212%" y="933" width="7.5758%" height="15" fill="rgb(251,171,36)" fg:x="82" fg:w="10"/><text x="62.3712%" y="943.50">&lt;std::coll..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 7.58%)</title><rect x="62.1212%" y="917" width="7.5758%" height="15" fill="rgb(230,62,22)" fg:x="82" fg:w="10"/><text x="62.3712%" y="927.50">&lt;std::coll..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 7.58%)</title><rect x="62.1212%" y="901" width="7.5758%" height="15" fill="rgb(225,114,35)" fg:x="82" fg:w="10"/><text x="62.3712%" y="911.50">&lt;hashbrown..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 7.58%)</title><rect x="62.1212%" y="885" width="7.5758%" height="15" fill="rgb(215,118,42)" fg:x="82" fg:w="10"/><text x="62.3712%" y="895.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="869" width="7.5758%" height="15" fill="rgb(243,119,21)" fg:x="82" fg:w="10"/><text x="62.3712%" y="879.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="853" width="7.5758%" height="15" fill="rgb(252,177,53)" fg:x="82" fg:w="10"/><text x="62.3712%" y="863.50">&lt;core::ite..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (10 samples, 7.58%)</title><rect x="62.1212%" y="837" width="7.5758%" height="15" fill="rgb(237,209,29)" fg:x="82" fg:w="10"/><text x="62.3712%" y="847.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="821" width="7.5758%" height="15" fill="rgb(212,65,23)" fg:x="82" fg:w="10"/><text x="62.3712%" y="831.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="805" width="7.5758%" height="15" fill="rgb(230,222,46)" fg:x="82" fg:w="10"/><text x="62.3712%" y="815.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="789" width="7.5758%" height="15" fill="rgb(215,135,32)" fg:x="82" fg:w="10"/><text x="62.3712%" y="799.50">core::iter..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 7.58%)</title><rect x="62.1212%" y="773" width="7.5758%" height="15" fill="rgb(246,101,22)" fg:x="82" fg:w="10"/><text x="62.3712%" y="783.50">core::iter..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (10 samples, 7.58%)</title><rect x="62.1212%" y="757" width="7.5758%" height="15" fill="rgb(206,107,13)" fg:x="82" fg:w="10"/><text x="62.3712%" y="767.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (10 samples, 7.58%)</title><rect x="62.1212%" y="741" width="7.5758%" height="15" fill="rgb(250,100,44)" fg:x="82" fg:w="10"/><text x="62.3712%" y="751.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="725" width="7.5758%" height="15" fill="rgb(231,147,38)" fg:x="82" fg:w="10"/><text x="62.3712%" y="735.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="709" width="7.5758%" height="15" fill="rgb(229,8,40)" fg:x="82" fg:w="10"/><text x="62.3712%" y="719.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 7.58%)</title><rect x="62.1212%" y="693" width="7.5758%" height="15" fill="rgb(221,135,30)" fg:x="82" fg:w="10"/><text x="62.3712%" y="703.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (10 samples, 7.58%)</title><rect x="62.1212%" y="677" width="7.5758%" height="15" fill="rgb(249,193,18)" fg:x="82" fg:w="10"/><text x="62.3712%" y="687.50">&lt;core::ite..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 7.58%)</title><rect x="62.1212%" y="661" width="7.5758%" height="15" fill="rgb(209,133,39)" fg:x="82" fg:w="10"/><text x="62.3712%" y="671.50">core::iter..</text></g><g><title>ethers_contract::base::create_mapping::{{closure}}::{{closure}} (10 samples, 7.58%)</title><rect x="62.1212%" y="645" width="7.5758%" height="15" fill="rgb(232,100,14)" fg:x="82" fg:w="10"/><text x="62.3712%" y="655.50">ethers_con..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from::{{closure}} (9 samples, 6.82%)</title><rect x="62.8788%" y="629" width="6.8182%" height="15" fill="rgb(224,185,1)" fg:x="83" fg:w="9"/><text x="63.1288%" y="639.50">&lt;ethers_c..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::selector (9 samples, 6.82%)</title><rect x="62.8788%" y="613" width="6.8182%" height="15" fill="rgb(223,139,8)" fg:x="83" fg:w="9"/><text x="63.1288%" y="623.50">&lt;ethabi::..</text></g><g><title>ethers_core::utils::hash::id (7 samples, 5.30%)</title><rect x="64.3939%" y="597" width="5.3030%" height="15" fill="rgb(232,213,38)" fg:x="85" fg:w="7"/><text x="64.6439%" y="607.50">ethers..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (7 samples, 5.30%)</title><rect x="64.3939%" y="581" width="5.3030%" height="15" fill="rgb(207,94,22)" fg:x="85" fg:w="7"/><text x="64.6439%" y="591.50">&lt;tiny_..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (7 samples, 5.30%)</title><rect x="64.3939%" y="565" width="5.3030%" height="15" fill="rgb(219,183,54)" fg:x="85" fg:w="7"/><text x="64.6439%" y="575.50">tiny_k..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (7 samples, 5.30%)</title><rect x="64.3939%" y="549" width="5.3030%" height="15" fill="rgb(216,185,54)" fg:x="85" fg:w="7"/><text x="64.6439%" y="559.50">tiny_k..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (7 samples, 5.30%)</title><rect x="64.3939%" y="533" width="5.3030%" height="15" fill="rgb(254,217,39)" fg:x="85" fg:w="7"/><text x="64.6439%" y="543.50">tiny_k..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 5.30%)</title><rect x="64.3939%" y="517" width="5.3030%" height="15" fill="rgb(240,178,23)" fg:x="85" fg:w="7"/><text x="64.6439%" y="527.50">tiny_k..</text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 5.30%)</title><rect x="64.3939%" y="501" width="5.3030%" height="15" fill="rgb(218,11,47)" fg:x="85" fg:w="7"/><text x="64.6439%" y="511.50">&lt;tiny_..</text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 5.30%)</title><rect x="64.3939%" y="485" width="5.3030%" height="15" fill="rgb(218,51,51)" fg:x="85" fg:w="7"/><text x="64.6439%" y="495.50">tiny_k..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (7 samples, 5.30%)</title><rect x="64.3939%" y="469" width="5.3030%" height="15" fill="rgb(238,126,27)" fg:x="85" fg:w="7"/><text x="64.6439%" y="479.50">&lt;pprof..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (7 samples, 5.30%)</title><rect x="64.3939%" y="453" width="5.3030%" height="15" fill="rgb(249,202,22)" fg:x="85" fg:w="7"/><text x="64.6439%" y="463.50">backtr..</text></g><g><title>backtrace::backtrace::libunwind::trace (7 samples, 5.30%)</title><rect x="64.3939%" y="437" width="5.3030%" height="15" fill="rgb(254,195,49)" fg:x="85" fg:w="7"/><text x="64.6439%" y="447.50">backtr..</text></g><g><title>ethers_core::utils::hash::serialize (1 samples, 0.76%)</title><rect x="69.6970%" y="981" width="0.7576%" height="15" fill="rgb(208,123,14)" fg:x="92" fg:w="1"/><text x="69.9470%" y="991.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.76%)</title><rect x="69.6970%" y="965" width="0.7576%" height="15" fill="rgb(224,200,8)" fg:x="92" fg:w="1"/><text x="69.9470%" y="975.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.76%)</title><rect x="69.6970%" y="949" width="0.7576%" height="15" fill="rgb(217,61,36)" fg:x="92" fg:w="1"/><text x="69.9470%" y="959.50"></text></g><g><title>ethers_core::types::transaction::eip2718::_::&lt;impl serde::ser::Serialize for ethers_core::types::transaction::eip2718::TypedTransaction&gt;::serialize (1 samples, 0.76%)</title><rect x="69.6970%" y="933" width="0.7576%" height="15" fill="rgb(206,35,45)" fg:x="92" fg:w="1"/><text x="69.9470%" y="943.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (1 samples, 0.76%)</title><rect x="69.6970%" y="917" width="0.7576%" height="15" fill="rgb(217,65,33)" fg:x="92" fg:w="1"/><text x="69.9470%" y="927.50"></text></g><g><title>ethers_core::types::transaction::eip1559::_::&lt;impl serde::ser::Serialize for ethers_core::types::transaction::eip1559::Eip1559TransactionRequest&gt;::serialize (1 samples, 0.76%)</title><rect x="69.6970%" y="901" width="0.7576%" height="15" fill="rgb(222,158,48)" fg:x="92" fg:w="1"/><text x="69.9470%" y="911.50"></text></g><g><title>&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.76%)</title><rect x="69.6970%" y="885" width="0.7576%" height="15" fill="rgb(254,2,54)" fg:x="92" fg:w="1"/><text x="69.9470%" y="895.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.76%)</title><rect x="69.6970%" y="869" width="0.7576%" height="15" fill="rgb(250,143,38)" fg:x="92" fg:w="1"/><text x="69.9470%" y="879.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.76%)</title><rect x="69.6970%" y="853" width="0.7576%" height="15" fill="rgb(248,25,0)" fg:x="92" fg:w="1"/><text x="69.9470%" y="863.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.76%)</title><rect x="69.6970%" y="837" width="0.7576%" height="15" fill="rgb(206,152,27)" fg:x="92" fg:w="1"/><text x="69.9470%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.76%)</title><rect x="69.6970%" y="821" width="0.7576%" height="15" fill="rgb(240,77,30)" fg:x="92" fg:w="1"/><text x="69.9470%" y="831.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="69.6970%" y="805" width="0.7576%" height="15" fill="rgb(231,5,3)" fg:x="92" fg:w="1"/><text x="69.9470%" y="815.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="69.6970%" y="789" width="0.7576%" height="15" fill="rgb(207,226,32)" fg:x="92" fg:w="1"/><text x="69.9470%" y="799.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="69.6970%" y="773" width="0.7576%" height="15" fill="rgb(222,207,47)" fg:x="92" fg:w="1"/><text x="69.9470%" y="783.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="70.4545%" y="869" width="0.7576%" height="15" fill="rgb(229,115,45)" fg:x="93" fg:w="1"/><text x="70.7045%" y="879.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="70.4545%" y="853" width="0.7576%" height="15" fill="rgb(224,191,6)" fg:x="93" fg:w="1"/><text x="70.7045%" y="863.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="70.4545%" y="837" width="0.7576%" height="15" fill="rgb(230,227,24)" fg:x="93" fg:w="1"/><text x="70.7045%" y="847.50"></text></g><g><title>&lt;&amp;str as trust_dns_proto::rr::domain::name::IntoName&gt;::into_name (1 samples, 0.76%)</title><rect x="71.2121%" y="245" width="0.7576%" height="15" fill="rgb(228,80,19)" fg:x="94" fg:w="1"/><text x="71.4621%" y="255.50"></text></g><g><title>trust_dns_proto::rr::domain::name::Name::from_utf8 (1 samples, 0.76%)</title><rect x="71.2121%" y="229" width="0.7576%" height="15" fill="rgb(247,229,0)" fg:x="94" fg:w="1"/><text x="71.4621%" y="239.50"></text></g><g><title>trust_dns_proto::rr::domain::name::Name::from_encoded_str (1 samples, 0.76%)</title><rect x="71.2121%" y="213" width="0.7576%" height="15" fill="rgb(237,194,15)" fg:x="94" fg:w="1"/><text x="71.4621%" y="223.50"></text></g><g><title>trust_dns_proto::rr::domain::name::Name::new (1 samples, 0.76%)</title><rect x="71.2121%" y="197" width="0.7576%" height="15" fill="rgb(219,203,20)" fg:x="94" fg:w="1"/><text x="71.4621%" y="207.50"></text></g><g><title>&lt;trust_dns_proto::rr::domain::name::Name as core::default::Default&gt;::default (1 samples, 0.76%)</title><rect x="71.2121%" y="181" width="0.7576%" height="15" fill="rgb(234,128,8)" fg:x="94" fg:w="1"/><text x="71.4621%" y="191.50"></text></g><g><title>&lt;tinyvec::tinyvec::TinyVec&lt;A&gt; as core::default::Default&gt;::default (1 samples, 0.76%)</title><rect x="71.2121%" y="165" width="0.7576%" height="15" fill="rgb(248,202,8)" fg:x="94" fg:w="1"/><text x="71.4621%" y="175.50"></text></g><g><title>&lt;tinyvec::arrayvec::ArrayVec&lt;A&gt; as core::default::Default&gt;::default (1 samples, 0.76%)</title><rect x="71.2121%" y="149" width="0.7576%" height="15" fill="rgb(206,104,37)" fg:x="94" fg:w="1"/><text x="71.4621%" y="159.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="71.2121%" y="133" width="0.7576%" height="15" fill="rgb(223,8,27)" fg:x="94" fg:w="1"/><text x="71.4621%" y="143.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="71.2121%" y="117" width="0.7576%" height="15" fill="rgb(216,217,28)" fg:x="94" fg:w="1"/><text x="71.4621%" y="127.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="71.2121%" y="101" width="0.7576%" height="15" fill="rgb(249,199,1)" fg:x="94" fg:w="1"/><text x="71.4621%" y="111.50"></text></g><g><title>&lt;trust_dns_resolver::lookup_ip::LookupIpFuture&lt;C,E&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="71.9697%" y="245" width="0.7576%" height="15" fill="rgb(240,85,17)" fg:x="95" fg:w="1"/><text x="72.2197%" y="255.50"></text></g><g><title>trust_dns_resolver::lookup_ip::strategic_lookup::{{closure}} (1 samples, 0.76%)</title><rect x="71.9697%" y="229" width="0.7576%" height="15" fill="rgb(206,108,45)" fg:x="95" fg:w="1"/><text x="72.2197%" y="239.50"></text></g><g><title>trust_dns_resolver::lookup_ip::ipv4_then_ipv6::{{closure}} (1 samples, 0.76%)</title><rect x="71.9697%" y="213" width="0.7576%" height="15" fill="rgb(245,210,41)" fg:x="95" fg:w="1"/><text x="72.2197%" y="223.50"></text></g><g><title>trust_dns_resolver::lookup_ip::rt_then_swap::{{closure}} (1 samples, 0.76%)</title><rect x="71.9697%" y="197" width="0.7576%" height="15" fill="rgb(206,13,37)" fg:x="95" fg:w="1"/><text x="72.2197%" y="207.50"></text></g><g><title>trust_dns_resolver::lookup_ip::hosts_lookup::{{closure}} (1 samples, 0.76%)</title><rect x="71.9697%" y="181" width="0.7576%" height="15" fill="rgb(250,61,18)" fg:x="95" fg:w="1"/><text x="72.2197%" y="191.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="71.9697%" y="165" width="0.7576%" height="15" fill="rgb(235,172,48)" fg:x="95" fg:w="1"/><text x="72.2197%" y="175.50"></text></g><g><title>trust_dns_resolver::caching_client::CachingClient&lt;C,E&gt;::inner_lookup::{{closure}} (1 samples, 0.76%)</title><rect x="71.9697%" y="149" width="0.7576%" height="15" fill="rgb(249,201,17)" fg:x="95" fg:w="1"/><text x="72.2197%" y="159.50"></text></g><g><title>trust_dns_resolver::caching_client::CachingClient&lt;C,E&gt;::lookup_from_cache (1 samples, 0.76%)</title><rect x="71.9697%" y="133" width="0.7576%" height="15" fill="rgb(219,208,6)" fg:x="95" fg:w="1"/><text x="72.2197%" y="143.50"></text></g><g><title>trust_dns_resolver::dns_lru::DnsLru::get (1 samples, 0.76%)</title><rect x="71.9697%" y="117" width="0.7576%" height="15" fill="rgb(248,31,23)" fg:x="95" fg:w="1"/><text x="72.2197%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.76%)</title><rect x="71.9697%" y="101" width="0.7576%" height="15" fill="rgb(245,15,42)" fg:x="95" fg:w="1"/><text x="72.2197%" y="111.50"></text></g><g><title>trust_dns_resolver::dns_lru::DnsLru::get::{{closure}} (1 samples, 0.76%)</title><rect x="71.9697%" y="85" width="0.7576%" height="15" fill="rgb(222,217,39)" fg:x="95" fg:w="1"/><text x="72.2197%" y="95.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="71.9697%" y="69" width="0.7576%" height="15" fill="rgb(210,219,27)" fg:x="95" fg:w="1"/><text x="72.2197%" y="79.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="71.9697%" y="53" width="0.7576%" height="15" fill="rgb(252,166,36)" fg:x="95" fg:w="1"/><text x="72.2197%" y="63.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="71.9697%" y="37" width="0.7576%" height="15" fill="rgb(245,132,34)" fg:x="95" fg:w="1"/><text x="72.2197%" y="47.50"></text></g><g><title>&lt;hyper::client::connect::http::HttpConnecting&lt;R&gt; as core::future::future::Future&gt;::poll (3 samples, 2.27%)</title><rect x="71.2121%" y="373" width="2.2727%" height="15" fill="rgb(236,54,3)" fg:x="94" fg:w="3"/><text x="71.4621%" y="383.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 2.27%)</title><rect x="71.2121%" y="357" width="2.2727%" height="15" fill="rgb(241,173,43)" fg:x="94" fg:w="3"/><text x="71.4621%" y="367.50">&lt;..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (3 samples, 2.27%)</title><rect x="71.2121%" y="341" width="2.2727%" height="15" fill="rgb(215,190,9)" fg:x="94" fg:w="3"/><text x="71.4621%" y="351.50">&lt;..</text></g><g><title>hyper::client::connect::http::HttpConnector&lt;R&gt;::call_async::{{closure}} (3 samples, 2.27%)</title><rect x="71.2121%" y="325" width="2.2727%" height="15" fill="rgb(242,101,16)" fg:x="94" fg:w="3"/><text x="71.4621%" y="335.50">h..</text></g><g><title>hyper::client::connect::dns::resolve::{{closure}} (3 samples, 2.27%)</title><rect x="71.2121%" y="309" width="2.2727%" height="15" fill="rgb(223,190,21)" fg:x="94" fg:w="3"/><text x="71.4621%" y="319.50">h..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 2.27%)</title><rect x="71.2121%" y="293" width="2.2727%" height="15" fill="rgb(215,228,25)" fg:x="94" fg:w="3"/><text x="71.4621%" y="303.50">&lt;..</text></g><g><title>&lt;reqwest::dns::trust_dns::TrustDnsResolver as reqwest::dns::resolve::Resolve&gt;::resolve::{{closure}} (3 samples, 2.27%)</title><rect x="71.2121%" y="277" width="2.2727%" height="15" fill="rgb(225,36,22)" fg:x="94" fg:w="3"/><text x="71.4621%" y="287.50">&lt;..</text></g><g><title>trust_dns_resolver::async_resolver::AsyncResolver&lt;C,P&gt;::lookup_ip::{{closure}} (3 samples, 2.27%)</title><rect x="71.2121%" y="261" width="2.2727%" height="15" fill="rgb(251,106,46)" fg:x="94" fg:w="3"/><text x="71.4621%" y="271.50">t..</text></g><g><title>trust_dns_resolver::lookup_ip::LookupIpFuture&lt;C,E&gt;::lookup (1 samples, 0.76%)</title><rect x="72.7273%" y="245" width="0.7576%" height="15" fill="rgb(208,90,1)" fg:x="96" fg:w="1"/><text x="72.9773%" y="255.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.76%)</title><rect x="72.7273%" y="229" width="0.7576%" height="15" fill="rgb(243,10,4)" fg:x="96" fg:w="1"/><text x="72.9773%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.76%)</title><rect x="72.7273%" y="213" width="0.7576%" height="15" fill="rgb(212,137,27)" fg:x="96" fg:w="1"/><text x="72.9773%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="72.7273%" y="197" width="0.7576%" height="15" fill="rgb(231,220,49)" fg:x="96" fg:w="1"/><text x="72.9773%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="72.7273%" y="181" width="0.7576%" height="15" fill="rgb(237,96,20)" fg:x="96" fg:w="1"/><text x="72.9773%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="72.7273%" y="165" width="0.7576%" height="15" fill="rgb(239,229,30)" fg:x="96" fg:w="1"/><text x="72.9773%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="73.4848%" y="373" width="0.7576%" height="15" fill="rgb(219,65,33)" fg:x="97" fg:w="1"/><text x="73.7348%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="73.4848%" y="357" width="0.7576%" height="15" fill="rgb(243,134,7)" fg:x="97" fg:w="1"/><text x="73.7348%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="73.4848%" y="341" width="0.7576%" height="15" fill="rgb(216,177,54)" fg:x="97" fg:w="1"/><text x="73.7348%" y="351.50"></text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="869" width="3.7879%" height="15" fill="rgb(211,160,20)" fg:x="94" fg:w="5"/><text x="71.4621%" y="879.50">&lt;req..</text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="853" width="3.7879%" height="15" fill="rgb(239,85,39)" fg:x="94" fg:w="5"/><text x="71.4621%" y="863.50">&lt;req..</text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="837" width="3.7879%" height="15" fill="rgb(232,125,22)" fg:x="94" fg:w="5"/><text x="71.4621%" y="847.50">&lt;hyp..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (5 samples, 3.79%)</title><rect x="71.2121%" y="821" width="3.7879%" height="15" fill="rgb(244,57,34)" fg:x="94" fg:w="5"/><text x="71.4621%" y="831.50">hype..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (5 samples, 3.79%)</title><rect x="71.2121%" y="805" width="3.7879%" height="15" fill="rgb(214,203,32)" fg:x="94" fg:w="5"/><text x="71.4621%" y="815.50">hype..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (5 samples, 3.79%)</title><rect x="71.2121%" y="789" width="3.7879%" height="15" fill="rgb(207,58,43)" fg:x="94" fg:w="5"/><text x="71.4621%" y="799.50">hype..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="773" width="3.7879%" height="15" fill="rgb(215,193,15)" fg:x="94" fg:w="5"/><text x="71.4621%" y="783.50">&lt;fut..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (5 samples, 3.79%)</title><rect x="71.2121%" y="757" width="3.7879%" height="15" fill="rgb(232,15,44)" fg:x="94" fg:w="5"/><text x="71.4621%" y="767.50">futu..</text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="741" width="3.7879%" height="15" fill="rgb(212,3,48)" fg:x="94" fg:w="5"/><text x="71.4621%" y="751.50">&lt;hyp..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="725" width="3.7879%" height="15" fill="rgb(218,128,7)" fg:x="94" fg:w="5"/><text x="71.4621%" y="735.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="709" width="3.7879%" height="15" fill="rgb(226,216,39)" fg:x="94" fg:w="5"/><text x="71.4621%" y="719.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="693" width="3.7879%" height="15" fill="rgb(243,47,51)" fg:x="94" fg:w="5"/><text x="71.4621%" y="703.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="677" width="3.7879%" height="15" fill="rgb(241,183,40)" fg:x="94" fg:w="5"/><text x="71.4621%" y="687.50">&lt;fut..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (5 samples, 3.79%)</title><rect x="71.2121%" y="661" width="3.7879%" height="15" fill="rgb(231,217,32)" fg:x="94" fg:w="5"/><text x="71.4621%" y="671.50">&lt;F a..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="645" width="3.7879%" height="15" fill="rgb(229,61,38)" fg:x="94" fg:w="5"/><text x="71.4621%" y="655.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="629" width="3.7879%" height="15" fill="rgb(225,210,5)" fg:x="94" fg:w="5"/><text x="71.4621%" y="639.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="613" width="3.7879%" height="15" fill="rgb(231,79,45)" fg:x="94" fg:w="5"/><text x="71.4621%" y="623.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="597" width="3.7879%" height="15" fill="rgb(224,100,7)" fg:x="94" fg:w="5"/><text x="71.4621%" y="607.50">&lt;fut..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (5 samples, 3.79%)</title><rect x="71.2121%" y="581" width="3.7879%" height="15" fill="rgb(241,198,18)" fg:x="94" fg:w="5"/><text x="71.4621%" y="591.50">&lt;F a..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="565" width="3.7879%" height="15" fill="rgb(252,97,53)" fg:x="94" fg:w="5"/><text x="71.4621%" y="575.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="549" width="3.7879%" height="15" fill="rgb(220,88,7)" fg:x="94" fg:w="5"/><text x="71.4621%" y="559.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="533" width="3.7879%" height="15" fill="rgb(213,176,14)" fg:x="94" fg:w="5"/><text x="71.4621%" y="543.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="517" width="3.7879%" height="15" fill="rgb(246,73,7)" fg:x="94" fg:w="5"/><text x="71.4621%" y="527.50">&lt;fut..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (5 samples, 3.79%)</title><rect x="71.2121%" y="501" width="3.7879%" height="15" fill="rgb(245,64,36)" fg:x="94" fg:w="5"/><text x="71.4621%" y="511.50">&lt;F a..</text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="485" width="3.7879%" height="15" fill="rgb(245,80,10)" fg:x="94" fg:w="5"/><text x="71.4621%" y="495.50">&lt;hyp..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="469" width="3.7879%" height="15" fill="rgb(232,107,50)" fg:x="94" fg:w="5"/><text x="71.4621%" y="479.50">&lt;cor..</text></g><g><title>reqwest::connect::with_timeout::{{closure}} (5 samples, 3.79%)</title><rect x="71.2121%" y="453" width="3.7879%" height="15" fill="rgb(253,3,0)" fg:x="94" fg:w="5"/><text x="71.4621%" y="463.50">reqw..</text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (5 samples, 3.79%)</title><rect x="71.2121%" y="437" width="3.7879%" height="15" fill="rgb(212,99,53)" fg:x="94" fg:w="5"/><text x="71.4621%" y="447.50">reqw..</text></g><g><title>&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="421" width="3.7879%" height="15" fill="rgb(249,111,54)" fg:x="94" fg:w="5"/><text x="71.4621%" y="431.50">&lt;hyp..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="71.2121%" y="405" width="3.7879%" height="15" fill="rgb(249,55,30)" fg:x="94" fg:w="5"/><text x="71.4621%" y="415.50">&lt;cor..</text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (5 samples, 3.79%)</title><rect x="71.2121%" y="389" width="3.7879%" height="15" fill="rgb(237,47,42)" fg:x="94" fg:w="5"/><text x="71.4621%" y="399.50">&lt;hyp..</text></g><g><title>tokio_native_tls::TlsConnector::connect::{{closure}} (1 samples, 0.76%)</title><rect x="74.2424%" y="373" width="0.7576%" height="15" fill="rgb(211,20,18)" fg:x="98" fg:w="1"/><text x="74.4924%" y="383.50"></text></g><g><title>tokio_native_tls::handshake::{{closure}} (1 samples, 0.76%)</title><rect x="74.2424%" y="357" width="0.7576%" height="15" fill="rgb(231,203,46)" fg:x="98" fg:w="1"/><text x="74.4924%" y="367.50"></text></g><g><title>&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="74.2424%" y="341" width="0.7576%" height="15" fill="rgb(237,142,3)" fg:x="98" fg:w="1"/><text x="74.4924%" y="351.50"></text></g><g><title>tokio_native_tls::TlsConnector::connect::{{closure}}::{{closure}} (1 samples, 0.76%)</title><rect x="74.2424%" y="325" width="0.7576%" height="15" fill="rgb(241,107,1)" fg:x="98" fg:w="1"/><text x="74.4924%" y="335.50"></text></g><g><title>native_tls::TlsConnector::connect (1 samples, 0.76%)</title><rect x="74.2424%" y="309" width="0.7576%" height="15" fill="rgb(229,83,13)" fg:x="98" fg:w="1"/><text x="74.4924%" y="319.50"></text></g><g><title>native_tls::imp::TlsConnector::connect (1 samples, 0.76%)</title><rect x="74.2424%" y="293" width="0.7576%" height="15" fill="rgb(241,91,40)" fg:x="98" fg:w="1"/><text x="74.4924%" y="303.50"></text></g><g><title>openssl::ssl::connector::SslConnector::configure (1 samples, 0.76%)</title><rect x="74.2424%" y="277" width="0.7576%" height="15" fill="rgb(225,3,45)" fg:x="98" fg:w="1"/><text x="74.4924%" y="287.50"></text></g><g><title>openssl::ssl::Ssl::new (1 samples, 0.76%)</title><rect x="74.2424%" y="261" width="0.7576%" height="15" fill="rgb(244,223,14)" fg:x="98" fg:w="1"/><text x="74.4924%" y="271.50"></text></g><g><title>openssl::ssl::SslRef::set_ex_data (1 samples, 0.76%)</title><rect x="74.2424%" y="245" width="0.7576%" height="15" fill="rgb(224,124,37)" fg:x="98" fg:w="1"/><text x="74.4924%" y="255.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.76%)</title><rect x="74.2424%" y="229" width="0.7576%" height="15" fill="rgb(251,171,30)" fg:x="98" fg:w="1"/><text x="74.4924%" y="239.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.76%)</title><rect x="74.2424%" y="213" width="0.7576%" height="15" fill="rgb(236,46,54)" fg:x="98" fg:w="1"/><text x="74.4924%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.76%)</title><rect x="74.2424%" y="197" width="0.7576%" height="15" fill="rgb(245,213,5)" fg:x="98" fg:w="1"/><text x="74.4924%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.76%)</title><rect x="74.2424%" y="181" width="0.7576%" height="15" fill="rgb(230,144,27)" fg:x="98" fg:w="1"/><text x="74.4924%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.76%)</title><rect x="74.2424%" y="165" width="0.7576%" height="15" fill="rgb(220,86,6)" fg:x="98" fg:w="1"/><text x="74.4924%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="74.2424%" y="149" width="0.7576%" height="15" fill="rgb(240,20,13)" fg:x="98" fg:w="1"/><text x="74.4924%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="74.2424%" y="133" width="0.7576%" height="15" fill="rgb(217,89,34)" fg:x="98" fg:w="1"/><text x="74.4924%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="74.2424%" y="117" width="0.7576%" height="15" fill="rgb(229,13,5)" fg:x="98" fg:w="1"/><text x="74.4924%" y="127.50"></text></g><g><title>url::parser::Parser::parse_host_and_port (1 samples, 0.76%)</title><rect x="75.0000%" y="741" width="0.7576%" height="15" fill="rgb(244,67,35)" fg:x="99" fg:w="1"/><text x="75.2500%" y="751.50"></text></g><g><title>url::parser::Parser::parse_host (1 samples, 0.76%)</title><rect x="75.0000%" y="725" width="0.7576%" height="15" fill="rgb(221,40,2)" fg:x="99" fg:w="1"/><text x="75.2500%" y="735.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.76%)</title><rect x="75.0000%" y="709" width="0.7576%" height="15" fill="rgb(237,157,21)" fg:x="99" fg:w="1"/><text x="75.2500%" y="719.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="75.0000%" y="693" width="0.7576%" height="15" fill="rgb(222,94,11)" fg:x="99" fg:w="1"/><text x="75.2500%" y="703.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="75.0000%" y="677" width="0.7576%" height="15" fill="rgb(249,113,6)" fg:x="99" fg:w="1"/><text x="75.2500%" y="687.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="75.0000%" y="661" width="0.7576%" height="15" fill="rgb(238,137,36)" fg:x="99" fg:w="1"/><text x="75.2500%" y="671.50"></text></g><g><title>reqwest::async_impl::client::Client::post (2 samples, 1.52%)</title><rect x="75.0000%" y="869" width="1.5152%" height="15" fill="rgb(210,102,26)" fg:x="99" fg:w="2"/><text x="75.2500%" y="879.50"></text></g><g><title>reqwest::async_impl::client::Client::request (2 samples, 1.52%)</title><rect x="75.0000%" y="853" width="1.5152%" height="15" fill="rgb(218,30,30)" fg:x="99" fg:w="2"/><text x="75.2500%" y="863.50"></text></g><g><title>&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (2 samples, 1.52%)</title><rect x="75.0000%" y="837" width="1.5152%" height="15" fill="rgb(214,67,26)" fg:x="99" fg:w="2"/><text x="75.2500%" y="847.50"></text></g><g><title>url::Url::parse (2 samples, 1.52%)</title><rect x="75.0000%" y="821" width="1.5152%" height="15" fill="rgb(251,9,53)" fg:x="99" fg:w="2"/><text x="75.2500%" y="831.50"></text></g><g><title>url::ParseOptions::parse (2 samples, 1.52%)</title><rect x="75.0000%" y="805" width="1.5152%" height="15" fill="rgb(228,204,25)" fg:x="99" fg:w="2"/><text x="75.2500%" y="815.50"></text></g><g><title>url::parser::Parser::parse_url (2 samples, 1.52%)</title><rect x="75.0000%" y="789" width="1.5152%" height="15" fill="rgb(207,153,8)" fg:x="99" fg:w="2"/><text x="75.2500%" y="799.50"></text></g><g><title>url::parser::Parser::parse_with_scheme (2 samples, 1.52%)</title><rect x="75.0000%" y="773" width="1.5152%" height="15" fill="rgb(242,9,16)" fg:x="99" fg:w="2"/><text x="75.2500%" y="783.50"></text></g><g><title>url::parser::Parser::after_double_slash (2 samples, 1.52%)</title><rect x="75.0000%" y="757" width="1.5152%" height="15" fill="rgb(217,211,10)" fg:x="99" fg:w="2"/><text x="75.2500%" y="767.50"></text></g><g><title>url::parser::Parser::parse_userinfo (1 samples, 0.76%)</title><rect x="75.7576%" y="741" width="0.7576%" height="15" fill="rgb(219,228,52)" fg:x="100" fg:w="1"/><text x="76.0076%" y="751.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="75.7576%" y="725" width="0.7576%" height="15" fill="rgb(231,92,29)" fg:x="100" fg:w="1"/><text x="76.0076%" y="735.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="75.7576%" y="709" width="0.7576%" height="15" fill="rgb(232,8,23)" fg:x="100" fg:w="1"/><text x="76.0076%" y="719.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="75.7576%" y="693" width="0.7576%" height="15" fill="rgb(216,211,34)" fg:x="100" fg:w="1"/><text x="76.0076%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9 samples, 6.82%)</title><rect x="70.4545%" y="901" width="6.8182%" height="15" fill="rgb(236,151,0)" fg:x="93" fg:w="9"/><text x="70.7045%" y="911.50">&lt;core::pi..</text></g><g><title>&lt;ethers_providers::rpc::transports::http::Provider as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (9 samples, 6.82%)</title><rect x="70.4545%" y="885" width="6.8182%" height="15" fill="rgb(209,168,3)" fg:x="93" fg:w="9"/><text x="70.7045%" y="895.50">&lt;ethers_p..</text></g><g><title>reqwest::async_impl::request::RequestBuilder::json (1 samples, 0.76%)</title><rect x="76.5152%" y="869" width="0.7576%" height="15" fill="rgb(208,129,28)" fg:x="101" fg:w="1"/><text x="76.7652%" y="879.50"></text></g><g><title>serde_json::ser::to_vec (1 samples, 0.76%)</title><rect x="76.5152%" y="853" width="0.7576%" height="15" fill="rgb(229,78,22)" fg:x="101" fg:w="1"/><text x="76.7652%" y="863.50"></text></g><g><title>serde_json::ser::to_writer (1 samples, 0.76%)</title><rect x="76.5152%" y="837" width="0.7576%" height="15" fill="rgb(228,187,13)" fg:x="101" fg:w="1"/><text x="76.7652%" y="847.50"></text></g><g><title>ethers_providers::rpc::transports::common::_::&lt;impl serde::ser::Serialize for ethers_providers::rpc::transports::common::Request&lt;T&gt;&gt;::serialize (1 samples, 0.76%)</title><rect x="76.5152%" y="821" width="0.7576%" height="15" fill="rgb(240,119,24)" fg:x="101" fg:w="1"/><text x="76.7652%" y="831.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.76%)</title><rect x="76.5152%" y="805" width="0.7576%" height="15" fill="rgb(209,194,42)" fg:x="101" fg:w="1"/><text x="76.7652%" y="815.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.76%)</title><rect x="76.5152%" y="789" width="0.7576%" height="15" fill="rgb(247,200,46)" fg:x="101" fg:w="1"/><text x="76.7652%" y="799.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.76%)</title><rect x="76.5152%" y="773" width="0.7576%" height="15" fill="rgb(218,76,16)" fg:x="101" fg:w="1"/><text x="76.7652%" y="783.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.76%)</title><rect x="76.5152%" y="757" width="0.7576%" height="15" fill="rgb(225,21,48)" fg:x="101" fg:w="1"/><text x="76.7652%" y="767.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.76%)</title><rect x="76.5152%" y="741" width="0.7576%" height="15" fill="rgb(239,223,50)" fg:x="101" fg:w="1"/><text x="76.7652%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.76%)</title><rect x="76.5152%" y="725" width="0.7576%" height="15" fill="rgb(244,45,21)" fg:x="101" fg:w="1"/><text x="76.7652%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.76%)</title><rect x="76.5152%" y="709" width="0.7576%" height="15" fill="rgb(232,33,43)" fg:x="101" fg:w="1"/><text x="76.7652%" y="719.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.76%)</title><rect x="76.5152%" y="693" width="0.7576%" height="15" fill="rgb(209,8,3)" fg:x="101" fg:w="1"/><text x="76.7652%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.76%)</title><rect x="76.5152%" y="677" width="0.7576%" height="15" fill="rgb(214,25,53)" fg:x="101" fg:w="1"/><text x="76.7652%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.76%)</title><rect x="76.5152%" y="661" width="0.7576%" height="15" fill="rgb(254,186,54)" fg:x="101" fg:w="1"/><text x="76.7652%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.76%)</title><rect x="76.5152%" y="645" width="0.7576%" height="15" fill="rgb(208,174,49)" fg:x="101" fg:w="1"/><text x="76.7652%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.76%)</title><rect x="76.5152%" y="629" width="0.7576%" height="15" fill="rgb(233,191,51)" fg:x="101" fg:w="1"/><text x="76.7652%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.76%)</title><rect x="76.5152%" y="613" width="0.7576%" height="15" fill="rgb(222,134,10)" fg:x="101" fg:w="1"/><text x="76.7652%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.76%)</title><rect x="76.5152%" y="597" width="0.7576%" height="15" fill="rgb(230,226,20)" fg:x="101" fg:w="1"/><text x="76.7652%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.76%)</title><rect x="76.5152%" y="581" width="0.7576%" height="15" fill="rgb(251,111,25)" fg:x="101" fg:w="1"/><text x="76.7652%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="76.5152%" y="565" width="0.7576%" height="15" fill="rgb(224,40,46)" fg:x="101" fg:w="1"/><text x="76.7652%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="76.5152%" y="549" width="0.7576%" height="15" fill="rgb(236,108,47)" fg:x="101" fg:w="1"/><text x="76.7652%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="76.5152%" y="533" width="0.7576%" height="15" fill="rgb(234,93,0)" fg:x="101" fg:w="1"/><text x="76.7652%" y="543.50"></text></g><g><title>discord_gating_bot::controller::check_reputation::{{closure}}::{{closure}} (61 samples, 46.21%)</title><rect x="31.8182%" y="1109" width="46.2121%" height="15" fill="rgb(224,213,32)" fg:x="42" fg:w="61"/><text x="32.0682%" y="1119.50">discord_gating_bot::controller::check_reputation::{{closure}}::{{closure}}</text></g><g><title>discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}} (61 samples, 46.21%)</title><rect x="31.8182%" y="1093" width="46.2121%" height="15" fill="rgb(251,11,48)" fg:x="42" fg:w="61"/><text x="32.0682%" y="1103.50">discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}}</text></g><g><title>discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}}::inner::{{closure}} (61 samples, 46.21%)</title><rect x="31.8182%" y="1077" width="46.2121%" height="15" fill="rgb(236,173,5)" fg:x="42" fg:w="61"/><text x="32.0682%" y="1087.50">discord_gating_bot::controller::get_reputation_in_domain_cached::{{closure}}..</text></g><g><title>colony_rs::get_reputation_in_domain::{{closure}} (61 samples, 46.21%)</title><rect x="31.8182%" y="1061" width="46.2121%" height="15" fill="rgb(230,95,12)" fg:x="42" fg:w="61"/><text x="32.0682%" y="1071.50">colony_rs::get_reputation_in_domain::{{closure}}</text></g><g><title>colony_rs::get_reputation_root_hash::{{closure}} (24 samples, 18.18%)</title><rect x="59.8485%" y="1045" width="18.1818%" height="15" fill="rgb(232,209,1)" fg:x="79" fg:w="24"/><text x="60.0985%" y="1055.50">colony_rs::get_reputation_ro..</text></g><g><title>ethers_contract::call::FunctionCall&lt;B,M,D&gt;::call::{{closure}} (11 samples, 8.33%)</title><rect x="69.6970%" y="1029" width="8.3333%" height="15" fill="rgb(232,6,1)" fg:x="92" fg:w="11"/><text x="69.9470%" y="1039.50">ethers_contr..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 8.33%)</title><rect x="69.6970%" y="1013" width="8.3333%" height="15" fill="rgb(210,224,50)" fg:x="92" fg:w="11"/><text x="69.9470%" y="1023.50">&lt;core::pin::..</text></g><g><title>&lt;ethers_providers::rpc::provider::Provider&lt;P&gt; as ethers_providers::middleware::Middleware&gt;::call::{{closure}} (11 samples, 8.33%)</title><rect x="69.6970%" y="997" width="8.3333%" height="15" fill="rgb(228,127,35)" fg:x="92" fg:w="11"/><text x="69.9470%" y="1007.50">&lt;ethers_prov..</text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}} (10 samples, 7.58%)</title><rect x="70.4545%" y="981" width="7.5758%" height="15" fill="rgb(245,102,45)" fg:x="93" fg:w="10"/><text x="70.7045%" y="991.50">ethers_pro..</text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 7.58%)</title><rect x="70.4545%" y="965" width="7.5758%" height="15" fill="rgb(214,1,49)" fg:x="93" fg:w="10"/><text x="70.7045%" y="975.50">&lt;tracing_f..</text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}}::{{closure}} (10 samples, 7.58%)</title><rect x="70.4545%" y="949" width="7.5758%" height="15" fill="rgb(226,163,40)" fg:x="93" fg:w="10"/><text x="70.7045%" y="959.50">ethers_pro..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10 samples, 7.58%)</title><rect x="70.4545%" y="933" width="7.5758%" height="15" fill="rgb(239,212,28)" fg:x="93" fg:w="10"/><text x="70.7045%" y="943.50">&lt;core::pin..</text></g><g><title>&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;T&gt; as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (10 samples, 7.58%)</title><rect x="70.4545%" y="917" width="7.5758%" height="15" fill="rgb(220,20,13)" fg:x="93" fg:w="10"/><text x="70.7045%" y="927.50">&lt;ethers_pr..</text></g><g><title>serde_json::value::to_value (1 samples, 0.76%)</title><rect x="77.2727%" y="901" width="0.7576%" height="15" fill="rgb(210,164,35)" fg:x="102" fg:w="1"/><text x="77.5227%" y="911.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (1 samples, 0.76%)</title><rect x="77.2727%" y="885" width="0.7576%" height="15" fill="rgb(248,109,41)" fg:x="102" fg:w="1"/><text x="77.5227%" y="895.50"></text></g><g><title> 2]&gt;::serialize (1 samples, 0.76%)</title><rect x="77.2727%" y="869" width="0.7576%" height="15" fill="rgb(238,23,50)" fg:x="102" fg:w="1"/><text x="77.5227%" y="879.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeTuple&gt;::serialize_element (1 samples, 0.76%)</title><rect x="77.2727%" y="853" width="0.7576%" height="15" fill="rgb(211,48,49)" fg:x="102" fg:w="1"/><text x="77.5227%" y="863.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.76%)</title><rect x="77.2727%" y="837" width="0.7576%" height="15" fill="rgb(223,36,21)" fg:x="102" fg:w="1"/><text x="77.5227%" y="847.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.76%)</title><rect x="77.2727%" y="821" width="0.7576%" height="15" fill="rgb(207,123,46)" fg:x="102" fg:w="1"/><text x="77.5227%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.76%)</title><rect x="77.2727%" y="805" width="0.7576%" height="15" fill="rgb(240,218,32)" fg:x="102" fg:w="1"/><text x="77.5227%" y="815.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.76%)</title><rect x="77.2727%" y="789" width="0.7576%" height="15" fill="rgb(252,5,43)" fg:x="102" fg:w="1"/><text x="77.5227%" y="799.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.76%)</title><rect x="77.2727%" y="773" width="0.7576%" height="15" fill="rgb(252,84,19)" fg:x="102" fg:w="1"/><text x="77.5227%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.76%)</title><rect x="77.2727%" y="757" width="0.7576%" height="15" fill="rgb(243,152,39)" fg:x="102" fg:w="1"/><text x="77.5227%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.76%)</title><rect x="77.2727%" y="741" width="0.7576%" height="15" fill="rgb(234,160,15)" fg:x="102" fg:w="1"/><text x="77.5227%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::MapKeySerializer as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.76%)</title><rect x="77.2727%" y="725" width="0.7576%" height="15" fill="rgb(237,34,20)" fg:x="102" fg:w="1"/><text x="77.5227%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.76%)</title><rect x="77.2727%" y="709" width="0.7576%" height="15" fill="rgb(229,97,13)" fg:x="102" fg:w="1"/><text x="77.5227%" y="719.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="77.2727%" y="693" width="0.7576%" height="15" fill="rgb(234,71,50)" fg:x="102" fg:w="1"/><text x="77.5227%" y="703.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="77.2727%" y="677" width="0.7576%" height="15" fill="rgb(253,155,4)" fg:x="102" fg:w="1"/><text x="77.5227%" y="687.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="77.2727%" y="661" width="0.7576%" height="15" fill="rgb(222,185,37)" fg:x="102" fg:w="1"/><text x="77.5227%" y="671.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="78.0303%" y="1077" width="0.7576%" height="15" fill="rgb(251,177,13)" fg:x="103" fg:w="1"/><text x="78.2803%" y="1087.50"></text></g><g><title>discord_gating_bot::controller::check_reputation::{{closure}}::{{closure}} (1 samples, 0.76%)</title><rect x="78.0303%" y="1061" width="0.7576%" height="15" fill="rgb(250,179,40)" fg:x="103" fg:w="1"/><text x="78.2803%" y="1071.50"></text></g><g><title>&lt;tokio::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.76%)</title><rect x="78.0303%" y="1045" width="0.7576%" height="15" fill="rgb(242,44,2)" fg:x="103" fg:w="1"/><text x="78.2803%" y="1055.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (1 samples, 0.76%)</title><rect x="78.0303%" y="1029" width="0.7576%" height="15" fill="rgb(216,177,13)" fg:x="103" fg:w="1"/><text x="78.2803%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::future::maybe_done::MaybeDone&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt;&gt; (1 samples, 0.76%)</title><rect x="78.0303%" y="1013" width="0.7576%" height="15" fill="rgb(216,106,43)" fg:x="103" fg:w="1"/><text x="78.2803%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt; (1 samples, 0.76%)</title><rect x="78.0303%" y="997" width="0.7576%" height="15" fill="rgb(216,183,2)" fg:x="103" fg:w="1"/><text x="78.2803%" y="1007.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.76%)</title><rect x="78.0303%" y="981" width="0.7576%" height="15" fill="rgb(249,75,3)" fg:x="103" fg:w="1"/><text x="78.2803%" y="991.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (1 samples, 0.76%)</title><rect x="78.0303%" y="965" width="0.7576%" height="15" fill="rgb(219,67,39)" fg:x="103" fg:w="1"/><text x="78.2803%" y="975.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="78.0303%" y="949" width="0.7576%" height="15" fill="rgb(253,228,2)" fg:x="103" fg:w="1"/><text x="78.2803%" y="959.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="78.0303%" y="933" width="0.7576%" height="15" fill="rgb(235,138,27)" fg:x="103" fg:w="1"/><text x="78.2803%" y="943.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="78.0303%" y="917" width="0.7576%" height="15" fill="rgb(236,97,51)" fg:x="103" fg:w="1"/><text x="78.2803%" y="927.50"></text></g><g><title>core::future::get_context (1 samples, 0.76%)</title><rect x="78.7879%" y="1077" width="0.7576%" height="15" fill="rgb(240,80,30)" fg:x="104" fg:w="1"/><text x="79.0379%" y="1087.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="78.7879%" y="1061" width="0.7576%" height="15" fill="rgb(230,178,19)" fg:x="104" fg:w="1"/><text x="79.0379%" y="1071.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="78.7879%" y="1045" width="0.7576%" height="15" fill="rgb(210,190,27)" fg:x="104" fg:w="1"/><text x="79.0379%" y="1055.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="78.7879%" y="1029" width="0.7576%" height="15" fill="rgb(222,107,31)" fg:x="104" fg:w="1"/><text x="79.0379%" y="1039.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1 samples, 0.76%)</title><rect x="79.5455%" y="1013" width="0.7576%" height="15" fill="rgb(216,127,34)" fg:x="105" fg:w="1"/><text x="79.7955%" y="1023.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (1 samples, 0.76%)</title><rect x="79.5455%" y="997" width="0.7576%" height="15" fill="rgb(234,116,52)" fg:x="105" fg:w="1"/><text x="79.7955%" y="1007.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="79.5455%" y="981" width="0.7576%" height="15" fill="rgb(222,124,15)" fg:x="105" fg:w="1"/><text x="79.7955%" y="991.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="79.5455%" y="965" width="0.7576%" height="15" fill="rgb(231,179,28)" fg:x="105" fg:w="1"/><text x="79.7955%" y="975.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="79.5455%" y="949" width="0.7576%" height="15" fill="rgb(226,93,45)" fg:x="105" fg:w="1"/><text x="79.7955%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mutex::MutexGuard&lt;cached::stores::timed::TimedCache&lt;(primitive_types::H160,primitive_types::H160,u64),core::result::Result&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt;&gt; (2 samples, 1.52%)</title><rect x="79.5455%" y="1077" width="1.5152%" height="15" fill="rgb(215,8,51)" fg:x="105" fg:w="2"/><text x="79.7955%" y="1087.50"></text></g><g><title>&lt;tokio::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 1.52%)</title><rect x="79.5455%" y="1061" width="1.5152%" height="15" fill="rgb(223,106,5)" fg:x="105" fg:w="2"/><text x="79.7955%" y="1071.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (2 samples, 1.52%)</title><rect x="79.5455%" y="1045" width="1.5152%" height="15" fill="rgb(250,191,5)" fg:x="105" fg:w="2"/><text x="79.7955%" y="1055.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (2 samples, 1.52%)</title><rect x="79.5455%" y="1029" width="1.5152%" height="15" fill="rgb(242,132,44)" fg:x="105" fg:w="2"/><text x="79.7955%" y="1039.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1 samples, 0.76%)</title><rect x="80.3030%" y="1013" width="0.7576%" height="15" fill="rgb(251,152,29)" fg:x="106" fg:w="1"/><text x="80.5530%" y="1023.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.76%)</title><rect x="80.3030%" y="997" width="0.7576%" height="15" fill="rgb(218,179,5)" fg:x="106" fg:w="1"/><text x="80.5530%" y="1007.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.76%)</title><rect x="80.3030%" y="981" width="0.7576%" height="15" fill="rgb(227,67,19)" fg:x="106" fg:w="1"/><text x="80.5530%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.76%)</title><rect x="80.3030%" y="965" width="0.7576%" height="15" fill="rgb(233,119,31)" fg:x="106" fg:w="1"/><text x="80.5530%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.76%)</title><rect x="80.3030%" y="949" width="0.7576%" height="15" fill="rgb(241,120,22)" fg:x="106" fg:w="1"/><text x="80.5530%" y="959.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.76%)</title><rect x="80.3030%" y="933" width="0.7576%" height="15" fill="rgb(224,102,30)" fg:x="106" fg:w="1"/><text x="80.5530%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.76%)</title><rect x="80.3030%" y="917" width="0.7576%" height="15" fill="rgb(210,164,37)" fg:x="106" fg:w="1"/><text x="80.5530%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.76%)</title><rect x="80.3030%" y="901" width="0.7576%" height="15" fill="rgb(226,191,16)" fg:x="106" fg:w="1"/><text x="80.5530%" y="911.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="80.3030%" y="885" width="0.7576%" height="15" fill="rgb(214,40,45)" fg:x="106" fg:w="1"/><text x="80.5530%" y="895.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="80.3030%" y="869" width="0.7576%" height="15" fill="rgb(244,29,26)" fg:x="106" fg:w="1"/><text x="80.5530%" y="879.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="80.3030%" y="853" width="0.7576%" height="15" fill="rgb(216,16,5)" fg:x="106" fg:w="1"/><text x="80.5530%" y="863.50"></text></g><g><title>discord_gating_bot::controller::calculate_reputation_percentage (1 samples, 0.76%)</title><rect x="81.0606%" y="1077" width="0.7576%" height="15" fill="rgb(249,76,35)" fg:x="107" fg:w="1"/><text x="81.3106%" y="1087.50"></text></g><g><title>primitive_types::U512::from_dec_str (1 samples, 0.76%)</title><rect x="81.0606%" y="1061" width="0.7576%" height="15" fill="rgb(207,11,44)" fg:x="107" fg:w="1"/><text x="81.3106%" y="1071.50"></text></g><g><title>primitive_types::U512::overflowing_mul_u64 (1 samples, 0.76%)</title><rect x="81.0606%" y="1045" width="0.7576%" height="15" fill="rgb(228,190,49)" fg:x="107" fg:w="1"/><text x="81.3106%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.76%)</title><rect x="81.0606%" y="1029" width="0.7576%" height="15" fill="rgb(214,173,12)" fg:x="107" fg:w="1"/><text x="81.3106%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.76%)</title><rect x="81.0606%" y="1013" width="0.7576%" height="15" fill="rgb(218,26,35)" fg:x="107" fg:w="1"/><text x="81.3106%" y="1023.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="81.0606%" y="997" width="0.7576%" height="15" fill="rgb(220,200,19)" fg:x="107" fg:w="1"/><text x="81.3106%" y="1007.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="81.0606%" y="981" width="0.7576%" height="15" fill="rgb(239,95,49)" fg:x="107" fg:w="1"/><text x="81.3106%" y="991.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="81.0606%" y="965" width="0.7576%" height="15" fill="rgb(235,85,53)" fg:x="107" fg:w="1"/><text x="81.3106%" y="975.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="81.8182%" y="997" width="0.7576%" height="15" fill="rgb(233,133,31)" fg:x="108" fg:w="1"/><text x="82.0682%" y="1007.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="81.8182%" y="981" width="0.7576%" height="15" fill="rgb(218,25,20)" fg:x="108" fg:w="1"/><text x="82.0682%" y="991.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="81.8182%" y="965" width="0.7576%" height="15" fill="rgb(252,210,38)" fg:x="108" fg:w="1"/><text x="82.0682%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (1 samples, 0.76%)</title><rect x="82.5758%" y="997" width="0.7576%" height="15" fill="rgb(242,134,21)" fg:x="109" fg:w="1"/><text x="82.8258%" y="1007.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (1 samples, 0.76%)</title><rect x="82.5758%" y="981" width="0.7576%" height="15" fill="rgb(213,28,48)" fg:x="109" fg:w="1"/><text x="82.8258%" y="991.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="82.5758%" y="965" width="0.7576%" height="15" fill="rgb(250,196,2)" fg:x="109" fg:w="1"/><text x="82.8258%" y="975.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="82.5758%" y="949" width="0.7576%" height="15" fill="rgb(227,5,17)" fg:x="109" fg:w="1"/><text x="82.8258%" y="959.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="82.5758%" y="933" width="0.7576%" height="15" fill="rgb(221,226,24)" fg:x="109" fg:w="1"/><text x="82.8258%" y="943.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (3 samples, 2.27%)</title><rect x="81.8182%" y="1013" width="2.2727%" height="15" fill="rgb(211,5,48)" fg:x="108" fg:w="3"/><text x="82.0682%" y="1023.50">t..</text></g><g><title>tokio::runtime::context::budget (1 samples, 0.76%)</title><rect x="83.3333%" y="997" width="0.7576%" height="15" fill="rgb(219,150,6)" fg:x="110" fg:w="1"/><text x="83.5833%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.76%)</title><rect x="83.3333%" y="981" width="0.7576%" height="15" fill="rgb(251,46,16)" fg:x="110" fg:w="1"/><text x="83.5833%" y="991.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="83.3333%" y="965" width="0.7576%" height="15" fill="rgb(220,204,40)" fg:x="110" fg:w="1"/><text x="83.5833%" y="975.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="83.3333%" y="949" width="0.7576%" height="15" fill="rgb(211,85,2)" fg:x="110" fg:w="1"/><text x="83.5833%" y="959.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="83.3333%" y="933" width="0.7576%" height="15" fill="rgb(229,17,7)" fg:x="110" fg:w="1"/><text x="83.5833%" y="943.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (4 samples, 3.03%)</title><rect x="81.8182%" y="1029" width="3.0303%" height="15" fill="rgb(239,72,28)" fg:x="108" fg:w="4"/><text x="82.0682%" y="1039.50">&lt;to..</text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (1 samples, 0.76%)</title><rect x="84.0909%" y="1013" width="0.7576%" height="15" fill="rgb(230,47,54)" fg:x="111" fg:w="1"/><text x="84.3409%" y="1023.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="84.0909%" y="997" width="0.7576%" height="15" fill="rgb(214,50,8)" fg:x="111" fg:w="1"/><text x="84.3409%" y="1007.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="84.0909%" y="981" width="0.7576%" height="15" fill="rgb(216,198,43)" fg:x="111" fg:w="1"/><text x="84.3409%" y="991.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="84.0909%" y="965" width="0.7576%" height="15" fill="rgb(234,20,35)" fg:x="111" fg:w="1"/><text x="84.3409%" y="975.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}} (5 samples, 3.79%)</title><rect x="81.8182%" y="1077" width="3.7879%" height="15" fill="rgb(254,45,19)" fg:x="108" fg:w="5"/><text x="82.0682%" y="1087.50">toki..</text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}}::{{closure}} (5 samples, 3.79%)</title><rect x="81.8182%" y="1061" width="3.7879%" height="15" fill="rgb(219,14,44)" fg:x="108" fg:w="5"/><text x="82.0682%" y="1071.50">toki..</text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::acquire::{{closure}} (5 samples, 3.79%)</title><rect x="81.8182%" y="1045" width="3.7879%" height="15" fill="rgb(217,220,26)" fg:x="108" fg:w="5"/><text x="82.0682%" y="1055.50">toki..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (1 samples, 0.76%)</title><rect x="84.8485%" y="1029" width="0.7576%" height="15" fill="rgb(213,158,28)" fg:x="112" fg:w="1"/><text x="85.0985%" y="1039.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="84.8485%" y="1013" width="0.7576%" height="15" fill="rgb(252,51,52)" fg:x="112" fg:w="1"/><text x="85.0985%" y="1023.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="84.8485%" y="997" width="0.7576%" height="15" fill="rgb(246,89,16)" fg:x="112" fg:w="1"/><text x="85.0985%" y="1007.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="84.8485%" y="981" width="0.7576%" height="15" fill="rgb(216,158,49)" fg:x="112" fg:w="1"/><text x="85.0985%" y="991.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::header (1 samples, 0.76%)</title><rect x="85.6061%" y="981" width="0.7576%" height="15" fill="rgb(236,107,19)" fg:x="113" fg:w="1"/><text x="85.8561%" y="991.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::trailer_ptr (1 samples, 0.76%)</title><rect x="85.6061%" y="965" width="0.7576%" height="15" fill="rgb(228,185,30)" fg:x="113" fg:w="1"/><text x="85.8561%" y="975.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="85.6061%" y="949" width="0.7576%" height="15" fill="rgb(246,134,8)" fg:x="113" fg:w="1"/><text x="85.8561%" y="959.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="85.6061%" y="933" width="0.7576%" height="15" fill="rgb(214,143,50)" fg:x="113" fg:w="1"/><text x="85.8561%" y="943.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="85.6061%" y="917" width="0.7576%" height="15" fill="rgb(228,75,8)" fg:x="113" fg:w="1"/><text x="85.8561%" y="927.50"></text></g><g><title>tokio::task::spawn::spawn (2 samples, 1.52%)</title><rect x="85.6061%" y="1077" width="1.5152%" height="15" fill="rgb(207,175,4)" fg:x="113" fg:w="2"/><text x="85.8561%" y="1087.50"></text></g><g><title>tokio::task::spawn::spawn_inner (2 samples, 1.52%)</title><rect x="85.6061%" y="1061" width="1.5152%" height="15" fill="rgb(205,108,24)" fg:x="113" fg:w="2"/><text x="85.8561%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2 samples, 1.52%)</title><rect x="85.6061%" y="1045" width="1.5152%" height="15" fill="rgb(244,120,49)" fg:x="113" fg:w="2"/><text x="85.8561%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2 samples, 1.52%)</title><rect x="85.6061%" y="1029" width="1.5152%" height="15" fill="rgb(223,47,38)" fg:x="113" fg:w="2"/><text x="85.8561%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2 samples, 1.52%)</title><rect x="85.6061%" y="1013" width="1.5152%" height="15" fill="rgb(229,179,11)" fg:x="113" fg:w="2"/><text x="85.8561%" y="1023.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 1.52%)</title><rect x="85.6061%" y="997" width="1.5152%" height="15" fill="rgb(231,122,1)" fg:x="113" fg:w="2"/><text x="85.8561%" y="1007.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.76%)</title><rect x="86.3636%" y="981" width="0.7576%" height="15" fill="rgb(245,119,9)" fg:x="114" fg:w="1"/><text x="86.6136%" y="991.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (1 samples, 0.76%)</title><rect x="86.3636%" y="965" width="0.7576%" height="15" fill="rgb(241,163,25)" fg:x="114" fg:w="1"/><text x="86.6136%" y="975.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (1 samples, 0.76%)</title><rect x="86.3636%" y="949" width="0.7576%" height="15" fill="rgb(217,214,3)" fg:x="114" fg:w="1"/><text x="86.6136%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.76%)</title><rect x="86.3636%" y="933" width="0.7576%" height="15" fill="rgb(240,86,28)" fg:x="114" fg:w="1"/><text x="86.6136%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.76%)</title><rect x="86.3636%" y="917" width="0.7576%" height="15" fill="rgb(215,47,9)" fg:x="114" fg:w="1"/><text x="86.6136%" y="927.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="86.3636%" y="901" width="0.7576%" height="15" fill="rgb(252,25,45)" fg:x="114" fg:w="1"/><text x="86.6136%" y="911.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="86.3636%" y="885" width="0.7576%" height="15" fill="rgb(251,164,9)" fg:x="114" fg:w="1"/><text x="86.6136%" y="895.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="86.3636%" y="869" width="0.7576%" height="15" fill="rgb(233,194,0)" fg:x="114" fg:w="1"/><text x="86.6136%" y="879.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="87.1212%" y="917" width="0.7576%" height="15" fill="rgb(249,111,24)" fg:x="115" fg:w="1"/><text x="87.3712%" y="927.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="87.1212%" y="901" width="0.7576%" height="15" fill="rgb(250,223,3)" fg:x="115" fg:w="1"/><text x="87.3712%" y="911.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="87.1212%" y="885" width="0.7576%" height="15" fill="rgb(236,178,37)" fg:x="115" fg:w="1"/><text x="87.3712%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="87.1212%" y="1013" width="1.5152%" height="15" fill="rgb(241,158,50)" fg:x="115" fg:w="2"/><text x="87.3712%" y="1023.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (2 samples, 1.52%)</title><rect x="87.1212%" y="997" width="1.5152%" height="15" fill="rgb(213,121,41)" fg:x="115" fg:w="2"/><text x="87.3712%" y="1007.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (2 samples, 1.52%)</title><rect x="87.1212%" y="981" width="1.5152%" height="15" fill="rgb(240,92,3)" fg:x="115" fg:w="2"/><text x="87.3712%" y="991.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (2 samples, 1.52%)</title><rect x="87.1212%" y="965" width="1.5152%" height="15" fill="rgb(205,123,3)" fg:x="115" fg:w="2"/><text x="87.3712%" y="975.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::poll (2 samples, 1.52%)</title><rect x="87.1212%" y="949" width="1.5152%" height="15" fill="rgb(205,97,47)" fg:x="115" fg:w="2"/><text x="87.3712%" y="959.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::read_state (2 samples, 1.52%)</title><rect x="87.1212%" y="933" width="1.5152%" height="15" fill="rgb(247,152,14)" fg:x="115" fg:w="2"/><text x="87.3712%" y="943.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.76%)</title><rect x="87.8788%" y="917" width="0.7576%" height="15" fill="rgb(248,195,53)" fg:x="116" fg:w="1"/><text x="88.1288%" y="927.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::read_state::{{closure}} (1 samples, 0.76%)</title><rect x="87.8788%" y="901" width="0.7576%" height="15" fill="rgb(226,201,16)" fg:x="116" fg:w="1"/><text x="88.1288%" y="911.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="87.8788%" y="885" width="0.7576%" height="15" fill="rgb(205,98,0)" fg:x="116" fg:w="1"/><text x="88.1288%" y="895.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="87.8788%" y="869" width="0.7576%" height="15" fill="rgb(214,191,48)" fg:x="116" fg:w="1"/><text x="88.1288%" y="879.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="87.8788%" y="853" width="0.7576%" height="15" fill="rgb(237,112,39)" fg:x="116" fg:w="1"/><text x="88.1288%" y="863.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="88.6364%" y="949" width="0.7576%" height="15" fill="rgb(247,203,27)" fg:x="117" fg:w="1"/><text x="88.8864%" y="959.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="88.6364%" y="933" width="0.7576%" height="15" fill="rgb(235,124,28)" fg:x="117" fg:w="1"/><text x="88.8864%" y="943.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="88.6364%" y="917" width="0.7576%" height="15" fill="rgb(208,207,46)" fg:x="117" fg:w="1"/><text x="88.8864%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.76%)</title><rect x="89.3939%" y="949" width="0.7576%" height="15" fill="rgb(234,176,4)" fg:x="118" fg:w="1"/><text x="89.6439%" y="959.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.76%)</title><rect x="89.3939%" y="933" width="0.7576%" height="15" fill="rgb(230,133,28)" fg:x="118" fg:w="1"/><text x="89.6439%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.76%)</title><rect x="89.3939%" y="917" width="0.7576%" height="15" fill="rgb(211,137,40)" fg:x="118" fg:w="1"/><text x="89.6439%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.76%)</title><rect x="89.3939%" y="901" width="0.7576%" height="15" fill="rgb(254,35,13)" fg:x="118" fg:w="1"/><text x="89.6439%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.76%)</title><rect x="89.3939%" y="885" width="0.7576%" height="15" fill="rgb(225,49,51)" fg:x="118" fg:w="1"/><text x="89.6439%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.76%)</title><rect x="89.3939%" y="869" width="0.7576%" height="15" fill="rgb(251,10,15)" fg:x="118" fg:w="1"/><text x="89.6439%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.76%)</title><rect x="89.3939%" y="853" width="0.7576%" height="15" fill="rgb(228,207,15)" fg:x="118" fg:w="1"/><text x="89.6439%" y="863.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="89.3939%" y="837" width="0.7576%" height="15" fill="rgb(241,99,19)" fg:x="118" fg:w="1"/><text x="89.6439%" y="847.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="89.3939%" y="821" width="0.7576%" height="15" fill="rgb(207,104,49)" fg:x="118" fg:w="1"/><text x="89.6439%" y="831.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="89.3939%" y="805" width="0.7576%" height="15" fill="rgb(234,99,18)" fg:x="118" fg:w="1"/><text x="89.6439%" y="815.50"></text></g><g><title>tokio::time::interval::Interval::tick::{{closure}} (5 samples, 3.79%)</title><rect x="87.1212%" y="1077" width="3.7879%" height="15" fill="rgb(213,191,49)" fg:x="115" fg:w="5"/><text x="87.3712%" y="1087.50">toki..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 3.79%)</title><rect x="87.1212%" y="1061" width="3.7879%" height="15" fill="rgb(210,226,19)" fg:x="115" fg:w="5"/><text x="87.3712%" y="1071.50">&lt;tok..</text></g><g><title>tokio::time::interval::Interval::tick::{{closure}}::{{closure}} (5 samples, 3.79%)</title><rect x="87.1212%" y="1045" width="3.7879%" height="15" fill="rgb(229,97,18)" fg:x="115" fg:w="5"/><text x="87.3712%" y="1055.50">toki..</text></g><g><title>tokio::time::interval::Interval::poll_tick (5 samples, 3.79%)</title><rect x="87.1212%" y="1029" width="3.7879%" height="15" fill="rgb(211,167,15)" fg:x="115" fg:w="5"/><text x="87.3712%" y="1039.50">toki..</text></g><g><title>tokio::time::sleep::Sleep::reset (3 samples, 2.27%)</title><rect x="88.6364%" y="1013" width="2.2727%" height="15" fill="rgb(210,169,34)" fg:x="117" fg:w="3"/><text x="88.8864%" y="1023.50">t..</text></g><g><title>tokio::time::sleep::Sleep::reset_inner (3 samples, 2.27%)</title><rect x="88.6364%" y="997" width="2.2727%" height="15" fill="rgb(241,121,31)" fg:x="117" fg:w="3"/><text x="88.8864%" y="1007.50">t..</text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (3 samples, 2.27%)</title><rect x="88.6364%" y="981" width="2.2727%" height="15" fill="rgb(232,40,11)" fg:x="117" fg:w="3"/><text x="88.8864%" y="991.50">t..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (3 samples, 2.27%)</title><rect x="88.6364%" y="965" width="2.2727%" height="15" fill="rgb(205,86,26)" fg:x="117" fg:w="3"/><text x="88.8864%" y="975.50">t..</text></g><g><title>tokio::runtime::time::Inner::lock (1 samples, 0.76%)</title><rect x="90.1515%" y="949" width="0.7576%" height="15" fill="rgb(231,126,28)" fg:x="119" fg:w="1"/><text x="90.4015%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.76%)</title><rect x="90.1515%" y="933" width="0.7576%" height="15" fill="rgb(219,221,18)" fg:x="119" fg:w="1"/><text x="90.4015%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.76%)</title><rect x="90.1515%" y="917" width="0.7576%" height="15" fill="rgb(211,40,0)" fg:x="119" fg:w="1"/><text x="90.4015%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.76%)</title><rect x="90.1515%" y="901" width="0.7576%" height="15" fill="rgb(239,85,43)" fg:x="119" fg:w="1"/><text x="90.4015%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.76%)</title><rect x="90.1515%" y="885" width="0.7576%" height="15" fill="rgb(231,55,21)" fg:x="119" fg:w="1"/><text x="90.4015%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.76%)</title><rect x="90.1515%" y="869" width="0.7576%" height="15" fill="rgb(225,184,43)" fg:x="119" fg:w="1"/><text x="90.4015%" y="879.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="90.1515%" y="853" width="0.7576%" height="15" fill="rgb(251,158,41)" fg:x="119" fg:w="1"/><text x="90.4015%" y="863.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="90.1515%" y="837" width="0.7576%" height="15" fill="rgb(234,159,37)" fg:x="119" fg:w="1"/><text x="90.4015%" y="847.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="90.1515%" y="821" width="0.7576%" height="15" fill="rgb(216,204,22)" fg:x="119" fg:w="1"/><text x="90.4015%" y="831.50"></text></g><g><title>discord_gating_bot::controller::check_user::{{closure}}::{{closure}} (18 samples, 13.64%)</title><rect x="78.0303%" y="1109" width="13.6364%" height="15" fill="rgb(214,17,3)" fg:x="103" fg:w="18"/><text x="78.2803%" y="1119.50">discord_gating_bot::c..</text></g><g><title>discord_gating_bot::controller::check_reputation::{{closure}} (18 samples, 13.64%)</title><rect x="78.0303%" y="1093" width="13.6364%" height="15" fill="rgb(212,111,17)" fg:x="103" fg:w="18"/><text x="78.2803%" y="1103.50">discord_gating_bot::c..</text></g><g><title>tracing_core::dispatcher::has_been_set (1 samples, 0.76%)</title><rect x="90.9091%" y="1077" width="0.7576%" height="15" fill="rgb(221,157,24)" fg:x="120" fg:w="1"/><text x="91.1591%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.76%)</title><rect x="90.9091%" y="1061" width="0.7576%" height="15" fill="rgb(252,16,13)" fg:x="120" fg:w="1"/><text x="91.1591%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.76%)</title><rect x="90.9091%" y="1045" width="0.7576%" height="15" fill="rgb(221,62,2)" fg:x="120" fg:w="1"/><text x="91.1591%" y="1055.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="90.9091%" y="1029" width="0.7576%" height="15" fill="rgb(247,87,22)" fg:x="120" fg:w="1"/><text x="91.1591%" y="1039.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="90.9091%" y="1013" width="0.7576%" height="15" fill="rgb(215,73,9)" fg:x="120" fg:w="1"/><text x="91.1591%" y="1023.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="90.9091%" y="997" width="0.7576%" height="15" fill="rgb(207,175,33)" fg:x="120" fg:w="1"/><text x="91.1591%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (91 samples, 68.94%)</title><rect x="23.4848%" y="1269" width="68.9394%" height="15" fill="rgb(243,129,54)" fg:x="31" fg:w="91"/><text x="23.7348%" y="1279.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (91 samples, 68.94%)</title><rect x="23.4848%" y="1253" width="68.9394%" height="15" fill="rgb(227,119,45)" fg:x="31" fg:w="91"/><text x="23.7348%" y="1263.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (90 samples, 68.18%)</title><rect x="24.2424%" y="1237" width="68.1818%" height="15" fill="rgb(205,109,36)" fg:x="32" fg:w="90"/><text x="24.4924%" y="1247.50">std::panicking::try</text></g><g><title>__rust_try (90 samples, 68.18%)</title><rect x="24.2424%" y="1221" width="68.1818%" height="15" fill="rgb(205,6,39)" fg:x="32" fg:w="90"/><text x="24.4924%" y="1231.50">__rust_try</text></g><g><title>std::panicking::try::do_call (90 samples, 68.18%)</title><rect x="24.2424%" y="1205" width="68.1818%" height="15" fill="rgb(221,32,16)" fg:x="32" fg:w="90"/><text x="24.4924%" y="1215.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (90 samples, 68.18%)</title><rect x="24.2424%" y="1189" width="68.1818%" height="15" fill="rgb(228,144,50)" fg:x="32" fg:w="90"/><text x="24.4924%" y="1199.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (90 samples, 68.18%)</title><rect x="24.2424%" y="1173" width="68.1818%" height="15" fill="rgb(229,201,53)" fg:x="32" fg:w="90"/><text x="24.4924%" y="1183.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (89 samples, 67.42%)</title><rect x="25.0000%" y="1157" width="67.4242%" height="15" fill="rgb(249,153,27)" fg:x="33" fg:w="89"/><text x="25.2500%" y="1167.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (89 samples, 67.42%)</title><rect x="25.0000%" y="1141" width="67.4242%" height="15" fill="rgb(227,106,25)" fg:x="33" fg:w="89"/><text x="25.2500%" y="1151.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (89 samples, 67.42%)</title><rect x="25.0000%" y="1125" width="67.4242%" height="15" fill="rgb(230,65,29)" fg:x="33" fg:w="89"/><text x="25.2500%" y="1135.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.76%)</title><rect x="91.6667%" y="1109" width="0.7576%" height="15" fill="rgb(221,57,46)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1119.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.76%)</title><rect x="91.6667%" y="1093" width="0.7576%" height="15" fill="rgb(229,161,17)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.76%)</title><rect x="91.6667%" y="1077" width="0.7576%" height="15" fill="rgb(222,213,11)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1087.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::{{closure}} (1 samples, 0.76%)</title><rect x="91.6667%" y="1061" width="0.7576%" height="15" fill="rgb(235,35,13)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.76%)</title><rect x="91.6667%" y="1045" width="0.7576%" height="15" fill="rgb(233,158,34)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1055.50"></text></g><g><title>core::mem::replace (1 samples, 0.76%)</title><rect x="91.6667%" y="1029" width="0.7576%" height="15" fill="rgb(215,151,48)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1039.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="91.6667%" y="1013" width="0.7576%" height="15" fill="rgb(229,84,14)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1023.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="91.6667%" y="997" width="0.7576%" height="15" fill="rgb(229,68,14)" fg:x="121" fg:w="1"/><text x="91.9167%" y="1007.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="91.6667%" y="981" width="0.7576%" height="15" fill="rgb(243,106,26)" fg:x="121" fg:w="1"/><text x="91.9167%" y="991.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.76%)</title><rect x="92.4242%" y="1269" width="0.7576%" height="15" fill="rgb(206,45,38)" fg:x="122" fg:w="1"/><text x="92.6742%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.76%)</title><rect x="92.4242%" y="1253" width="0.7576%" height="15" fill="rgb(226,6,15)" fg:x="122" fg:w="1"/><text x="92.6742%" y="1263.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="92.4242%" y="1237" width="0.7576%" height="15" fill="rgb(232,22,54)" fg:x="122" fg:w="1"/><text x="92.6742%" y="1247.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="92.4242%" y="1221" width="0.7576%" height="15" fill="rgb(229,222,32)" fg:x="122" fg:w="1"/><text x="92.6742%" y="1231.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="92.4242%" y="1205" width="0.7576%" height="15" fill="rgb(228,62,29)" fg:x="122" fg:w="1"/><text x="92.6742%" y="1215.50"></text></g><g><title>tokio::runtime::coop::budget (98 samples, 74.24%)</title><rect x="19.6970%" y="1397" width="74.2424%" height="15" fill="rgb(251,103,34)" fg:x="26" fg:w="98"/><text x="19.9470%" y="1407.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (98 samples, 74.24%)</title><rect x="19.6970%" y="1381" width="74.2424%" height="15" fill="rgb(233,12,30)" fg:x="26" fg:w="98"/><text x="19.9470%" y="1391.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (97 samples, 73.48%)</title><rect x="20.4545%" y="1365" width="73.4848%" height="15" fill="rgb(238,52,0)" fg:x="27" fg:w="97"/><text x="20.7045%" y="1375.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (95 samples, 71.97%)</title><rect x="21.9697%" y="1349" width="71.9697%" height="15" fill="rgb(223,98,5)" fg:x="29" fg:w="95"/><text x="22.2197%" y="1359.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (95 samples, 71.97%)</title><rect x="21.9697%" y="1333" width="71.9697%" height="15" fill="rgb(228,75,37)" fg:x="29" fg:w="95"/><text x="22.2197%" y="1343.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (95 samples, 71.97%)</title><rect x="21.9697%" y="1317" width="71.9697%" height="15" fill="rgb(205,115,49)" fg:x="29" fg:w="95"/><text x="22.2197%" y="1327.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (95 samples, 71.97%)</title><rect x="21.9697%" y="1301" width="71.9697%" height="15" fill="rgb(250,154,43)" fg:x="29" fg:w="95"/><text x="22.2197%" y="1311.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (93 samples, 70.45%)</title><rect x="23.4848%" y="1285" width="70.4545%" height="15" fill="rgb(226,43,29)" fg:x="31" fg:w="93"/><text x="23.7348%" y="1295.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.76%)</title><rect x="93.1818%" y="1269" width="0.7576%" height="15" fill="rgb(249,228,39)" fg:x="123" fg:w="1"/><text x="93.4318%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.76%)</title><rect x="93.1818%" y="1253" width="0.7576%" height="15" fill="rgb(216,79,43)" fg:x="123" fg:w="1"/><text x="93.4318%" y="1263.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (1 samples, 0.76%)</title><rect x="93.1818%" y="1237" width="0.7576%" height="15" fill="rgb(228,95,12)" fg:x="123" fg:w="1"/><text x="93.4318%" y="1247.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_notified (1 samples, 0.76%)</title><rect x="93.1818%" y="1221" width="0.7576%" height="15" fill="rgb(249,221,15)" fg:x="123" fg:w="1"/><text x="93.4318%" y="1231.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="93.1818%" y="1205" width="0.7576%" height="15" fill="rgb(233,34,13)" fg:x="123" fg:w="1"/><text x="93.4318%" y="1215.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="93.1818%" y="1189" width="0.7576%" height="15" fill="rgb(214,103,39)" fg:x="123" fg:w="1"/><text x="93.4318%" y="1199.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="93.1818%" y="1173" width="0.7576%" height="15" fill="rgb(251,126,39)" fg:x="123" fg:w="1"/><text x="93.4318%" y="1183.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="93.9394%" y="1365" width="0.7576%" height="15" fill="rgb(214,216,36)" fg:x="124" fg:w="1"/><text x="94.1894%" y="1375.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="93.9394%" y="1349" width="0.7576%" height="15" fill="rgb(220,221,8)" fg:x="124" fg:w="1"/><text x="94.1894%" y="1359.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="93.9394%" y="1333" width="0.7576%" height="15" fill="rgb(240,216,3)" fg:x="124" fg:w="1"/><text x="94.1894%" y="1343.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="94.6970%" y="1317" width="0.7576%" height="15" fill="rgb(232,218,17)" fg:x="125" fg:w="1"/><text x="94.9470%" y="1327.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="94.6970%" y="1301" width="0.7576%" height="15" fill="rgb(229,163,45)" fg:x="125" fg:w="1"/><text x="94.9470%" y="1311.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="94.6970%" y="1285" width="0.7576%" height="15" fill="rgb(231,110,42)" fg:x="125" fg:w="1"/><text x="94.9470%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.76%)</title><rect x="95.4545%" y="1317" width="0.7576%" height="15" fill="rgb(208,170,48)" fg:x="126" fg:w="1"/><text x="95.7045%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.76%)</title><rect x="95.4545%" y="1301" width="0.7576%" height="15" fill="rgb(239,116,25)" fg:x="126" fg:w="1"/><text x="95.7045%" y="1311.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="95.4545%" y="1285" width="0.7576%" height="15" fill="rgb(219,200,50)" fg:x="126" fg:w="1"/><text x="95.7045%" y="1295.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="95.4545%" y="1269" width="0.7576%" height="15" fill="rgb(245,200,0)" fg:x="126" fg:w="1"/><text x="95.7045%" y="1279.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="95.4545%" y="1253" width="0.7576%" height="15" fill="rgb(245,119,33)" fg:x="126" fg:w="1"/><text x="95.7045%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (102 samples, 77.27%)</title><rect x="19.6970%" y="1413" width="77.2727%" height="15" fill="rgb(231,125,12)" fg:x="26" fg:w="102"/><text x="19.9470%" y="1423.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (4 samples, 3.03%)</title><rect x="93.9394%" y="1397" width="3.0303%" height="15" fill="rgb(216,96,41)" fg:x="124" fg:w="4"/><text x="94.1894%" y="1407.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (4 samples, 3.03%)</title><rect x="93.9394%" y="1381" width="3.0303%" height="15" fill="rgb(248,43,45)" fg:x="124" fg:w="4"/><text x="94.1894%" y="1391.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked (3 samples, 2.27%)</title><rect x="94.6970%" y="1365" width="2.2727%" height="15" fill="rgb(217,222,7)" fg:x="125" fg:w="3"/><text x="94.9470%" y="1375.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (3 samples, 2.27%)</title><rect x="94.6970%" y="1349" width="2.2727%" height="15" fill="rgb(233,28,6)" fg:x="125" fg:w="3"/><text x="94.9470%" y="1359.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (3 samples, 2.27%)</title><rect x="94.6970%" y="1333" width="2.2727%" height="15" fill="rgb(231,218,15)" fg:x="125" fg:w="3"/><text x="94.9470%" y="1343.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (1 samples, 0.76%)</title><rect x="96.2121%" y="1317" width="0.7576%" height="15" fill="rgb(226,171,48)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1327.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.76%)</title><rect x="96.2121%" y="1301" width="0.7576%" height="15" fill="rgb(235,201,9)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1311.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.76%)</title><rect x="96.2121%" y="1285" width="0.7576%" height="15" fill="rgb(217,80,15)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1295.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.76%)</title><rect x="96.2121%" y="1269" width="0.7576%" height="15" fill="rgb(219,152,8)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.76%)</title><rect x="96.2121%" y="1253" width="0.7576%" height="15" fill="rgb(243,107,38)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.76%)</title><rect x="96.2121%" y="1237" width="0.7576%" height="15" fill="rgb(231,17,5)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.76%)</title><rect x="96.2121%" y="1221" width="0.7576%" height="15" fill="rgb(209,25,54)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1231.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="96.2121%" y="1205" width="0.7576%" height="15" fill="rgb(219,0,2)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1215.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="96.2121%" y="1189" width="0.7576%" height="15" fill="rgb(246,9,5)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1199.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="96.2121%" y="1173" width="0.7576%" height="15" fill="rgb(226,159,4)" fg:x="127" fg:w="1"/><text x="96.4621%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::pre_shutdown (1 samples, 0.76%)</title><rect x="96.9697%" y="1413" width="0.7576%" height="15" fill="rgb(219,175,34)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1423.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (1 samples, 0.76%)</title><rect x="96.9697%" y="1397" width="0.7576%" height="15" fill="rgb(236,10,46)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1407.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::shutdown (1 samples, 0.76%)</title><rect x="96.9697%" y="1381" width="0.7576%" height="15" fill="rgb(240,211,16)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1391.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::shutdown (1 samples, 0.76%)</title><rect x="96.9697%" y="1365" width="0.7576%" height="15" fill="rgb(205,3,43)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1375.50"></text></g><g><title>tokio::runtime::task::raw::shutdown (1 samples, 0.76%)</title><rect x="96.9697%" y="1349" width="0.7576%" height="15" fill="rgb(245,7,22)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::shutdown (1 samples, 0.76%)</title><rect x="96.9697%" y="1333" width="0.7576%" height="15" fill="rgb(239,132,32)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.76%)</title><rect x="96.9697%" y="1317" width="0.7576%" height="15" fill="rgb(228,202,34)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (1 samples, 0.76%)</title><rect x="96.9697%" y="1301" width="0.7576%" height="15" fill="rgb(254,200,22)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (1 samples, 0.76%)</title><rect x="96.9697%" y="1285" width="0.7576%" height="15" fill="rgb(219,10,39)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1295.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1 samples, 0.76%)</title><rect x="96.9697%" y="1269" width="0.7576%" height="15" fill="rgb(226,210,39)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1279.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="96.9697%" y="1253" width="0.7576%" height="15" fill="rgb(208,219,16)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1263.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="96.9697%" y="1237" width="0.7576%" height="15" fill="rgb(216,158,51)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1247.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="96.9697%" y="1221" width="0.7576%" height="15" fill="rgb(233,14,44)" fg:x="128" fg:w="1"/><text x="97.2197%" y="1231.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="97.7273%" y="1381" width="0.7576%" height="15" fill="rgb(237,97,39)" fg:x="129" fg:w="1"/><text x="97.9773%" y="1391.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="97.7273%" y="1365" width="0.7576%" height="15" fill="rgb(218,198,43)" fg:x="129" fg:w="1"/><text x="97.9773%" y="1375.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="97.7273%" y="1349" width="0.7576%" height="15" fill="rgb(231,104,20)" fg:x="129" fg:w="1"/><text x="97.9773%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.76%)</title><rect x="98.4848%" y="1381" width="0.7576%" height="15" fill="rgb(254,36,13)" fg:x="130" fg:w="1"/><text x="98.7348%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.76%)</title><rect x="98.4848%" y="1365" width="0.7576%" height="15" fill="rgb(248,14,50)" fg:x="130" fg:w="1"/><text x="98.7348%" y="1375.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="98.4848%" y="1349" width="0.7576%" height="15" fill="rgb(217,107,29)" fg:x="130" fg:w="1"/><text x="98.7348%" y="1359.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="98.4848%" y="1333" width="0.7576%" height="15" fill="rgb(251,169,33)" fg:x="130" fg:w="1"/><text x="98.7348%" y="1343.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="98.4848%" y="1317" width="0.7576%" height="15" fill="rgb(217,108,32)" fg:x="130" fg:w="1"/><text x="98.7348%" y="1327.50"></text></g><g><title>all (132 samples, 100%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(219,66,42)" fg:x="0" fg:w="132"/><text x="0.2500%" y="2031.50"></text></g><g><title>tokio-runtime-w (115 samples, 87.12%)</title><rect x="12.8788%" y="2005" width="87.1212%" height="15" fill="rgb(206,180,7)" fg:x="17" fg:w="115"/><text x="13.1288%" y="2015.50">tokio-runtime-w</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (115 samples, 87.12%)</title><rect x="12.8788%" y="1989" width="87.1212%" height="15" fill="rgb(208,226,31)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1999.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (115 samples, 87.12%)</title><rect x="12.8788%" y="1973" width="87.1212%" height="15" fill="rgb(218,26,49)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1983.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (115 samples, 87.12%)</title><rect x="12.8788%" y="1957" width="87.1212%" height="15" fill="rgb(233,197,48)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1967.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1941" width="87.1212%" height="15" fill="rgb(252,181,51)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1951.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1925" width="87.1212%" height="15" fill="rgb(253,90,19)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1935.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (115 samples, 87.12%)</title><rect x="12.8788%" y="1909" width="87.1212%" height="15" fill="rgb(215,171,30)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1919.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (115 samples, 87.12%)</title><rect x="12.8788%" y="1893" width="87.1212%" height="15" fill="rgb(214,222,9)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1903.50">std::panicking::try</text></g><g><title>__rust_try (115 samples, 87.12%)</title><rect x="12.8788%" y="1877" width="87.1212%" height="15" fill="rgb(223,3,22)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1887.50">__rust_try</text></g><g><title>std::panicking::try::do_call (115 samples, 87.12%)</title><rect x="12.8788%" y="1861" width="87.1212%" height="15" fill="rgb(225,196,46)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1871.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (115 samples, 87.12%)</title><rect x="12.8788%" y="1845" width="87.1212%" height="15" fill="rgb(209,110,37)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1855.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1829" width="87.1212%" height="15" fill="rgb(249,89,12)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1839.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (115 samples, 87.12%)</title><rect x="12.8788%" y="1813" width="87.1212%" height="15" fill="rgb(226,27,33)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1823.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1797" width="87.1212%" height="15" fill="rgb(213,82,22)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1807.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (115 samples, 87.12%)</title><rect x="12.8788%" y="1781" width="87.1212%" height="15" fill="rgb(248,140,0)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1791.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (115 samples, 87.12%)</title><rect x="12.8788%" y="1765" width="87.1212%" height="15" fill="rgb(228,106,3)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1775.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (115 samples, 87.12%)</title><rect x="12.8788%" y="1749" width="87.1212%" height="15" fill="rgb(209,23,37)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1759.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (115 samples, 87.12%)</title><rect x="12.8788%" y="1733" width="87.1212%" height="15" fill="rgb(241,93,50)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1743.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (115 samples, 87.12%)</title><rect x="12.8788%" y="1717" width="87.1212%" height="15" fill="rgb(253,46,43)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1727.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (115 samples, 87.12%)</title><rect x="12.8788%" y="1701" width="87.1212%" height="15" fill="rgb(226,206,43)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1711.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (115 samples, 87.12%)</title><rect x="12.8788%" y="1685" width="87.1212%" height="15" fill="rgb(217,54,7)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1695.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (115 samples, 87.12%)</title><rect x="12.8788%" y="1669" width="87.1212%" height="15" fill="rgb(223,5,52)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1679.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (115 samples, 87.12%)</title><rect x="12.8788%" y="1653" width="87.1212%" height="15" fill="rgb(206,52,46)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1663.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (115 samples, 87.12%)</title><rect x="12.8788%" y="1637" width="87.1212%" height="15" fill="rgb(253,136,11)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1647.50">std::panicking::try</text></g><g><title>__rust_try (115 samples, 87.12%)</title><rect x="12.8788%" y="1621" width="87.1212%" height="15" fill="rgb(208,106,33)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1631.50">__rust_try</text></g><g><title>std::panicking::try::do_call (115 samples, 87.12%)</title><rect x="12.8788%" y="1605" width="87.1212%" height="15" fill="rgb(206,54,4)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1615.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (115 samples, 87.12%)</title><rect x="12.8788%" y="1589" width="87.1212%" height="15" fill="rgb(213,3,15)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1599.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1573" width="87.1212%" height="15" fill="rgb(252,211,39)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1583.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (115 samples, 87.12%)</title><rect x="12.8788%" y="1557" width="87.1212%" height="15" fill="rgb(223,6,36)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1567.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (115 samples, 87.12%)</title><rect x="12.8788%" y="1541" width="87.1212%" height="15" fill="rgb(252,169,45)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1551.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1525" width="87.1212%" height="15" fill="rgb(212,48,26)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1535.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 87.12%)</title><rect x="12.8788%" y="1509" width="87.1212%" height="15" fill="rgb(251,102,48)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1519.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1493" width="87.1212%" height="15" fill="rgb(243,208,16)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1503.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (115 samples, 87.12%)</title><rect x="12.8788%" y="1477" width="87.1212%" height="15" fill="rgb(219,96,24)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1487.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (115 samples, 87.12%)</title><rect x="12.8788%" y="1461" width="87.1212%" height="15" fill="rgb(219,33,29)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1471.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (115 samples, 87.12%)</title><rect x="12.8788%" y="1445" width="87.1212%" height="15" fill="rgb(223,176,5)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1455.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (115 samples, 87.12%)</title><rect x="12.8788%" y="1429" width="87.1212%" height="15" fill="rgb(228,140,14)" fg:x="17" fg:w="115"/><text x="13.1288%" y="1439.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (3 samples, 2.27%)</title><rect x="97.7273%" y="1413" width="2.2727%" height="15" fill="rgb(217,179,31)" fg:x="129" fg:w="3"/><text x="97.9773%" y="1423.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (3 samples, 2.27%)</title><rect x="97.7273%" y="1397" width="2.2727%" height="15" fill="rgb(230,9,30)" fg:x="129" fg:w="3"/><text x="97.9773%" y="1407.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1 samples, 0.76%)</title><rect x="99.2424%" y="1381" width="0.7576%" height="15" fill="rgb(230,136,20)" fg:x="131" fg:w="1"/><text x="99.4924%" y="1391.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.76%)</title><rect x="99.2424%" y="1365" width="0.7576%" height="15" fill="rgb(215,210,22)" fg:x="131" fg:w="1"/><text x="99.4924%" y="1375.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.76%)</title><rect x="99.2424%" y="1349" width="0.7576%" height="15" fill="rgb(218,43,5)" fg:x="131" fg:w="1"/><text x="99.4924%" y="1359.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.76%)</title><rect x="99.2424%" y="1333" width="0.7576%" height="15" fill="rgb(216,11,5)" fg:x="131" fg:w="1"/><text x="99.4924%" y="1343.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.76%)</title><rect x="99.2424%" y="1317" width="0.7576%" height="15" fill="rgb(209,82,29)" fg:x="131" fg:w="1"/><text x="99.4924%" y="1327.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.76%)</title><rect x="99.2424%" y="1301" width="0.7576%" height="15" fill="rgb(244,115,12)" fg:x="131" fg:w="1"/><text x="99.4924%" y="1311.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.76%)</title><rect x="99.2424%" y="1285" width="0.7576%" height="15" fill="rgb(222,82,18)" fg:x="131" fg:w="1"/><text x="99.4924%" y="1295.50"></text></g></svg></svg>