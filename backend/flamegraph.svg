<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1894" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1877.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1877.00"> </text><svg id="frames" x="10" width="1180" total_samples="51"><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (4 samples, 7.84%)</title><rect x="0.0000%" y="1301" width="7.8431%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1311.50">alloc::vec:..</text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::current_len (4 samples, 7.84%)</title><rect x="0.0000%" y="1285" width="7.8431%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1295.50">alloc::vec:..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 7.84%)</title><rect x="0.0000%" y="1269" width="7.8431%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1279.50">&lt;pprof::bac..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 7.84%)</title><rect x="0.0000%" y="1253" width="7.8431%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1263.50">backtrace::..</text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 7.84%)</title><rect x="0.0000%" y="1237" width="7.8431%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1247.50">backtrace::..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (8 samples, 15.69%)</title><rect x="0.0000%" y="1317" width="15.6863%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1327.50">&lt;core::iter::adapters::t..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (4 samples, 7.84%)</title><rect x="7.8431%" y="1301" width="7.8431%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="4"/><text x="8.0931%" y="1311.50">core::num::..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 7.84%)</title><rect x="7.8431%" y="1285" width="7.8431%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="4"/><text x="8.0931%" y="1295.50">&lt;pprof::bac..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 7.84%)</title><rect x="7.8431%" y="1269" width="7.8431%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="4"/><text x="8.0931%" y="1279.50">backtrace::..</text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 7.84%)</title><rect x="7.8431%" y="1253" width="7.8431%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="4"/><text x="8.0931%" y="1263.50">backtrace::..</text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 27.45%)</title><rect x="0.0000%" y="1445" width="27.4510%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1455.50">&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::..</text></g><g><title>core::ops::function::Fn::call (14 samples, 27.45%)</title><rect x="0.0000%" y="1429" width="27.4510%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1439.50">core::ops::function::Fn::call</text></g><g><title>&lt;sled::metrics::Metrics as core::default::Default&gt;::default (14 samples, 27.45%)</title><rect x="0.0000%" y="1413" width="27.4510%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1423.50">&lt;sled::metrics::Metrics as core::default::De..</text></g><g><title>&lt;sled::histogram::Histogram as core::default::Default&gt;::default (14 samples, 27.45%)</title><rect x="0.0000%" y="1397" width="27.4510%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1407.50">&lt;sled::histogram::Histogram as core::default..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (14 samples, 27.45%)</title><rect x="0.0000%" y="1381" width="27.4510%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1391.50">alloc::vec::Vec&lt;T,A&gt;::resize_with</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (14 samples, 27.45%)</title><rect x="0.0000%" y="1365" width="27.4510%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1375.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (14 samples, 27.45%)</title><rect x="0.0000%" y="1349" width="27.4510%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1359.50">&lt;core::iter::adapters::take::Take&lt;I&gt; as core..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 27.45%)</title><rect x="0.0000%" y="1333" width="27.4510%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1343.50">&lt;core::iter::sources::repeat_with::RepeatWit..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (6 samples, 11.76%)</title><rect x="15.6863%" y="1317" width="11.7647%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="6"/><text x="15.9363%" y="1327.50">&lt;pprof::backtrace..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (6 samples, 11.76%)</title><rect x="15.6863%" y="1301" width="11.7647%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="6"/><text x="15.9363%" y="1311.50">backtrace::backtr..</text></g><g><title>backtrace::backtrace::libunwind::trace (6 samples, 11.76%)</title><rect x="15.6863%" y="1285" width="11.7647%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="6"/><text x="15.9363%" y="1295.50">backtrace::backtr..</text></g><g><title>discord_gating_bot::controller::Controller&lt;S&gt;::new (15 samples, 29.41%)</title><rect x="0.0000%" y="1525" width="29.4118%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1535.50">discord_gating_bot::controller::Controller&lt;S&gt;::..</text></g><g><title>&lt;discord_gating_bot::storage::SledEncryptedStorage as discord_gating_bot::storage::Storage&gt;::new (15 samples, 29.41%)</title><rect x="0.0000%" y="1509" width="29.4118%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1519.50">&lt;discord_gating_bot::storage::SledEncryptedStor..</text></g><g><title>sled::db::open (15 samples, 29.41%)</title><rect x="0.0000%" y="1493" width="29.4118%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1503.50">sled::db::open</text></g><g><title>sled::config::Config::open (15 samples, 29.41%)</title><rect x="0.0000%" y="1477" width="29.4118%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1487.50">sled::config::Config::open</text></g><g><title>sled::db::Db::start_inner (15 samples, 29.41%)</title><rect x="0.0000%" y="1461" width="29.4118%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1471.50">sled::db::Db::start_inner</text></g><g><title>sled::context::Context::start (1 samples, 1.96%)</title><rect x="27.4510%" y="1445" width="1.9608%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1455.50">s..</text></g><g><title>sled::pagecache::PageCache::start (1 samples, 1.96%)</title><rect x="27.4510%" y="1429" width="1.9608%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1439.50">s..</text></g><g><title>sled::pagecache::snapshot::read_snapshot_or_default (1 samples, 1.96%)</title><rect x="27.4510%" y="1413" width="1.9608%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1423.50">s..</text></g><g><title>sled::pagecache::iterator::raw_segment_iter_from (1 samples, 1.96%)</title><rect x="27.4510%" y="1397" width="1.9608%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1407.50">s..</text></g><g><title>sled::pagecache::iterator::scan_segment_headers_and_tail (1 samples, 1.96%)</title><rect x="27.4510%" y="1381" width="1.9608%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1391.50">s..</text></g><g><title>sled::pagecache::iterator::check_contiguity_in_unstable_tail (1 samples, 1.96%)</title><rect x="27.4510%" y="1365" width="1.9608%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1375.50">s..</text></g><g><title>&lt;sled::pagecache::iterator::LogIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.96%)</title><rect x="27.4510%" y="1349" width="1.9608%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1359.50">&lt;..</text></g><g><title>sled::pagecache::iterator::valid_entry_offset (1 samples, 1.96%)</title><rect x="27.4510%" y="1333" width="1.9608%" height="15" fill="rgb(254,191,54)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1343.50">s..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="27.4510%" y="1317" width="1.9608%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1327.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="27.4510%" y="1301" width="1.9608%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1311.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="27.4510%" y="1285" width="1.9608%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="27.7010%" y="1295.50">b..</text></g><g><title>discord_gating_bot::command::execute (16 samples, 31.37%)</title><rect x="0.0000%" y="1541" width="31.3725%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1551.50">discord_gating_bot::command::execute</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (1 samples, 1.96%)</title><rect x="29.4118%" y="1525" width="1.9608%" height="15" fill="rgb(238,167,29)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1535.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (1 samples, 1.96%)</title><rect x="29.4118%" y="1509" width="1.9608%" height="15" fill="rgb(232,182,51)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1519.50">t..</text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (1 samples, 1.96%)</title><rect x="29.4118%" y="1493" width="1.9608%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1503.50">t..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 1.96%)</title><rect x="29.4118%" y="1477" width="1.9608%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1487.50">t..</text></g><g><title>tokio::runtime::coop::budget (1 samples, 1.96%)</title><rect x="29.4118%" y="1461" width="1.9608%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1471.50">t..</text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 1.96%)</title><rect x="29.4118%" y="1445" width="1.9608%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1455.50">t..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (1 samples, 1.96%)</title><rect x="29.4118%" y="1429" width="1.9608%" height="15" fill="rgb(222,207,29)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1439.50">t..</text></g><g><title>discord_gating_bot::controller::check_user::{{closure}} (1 samples, 1.96%)</title><rect x="29.4118%" y="1413" width="1.9608%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1423.50">d..</text></g><g><title>tokio::task::join_set::JoinSet&lt;T&gt;::spawn (1 samples, 1.96%)</title><rect x="29.4118%" y="1397" width="1.9608%" height="15" fill="rgb(218,138,4)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1407.50">t..</text></g><g><title>tokio::task::spawn::spawn (1 samples, 1.96%)</title><rect x="29.4118%" y="1381" width="1.9608%" height="15" fill="rgb(250,191,14)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1391.50">t..</text></g><g><title>tokio::task::spawn::spawn_inner (1 samples, 1.96%)</title><rect x="29.4118%" y="1365" width="1.9608%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1375.50">t..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn (1 samples, 1.96%)</title><rect x="29.4118%" y="1349" width="1.9608%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1359.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (1 samples, 1.96%)</title><rect x="29.4118%" y="1333" width="1.9608%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1343.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1 samples, 1.96%)</title><rect x="29.4118%" y="1317" width="1.9608%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1327.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 1.96%)</title><rect x="29.4118%" y="1301" width="1.9608%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1311.50">t..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 1.96%)</title><rect x="29.4118%" y="1285" width="1.9608%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1295.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (1 samples, 1.96%)</title><rect x="29.4118%" y="1269" width="1.9608%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1279.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked (1 samples, 1.96%)</title><rect x="29.4118%" y="1253" width="1.9608%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1263.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 1.96%)</title><rect x="29.4118%" y="1237" width="1.9608%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1247.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1 samples, 1.96%)</title><rect x="29.4118%" y="1221" width="1.9608%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1231.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (1 samples, 1.96%)</title><rect x="29.4118%" y="1205" width="1.9608%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1215.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 1.96%)</title><rect x="29.4118%" y="1189" width="1.9608%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1199.50">t..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 1.96%)</title><rect x="29.4118%" y="1173" width="1.9608%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1183.50">p..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 1.96%)</title><rect x="29.4118%" y="1157" width="1.9608%" height="15" fill="rgb(221,10,30)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1167.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 1.96%)</title><rect x="29.4118%" y="1141" width="1.9608%" height="15" fill="rgb(210,229,1)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1151.50">p..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="29.4118%" y="1125" width="1.9608%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1135.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="29.4118%" y="1109" width="1.9608%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1119.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="29.4118%" y="1093" width="1.9608%" height="15" fill="rgb(247,98,35)" fg:x="15" fg:w="1"/><text x="29.6618%" y="1103.50">b..</text></g><g><title>discord-gating- (17 samples, 33.33%)</title><rect x="0.0000%" y="1829" width="33.3333%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1839.50">discord-gating-</text></g><g><title>_start (17 samples, 33.33%)</title><rect x="0.0000%" y="1813" width="33.3333%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1823.50">_start</text></g><g><title>__libc_start_main (17 samples, 33.33%)</title><rect x="0.0000%" y="1797" width="33.3333%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1807.50">__libc_start_main</text></g><g><title>main (17 samples, 33.33%)</title><rect x="0.0000%" y="1781" width="33.3333%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1791.50">main</text></g><g><title>std::rt::lang_start (17 samples, 33.33%)</title><rect x="0.0000%" y="1765" width="33.3333%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1775.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (17 samples, 33.33%)</title><rect x="0.0000%" y="1749" width="33.3333%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1759.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (17 samples, 33.33%)</title><rect x="0.0000%" y="1733" width="33.3333%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1743.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (17 samples, 33.33%)</title><rect x="0.0000%" y="1717" width="33.3333%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1727.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17 samples, 33.33%)</title><rect x="0.0000%" y="1701" width="33.3333%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1711.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (17 samples, 33.33%)</title><rect x="0.0000%" y="1685" width="33.3333%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1695.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (17 samples, 33.33%)</title><rect x="0.0000%" y="1669" width="33.3333%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (17 samples, 33.33%)</title><rect x="0.0000%" y="1653" width="33.3333%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17 samples, 33.33%)</title><rect x="0.0000%" y="1637" width="33.3333%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1647.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 33.33%)</title><rect x="0.0000%" y="1621" width="33.3333%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1631.50">core::ops::function::impls::&lt;impl core::ops::function:..</text></g><g><title>std::rt::lang_start::{{closure}} (17 samples, 33.33%)</title><rect x="0.0000%" y="1605" width="33.3333%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1615.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 33.33%)</title><rect x="0.0000%" y="1589" width="33.3333%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1599.50">std::sys_common::backtrace::__rust_begin_short_backtra..</text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 33.33%)</title><rect x="0.0000%" y="1573" width="33.3333%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1583.50">core::ops::function::FnOnce::call_once</text></g><g><title>discord_gating_bot::main (17 samples, 33.33%)</title><rect x="0.0000%" y="1557" width="33.3333%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1567.50">discord_gating_bot::main</text></g><g><title>discord_gating_bot::logging::setup_logging (1 samples, 1.96%)</title><rect x="31.3725%" y="1541" width="1.9608%" height="15" fill="rgb(235,213,38)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1551.50">d..</text></g><g><title>tracing_appender::non_blocking (1 samples, 1.96%)</title><rect x="31.3725%" y="1525" width="1.9608%" height="15" fill="rgb(237,122,38)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1535.50">t..</text></g><g><title>tracing_appender::non_blocking::NonBlocking::new (1 samples, 1.96%)</title><rect x="31.3725%" y="1509" width="1.9608%" height="15" fill="rgb(244,218,35)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1519.50">t..</text></g><g><title>tracing_appender::non_blocking::NonBlockingBuilder::finish (1 samples, 1.96%)</title><rect x="31.3725%" y="1493" width="1.9608%" height="15" fill="rgb(240,68,47)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1503.50">t..</text></g><g><title>tracing_appender::non_blocking::NonBlocking::create (1 samples, 1.96%)</title><rect x="31.3725%" y="1477" width="1.9608%" height="15" fill="rgb(210,16,53)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1487.50">t..</text></g><g><title>crossbeam_channel::channel::bounded (1 samples, 1.96%)</title><rect x="31.3725%" y="1461" width="1.9608%" height="15" fill="rgb(235,124,12)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1471.50">c..</text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::with_capacity (1 samples, 1.96%)</title><rect x="31.3725%" y="1445" width="1.9608%" height="15" fill="rgb(224,169,11)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1455.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.96%)</title><rect x="31.3725%" y="1429" width="1.9608%" height="15" fill="rgb(250,166,2)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1439.50">c..</text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 1.96%)</title><rect x="31.3725%" y="1413" width="1.9608%" height="15" fill="rgb(242,216,29)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1423.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.96%)</title><rect x="31.3725%" y="1397" width="1.9608%" height="15" fill="rgb(230,116,27)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1407.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.96%)</title><rect x="31.3725%" y="1381" width="1.9608%" height="15" fill="rgb(228,99,48)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1391.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.96%)</title><rect x="31.3725%" y="1365" width="1.9608%" height="15" fill="rgb(253,11,6)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1375.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 1.96%)</title><rect x="31.3725%" y="1349" width="1.9608%" height="15" fill="rgb(247,143,39)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1359.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.96%)</title><rect x="31.3725%" y="1333" width="1.9608%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1343.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 1.96%)</title><rect x="31.3725%" y="1317" width="1.9608%" height="15" fill="rgb(233,208,19)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1327.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 1.96%)</title><rect x="31.3725%" y="1301" width="1.9608%" height="15" fill="rgb(216,164,2)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1311.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.96%)</title><rect x="31.3725%" y="1285" width="1.9608%" height="15" fill="rgb(220,129,5)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1295.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 1.96%)</title><rect x="31.3725%" y="1269" width="1.9608%" height="15" fill="rgb(242,17,10)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1279.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.96%)</title><rect x="31.3725%" y="1253" width="1.9608%" height="15" fill="rgb(242,107,0)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1263.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="31.3725%" y="1237" width="1.9608%" height="15" fill="rgb(251,28,31)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1247.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="31.3725%" y="1221" width="1.9608%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1231.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="31.3725%" y="1205" width="1.9608%" height="15" fill="rgb(215,21,27)" fg:x="16" fg:w="1"/><text x="31.6225%" y="1215.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 1.96%)</title><rect x="33.3333%" y="997" width="1.9608%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="1"/><text x="33.5833%" y="1007.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 1.96%)</title><rect x="33.3333%" y="981" width="1.9608%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="1"/><text x="33.5833%" y="991.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 1.96%)</title><rect x="33.3333%" y="965" width="1.9608%" height="15" fill="rgb(226,81,46)" fg:x="17" fg:w="1"/><text x="33.5833%" y="975.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="33.3333%" y="949" width="1.9608%" height="15" fill="rgb(247,70,30)" fg:x="17" fg:w="1"/><text x="33.5833%" y="959.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="33.3333%" y="933" width="1.9608%" height="15" fill="rgb(212,68,19)" fg:x="17" fg:w="1"/><text x="33.5833%" y="943.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="33.3333%" y="917" width="1.9608%" height="15" fill="rgb(240,187,13)" fg:x="17" fg:w="1"/><text x="33.5833%" y="927.50">b..</text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 3.92%)</title><rect x="33.3333%" y="1013" width="3.9216%" height="15" fill="rgb(223,113,26)" fg:x="17" fg:w="2"/><text x="33.5833%" y="1023.50">&lt;mio..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.96%)</title><rect x="35.2941%" y="997" width="1.9608%" height="15" fill="rgb(206,192,2)" fg:x="18" fg:w="1"/><text x="35.5441%" y="1007.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.96%)</title><rect x="35.2941%" y="981" width="1.9608%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="1"/><text x="35.5441%" y="991.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="35.2941%" y="965" width="1.9608%" height="15" fill="rgb(247,173,49)" fg:x="18" fg:w="1"/><text x="35.5441%" y="975.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="35.2941%" y="949" width="1.9608%" height="15" fill="rgb(224,114,35)" fg:x="18" fg:w="1"/><text x="35.5441%" y="959.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="35.2941%" y="933" width="1.9608%" height="15" fill="rgb(245,159,27)" fg:x="18" fg:w="1"/><text x="35.5441%" y="943.50">b..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (3 samples, 5.88%)</title><rect x="33.3333%" y="1237" width="5.8824%" height="15" fill="rgb(245,172,44)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1247.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (3 samples, 5.88%)</title><rect x="33.3333%" y="1221" width="5.8824%" height="15" fill="rgb(236,23,11)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1231.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (3 samples, 5.88%)</title><rect x="33.3333%" y="1205" width="5.8824%" height="15" fill="rgb(205,117,38)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1215.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (3 samples, 5.88%)</title><rect x="33.3333%" y="1189" width="5.8824%" height="15" fill="rgb(237,72,25)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1199.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (3 samples, 5.88%)</title><rect x="33.3333%" y="1173" width="5.8824%" height="15" fill="rgb(244,70,9)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1183.50">tokio::..</text></g><g><title>tokio::runtime::driver::Driver::park (3 samples, 5.88%)</title><rect x="33.3333%" y="1157" width="5.8824%" height="15" fill="rgb(217,125,39)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1167.50">tokio::..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (3 samples, 5.88%)</title><rect x="33.3333%" y="1141" width="5.8824%" height="15" fill="rgb(235,36,10)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1151.50">tokio::..</text></g><g><title>tokio::runtime::time::Driver::park (3 samples, 5.88%)</title><rect x="33.3333%" y="1125" width="5.8824%" height="15" fill="rgb(251,123,47)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1135.50">tokio::..</text></g><g><title>tokio::runtime::time::Driver::park_internal (3 samples, 5.88%)</title><rect x="33.3333%" y="1109" width="5.8824%" height="15" fill="rgb(221,13,13)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1119.50">tokio::..</text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (3 samples, 5.88%)</title><rect x="33.3333%" y="1093" width="5.8824%" height="15" fill="rgb(238,131,9)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1103.50">tokio::..</text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (3 samples, 5.88%)</title><rect x="33.3333%" y="1077" width="5.8824%" height="15" fill="rgb(211,50,8)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1087.50">tokio::..</text></g><g><title>tokio::runtime::signal::Driver::park_timeout (3 samples, 5.88%)</title><rect x="33.3333%" y="1061" width="5.8824%" height="15" fill="rgb(245,182,24)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1071.50">tokio::..</text></g><g><title>tokio::runtime::io::Driver::park_timeout (3 samples, 5.88%)</title><rect x="33.3333%" y="1045" width="5.8824%" height="15" fill="rgb(242,14,37)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1055.50">tokio::..</text></g><g><title>tokio::runtime::io::Driver::turn (3 samples, 5.88%)</title><rect x="33.3333%" y="1029" width="5.8824%" height="15" fill="rgb(246,228,12)" fg:x="17" fg:w="3"/><text x="33.5833%" y="1039.50">tokio::..</text></g><g><title>tokio::runtime::io::Driver::dispatch (1 samples, 1.96%)</title><rect x="37.2549%" y="1013" width="1.9608%" height="15" fill="rgb(213,55,15)" fg:x="19" fg:w="1"/><text x="37.5049%" y="1023.50">t..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 1.96%)</title><rect x="37.2549%" y="997" width="1.9608%" height="15" fill="rgb(209,9,3)" fg:x="19" fg:w="1"/><text x="37.5049%" y="1007.50">t..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1 samples, 1.96%)</title><rect x="37.2549%" y="981" width="1.9608%" height="15" fill="rgb(230,59,30)" fg:x="19" fg:w="1"/><text x="37.5049%" y="991.50">t..</text></g><g><title>core::task::wake::Waker::wake (1 samples, 1.96%)</title><rect x="37.2549%" y="965" width="1.9608%" height="15" fill="rgb(209,121,21)" fg:x="19" fg:w="1"/><text x="37.5049%" y="975.50">c..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 1.96%)</title><rect x="37.2549%" y="949" width="1.9608%" height="15" fill="rgb(220,109,13)" fg:x="19" fg:w="1"/><text x="37.5049%" y="959.50">t..</text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 1.96%)</title><rect x="37.2549%" y="933" width="1.9608%" height="15" fill="rgb(232,18,1)" fg:x="19" fg:w="1"/><text x="37.5049%" y="943.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 1.96%)</title><rect x="37.2549%" y="917" width="1.9608%" height="15" fill="rgb(215,41,42)" fg:x="19" fg:w="1"/><text x="37.5049%" y="927.50">t..</text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 1.96%)</title><rect x="37.2549%" y="901" width="1.9608%" height="15" fill="rgb(224,123,36)" fg:x="19" fg:w="1"/><text x="37.5049%" y="911.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 1.96%)</title><rect x="37.2549%" y="885" width="1.9608%" height="15" fill="rgb(240,125,3)" fg:x="19" fg:w="1"/><text x="37.5049%" y="895.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 1.96%)</title><rect x="37.2549%" y="869" width="1.9608%" height="15" fill="rgb(205,98,50)" fg:x="19" fg:w="1"/><text x="37.5049%" y="879.50">t..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 1.96%)</title><rect x="37.2549%" y="853" width="1.9608%" height="15" fill="rgb(205,185,37)" fg:x="19" fg:w="1"/><text x="37.5049%" y="863.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (1 samples, 1.96%)</title><rect x="37.2549%" y="837" width="1.9608%" height="15" fill="rgb(238,207,15)" fg:x="19" fg:w="1"/><text x="37.5049%" y="847.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 1.96%)</title><rect x="37.2549%" y="821" width="1.9608%" height="15" fill="rgb(213,199,42)" fg:x="19" fg:w="1"/><text x="37.5049%" y="831.50">t..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="37.2549%" y="805" width="1.9608%" height="15" fill="rgb(235,201,11)" fg:x="19" fg:w="1"/><text x="37.5049%" y="815.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="37.2549%" y="789" width="1.9608%" height="15" fill="rgb(207,46,11)" fg:x="19" fg:w="1"/><text x="37.5049%" y="799.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="37.2549%" y="773" width="1.9608%" height="15" fill="rgb(241,35,35)" fg:x="19" fg:w="1"/><text x="37.5049%" y="783.50">b..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (1 samples, 1.96%)</title><rect x="39.2157%" y="725" width="1.9608%" height="15" fill="rgb(243,32,47)" fg:x="20" fg:w="1"/><text x="39.4657%" y="735.50">h..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1 samples, 1.96%)</title><rect x="39.2157%" y="709" width="1.9608%" height="15" fill="rgb(247,202,23)" fg:x="20" fg:w="1"/><text x="39.4657%" y="719.50">h..</text></g><g><title>tracing_core::metadata::LevelFilter::current (1 samples, 1.96%)</title><rect x="39.2157%" y="693" width="1.9608%" height="15" fill="rgb(219,102,11)" fg:x="20" fg:w="1"/><text x="39.4657%" y="703.50">t..</text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 1.96%)</title><rect x="39.2157%" y="677" width="1.9608%" height="15" fill="rgb(243,110,44)" fg:x="20" fg:w="1"/><text x="39.4657%" y="687.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="39.2157%" y="661" width="1.9608%" height="15" fill="rgb(222,74,54)" fg:x="20" fg:w="1"/><text x="39.4657%" y="671.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="39.2157%" y="645" width="1.9608%" height="15" fill="rgb(216,99,12)" fg:x="20" fg:w="1"/><text x="39.4657%" y="655.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="39.2157%" y="629" width="1.9608%" height="15" fill="rgb(226,22,26)" fg:x="20" fg:w="1"/><text x="39.4657%" y="639.50">b..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1 samples, 1.96%)</title><rect x="41.1765%" y="709" width="1.9608%" height="15" fill="rgb(217,163,10)" fg:x="21" fg:w="1"/><text x="41.4265%" y="719.50">h..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (1 samples, 1.96%)</title><rect x="41.1765%" y="693" width="1.9608%" height="15" fill="rgb(213,25,53)" fg:x="21" fg:w="1"/><text x="41.4265%" y="703.50">h..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (1 samples, 1.96%)</title><rect x="41.1765%" y="677" width="1.9608%" height="15" fill="rgb(252,105,26)" fg:x="21" fg:w="1"/><text x="41.4265%" y="687.50">h..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 1.96%)</title><rect x="41.1765%" y="661" width="1.9608%" height="15" fill="rgb(220,39,43)" fg:x="21" fg:w="1"/><text x="41.4265%" y="671.50">h..</text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 1.96%)</title><rect x="41.1765%" y="645" width="1.9608%" height="15" fill="rgb(229,68,48)" fg:x="21" fg:w="1"/><text x="41.4265%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 1.96%)</title><rect x="41.1765%" y="629" width="1.9608%" height="15" fill="rgb(252,8,32)" fg:x="21" fg:w="1"/><text x="41.4265%" y="639.50">&lt;..</text></g><g><title>&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 1.96%)</title><rect x="41.1765%" y="613" width="1.9608%" height="15" fill="rgb(223,20,43)" fg:x="21" fg:w="1"/><text x="41.4265%" y="623.50">&lt;..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 1.96%)</title><rect x="41.1765%" y="597" width="1.9608%" height="15" fill="rgb(229,81,49)" fg:x="21" fg:w="1"/><text x="41.4265%" y="607.50">&lt;..</text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 1.96%)</title><rect x="41.1765%" y="581" width="1.9608%" height="15" fill="rgb(236,28,36)" fg:x="21" fg:w="1"/><text x="41.4265%" y="591.50">t..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 1.96%)</title><rect x="41.1765%" y="565" width="1.9608%" height="15" fill="rgb(249,185,26)" fg:x="21" fg:w="1"/><text x="41.4265%" y="575.50">&lt;..</text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 1.96%)</title><rect x="41.1765%" y="549" width="1.9608%" height="15" fill="rgb(249,174,33)" fg:x="21" fg:w="1"/><text x="41.4265%" y="559.50">&lt;..</text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 1.96%)</title><rect x="41.1765%" y="533" width="1.9608%" height="15" fill="rgb(233,201,37)" fg:x="21" fg:w="1"/><text x="41.4265%" y="543.50">&lt;..</text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 1.96%)</title><rect x="41.1765%" y="517" width="1.9608%" height="15" fill="rgb(221,78,26)" fg:x="21" fg:w="1"/><text x="41.4265%" y="527.50">&lt;..</text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 1.96%)</title><rect x="41.1765%" y="501" width="1.9608%" height="15" fill="rgb(250,127,30)" fg:x="21" fg:w="1"/><text x="41.4265%" y="511.50">o..</text></g><g><title>openssl::ssl::SslRef::read (1 samples, 1.96%)</title><rect x="41.1765%" y="485" width="1.9608%" height="15" fill="rgb(230,49,44)" fg:x="21" fg:w="1"/><text x="41.4265%" y="495.50">o..</text></g><g><title>SSL_read (1 samples, 1.96%)</title><rect x="41.1765%" y="469" width="1.9608%" height="15" fill="rgb(229,67,23)" fg:x="21" fg:w="1"/><text x="41.4265%" y="479.50">S..</text></g><g><title>BIO_read (1 samples, 1.96%)</title><rect x="41.1765%" y="453" width="1.9608%" height="15" fill="rgb(249,83,47)" fg:x="21" fg:w="1"/><text x="41.4265%" y="463.50">B..</text></g><g><title>openssl::ssl::bio::bread (1 samples, 1.96%)</title><rect x="41.1765%" y="437" width="1.9608%" height="15" fill="rgb(215,43,3)" fg:x="21" fg:w="1"/><text x="41.4265%" y="447.50">o..</text></g><g><title>std::panic::catch_unwind (1 samples, 1.96%)</title><rect x="41.1765%" y="421" width="1.9608%" height="15" fill="rgb(238,154,13)" fg:x="21" fg:w="1"/><text x="41.4265%" y="431.50">s..</text></g><g><title>std::panicking::try (1 samples, 1.96%)</title><rect x="41.1765%" y="405" width="1.9608%" height="15" fill="rgb(219,56,2)" fg:x="21" fg:w="1"/><text x="41.4265%" y="415.50">s..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="41.1765%" y="389" width="1.9608%" height="15" fill="rgb(233,0,4)" fg:x="21" fg:w="1"/><text x="41.4265%" y="399.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="41.1765%" y="373" width="1.9608%" height="15" fill="rgb(235,30,7)" fg:x="21" fg:w="1"/><text x="41.4265%" y="383.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="41.1765%" y="357" width="1.9608%" height="15" fill="rgb(250,79,13)" fg:x="21" fg:w="1"/><text x="41.4265%" y="367.50">b..</text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 1.96%)</title><rect x="43.1373%" y="549" width="1.9608%" height="15" fill="rgb(211,146,34)" fg:x="22" fg:w="1"/><text x="43.3873%" y="559.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="43.1373%" y="533" width="1.9608%" height="15" fill="rgb(228,22,38)" fg:x="22" fg:w="1"/><text x="43.3873%" y="543.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="43.1373%" y="517" width="1.9608%" height="15" fill="rgb(235,168,5)" fg:x="22" fg:w="1"/><text x="43.3873%" y="527.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="43.1373%" y="501" width="1.9608%" height="15" fill="rgb(221,155,16)" fg:x="22" fg:w="1"/><text x="43.3873%" y="511.50">b..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 3.92%)</title><rect x="43.1373%" y="661" width="3.9216%" height="15" fill="rgb(215,215,53)" fg:x="22" fg:w="2"/><text x="43.3873%" y="671.50">hype..</text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 3.92%)</title><rect x="43.1373%" y="645" width="3.9216%" height="15" fill="rgb(223,4,10)" fg:x="22" fg:w="2"/><text x="43.3873%" y="655.50">&lt;req..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 3.92%)</title><rect x="43.1373%" y="629" width="3.9216%" height="15" fill="rgb(234,103,6)" fg:x="22" fg:w="2"/><text x="43.3873%" y="639.50">&lt;all..</text></g><g><title>&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 3.92%)</title><rect x="43.1373%" y="613" width="3.9216%" height="15" fill="rgb(227,97,0)" fg:x="22" fg:w="2"/><text x="43.3873%" y="623.50">&lt;req..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 3.92%)</title><rect x="43.1373%" y="597" width="3.9216%" height="15" fill="rgb(234,150,53)" fg:x="22" fg:w="2"/><text x="43.3873%" y="607.50">&lt;tok..</text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (2 samples, 3.92%)</title><rect x="43.1373%" y="581" width="3.9216%" height="15" fill="rgb(228,201,54)" fg:x="22" fg:w="2"/><text x="43.3873%" y="591.50">toki..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (2 samples, 3.92%)</title><rect x="43.1373%" y="565" width="3.9216%" height="15" fill="rgb(222,22,37)" fg:x="22" fg:w="2"/><text x="43.3873%" y="575.50">&lt;tok..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="45.0980%" y="549" width="1.9608%" height="15" fill="rgb(237,53,32)" fg:x="23" fg:w="1"/><text x="45.3480%" y="559.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="45.0980%" y="533" width="1.9608%" height="15" fill="rgb(233,25,53)" fg:x="23" fg:w="1"/><text x="45.3480%" y="543.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="45.0980%" y="517" width="1.9608%" height="15" fill="rgb(210,40,34)" fg:x="23" fg:w="1"/><text x="45.3480%" y="527.50">b..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (4 samples, 7.84%)</title><rect x="41.1765%" y="725" width="7.8431%" height="15" fill="rgb(241,220,44)" fg:x="21" fg:w="4"/><text x="41.4265%" y="735.50">hyper::prot..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (3 samples, 5.88%)</title><rect x="43.1373%" y="709" width="5.8824%" height="15" fill="rgb(235,28,35)" fg:x="22" fg:w="3"/><text x="43.3873%" y="719.50">hyper::..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (3 samples, 5.88%)</title><rect x="43.1373%" y="693" width="5.8824%" height="15" fill="rgb(210,56,17)" fg:x="22" fg:w="3"/><text x="43.3873%" y="703.50">hyper::..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (3 samples, 5.88%)</title><rect x="43.1373%" y="677" width="5.8824%" height="15" fill="rgb(224,130,29)" fg:x="22" fg:w="3"/><text x="43.3873%" y="687.50">hyper::..</text></g><g><title>hyper::proto::h1::role::parse_headers (1 samples, 1.96%)</title><rect x="47.0588%" y="661" width="1.9608%" height="15" fill="rgb(235,212,8)" fg:x="24" fg:w="1"/><text x="47.3088%" y="671.50">h..</text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 1.96%)</title><rect x="47.0588%" y="645" width="1.9608%" height="15" fill="rgb(223,33,50)" fg:x="24" fg:w="1"/><text x="47.3088%" y="655.50">&lt;..</text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (1 samples, 1.96%)</title><rect x="47.0588%" y="629" width="1.9608%" height="15" fill="rgb(219,149,13)" fg:x="24" fg:w="1"/><text x="47.3088%" y="639.50">h..</text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (1 samples, 1.96%)</title><rect x="47.0588%" y="613" width="1.9608%" height="15" fill="rgb(250,156,29)" fg:x="24" fg:w="1"/><text x="47.3088%" y="623.50">h..</text></g><g><title>httparse::skip_empty_lines (1 samples, 1.96%)</title><rect x="47.0588%" y="597" width="1.9608%" height="15" fill="rgb(216,193,19)" fg:x="24" fg:w="1"/><text x="47.3088%" y="607.50">h..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="47.0588%" y="581" width="1.9608%" height="15" fill="rgb(216,135,14)" fg:x="24" fg:w="1"/><text x="47.3088%" y="591.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="47.0588%" y="565" width="1.9608%" height="15" fill="rgb(241,47,5)" fg:x="24" fg:w="1"/><text x="47.3088%" y="575.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="47.0588%" y="549" width="1.9608%" height="15" fill="rgb(233,42,35)" fg:x="24" fg:w="1"/><text x="47.3088%" y="559.50">b..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="933" width="11.7647%" height="15" fill="rgb(231,13,6)" fg:x="20" fg:w="6"/><text x="39.4657%" y="943.50">&lt;futures_util::fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="917" width="11.7647%" height="15" fill="rgb(207,181,40)" fg:x="20" fg:w="6"/><text x="39.4657%" y="927.50">&lt;futures_util::fu..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="901" width="11.7647%" height="15" fill="rgb(254,173,49)" fg:x="20" fg:w="6"/><text x="39.4657%" y="911.50">&lt;futures_util::fu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="885" width="11.7647%" height="15" fill="rgb(221,1,38)" fg:x="20" fg:w="6"/><text x="39.4657%" y="895.50">&lt;futures_util::fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="869" width="11.7647%" height="15" fill="rgb(206,124,46)" fg:x="20" fg:w="6"/><text x="39.4657%" y="879.50">&lt;futures_util::fu..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="853" width="11.7647%" height="15" fill="rgb(249,21,11)" fg:x="20" fg:w="6"/><text x="39.4657%" y="863.50">&lt;futures_util::fu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (6 samples, 11.76%)</title><rect x="39.2157%" y="837" width="11.7647%" height="15" fill="rgb(222,201,40)" fg:x="20" fg:w="6"/><text x="39.4657%" y="847.50">&lt;F as futures_cor..</text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="821" width="11.7647%" height="15" fill="rgb(235,61,29)" fg:x="20" fg:w="6"/><text x="39.4657%" y="831.50">&lt;hyper::client::c..</text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="805" width="11.7647%" height="15" fill="rgb(219,207,3)" fg:x="20" fg:w="6"/><text x="39.4657%" y="815.50">&lt;hyper::client::c..</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (6 samples, 11.76%)</title><rect x="39.2157%" y="789" width="11.7647%" height="15" fill="rgb(222,56,46)" fg:x="20" fg:w="6"/><text x="39.4657%" y="799.50">&lt;hyper::proto::h1..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (6 samples, 11.76%)</title><rect x="39.2157%" y="773" width="11.7647%" height="15" fill="rgb(239,76,54)" fg:x="20" fg:w="6"/><text x="39.4657%" y="783.50">hyper::proto::h1:..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (6 samples, 11.76%)</title><rect x="39.2157%" y="757" width="11.7647%" height="15" fill="rgb(231,124,27)" fg:x="20" fg:w="6"/><text x="39.4657%" y="767.50">hyper::proto::h1:..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (6 samples, 11.76%)</title><rect x="39.2157%" y="741" width="11.7647%" height="15" fill="rgb(249,195,6)" fg:x="20" fg:w="6"/><text x="39.4657%" y="751.50">hyper::proto::h1:..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (1 samples, 1.96%)</title><rect x="49.0196%" y="725" width="1.9608%" height="15" fill="rgb(237,174,47)" fg:x="25" fg:w="1"/><text x="49.2696%" y="735.50">h..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (1 samples, 1.96%)</title><rect x="49.0196%" y="709" width="1.9608%" height="15" fill="rgb(206,201,31)" fg:x="25" fg:w="1"/><text x="49.2696%" y="719.50">h..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (1 samples, 1.96%)</title><rect x="49.0196%" y="693" width="1.9608%" height="15" fill="rgb(231,57,52)" fg:x="25" fg:w="1"/><text x="49.2696%" y="703.50">h..</text></g><g><title>hyper::proto::h1::role::encode_headers (1 samples, 1.96%)</title><rect x="49.0196%" y="677" width="1.9608%" height="15" fill="rgb(248,177,22)" fg:x="25" fg:w="1"/><text x="49.2696%" y="687.50">h..</text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (1 samples, 1.96%)</title><rect x="49.0196%" y="661" width="1.9608%" height="15" fill="rgb(215,211,37)" fg:x="25" fg:w="1"/><text x="49.2696%" y="671.50">&lt;..</text></g><g><title>hyper::proto::h1::role::Client::set_length (1 samples, 1.96%)</title><rect x="49.0196%" y="645" width="1.9608%" height="15" fill="rgb(241,128,51)" fg:x="25" fg:w="1"/><text x="49.2696%" y="655.50">h..</text></g><g><title>hyper::proto::h1::role::set_content_length (1 samples, 1.96%)</title><rect x="49.0196%" y="629" width="1.9608%" height="15" fill="rgb(227,165,31)" fg:x="25" fg:w="1"/><text x="49.2696%" y="639.50">h..</text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::entry (1 samples, 1.96%)</title><rect x="49.0196%" y="613" width="1.9608%" height="15" fill="rgb(228,167,24)" fg:x="25" fg:w="1"/><text x="49.2696%" y="623.50">h..</text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::entry (1 samples, 1.96%)</title><rect x="49.0196%" y="597" width="1.9608%" height="15" fill="rgb(228,143,12)" fg:x="25" fg:w="1"/><text x="49.2696%" y="607.50">&lt;..</text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::entry2 (1 samples, 1.96%)</title><rect x="49.0196%" y="581" width="1.9608%" height="15" fill="rgb(249,149,8)" fg:x="25" fg:w="1"/><text x="49.2696%" y="591.50">h..</text></g><g><title>http::header::map::hash_elem_using (1 samples, 1.96%)</title><rect x="49.0196%" y="565" width="1.9608%" height="15" fill="rgb(243,35,44)" fg:x="25" fg:w="1"/><text x="49.2696%" y="575.50">h..</text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (1 samples, 1.96%)</title><rect x="49.0196%" y="549" width="1.9608%" height="15" fill="rgb(246,89,9)" fg:x="25" fg:w="1"/><text x="49.2696%" y="559.50">&lt;..</text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 1.96%)</title><rect x="49.0196%" y="533" width="1.9608%" height="15" fill="rgb(233,213,13)" fg:x="25" fg:w="1"/><text x="49.2696%" y="543.50">&lt;..</text></g><g><title>&lt;http::header::name::StandardHeader as core::hash::Hash&gt;::hash (1 samples, 1.96%)</title><rect x="49.0196%" y="517" width="1.9608%" height="15" fill="rgb(233,141,41)" fg:x="25" fg:w="1"/><text x="49.2696%" y="527.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 1.96%)</title><rect x="49.0196%" y="501" width="1.9608%" height="15" fill="rgb(239,167,4)" fg:x="25" fg:w="1"/><text x="49.2696%" y="511.50">c..</text></g><g><title>core::hash::Hasher::write_isize (1 samples, 1.96%)</title><rect x="49.0196%" y="485" width="1.9608%" height="15" fill="rgb(209,217,16)" fg:x="25" fg:w="1"/><text x="49.2696%" y="495.50">c..</text></g><g><title>core::hash::Hasher::write_usize (1 samples, 1.96%)</title><rect x="49.0196%" y="469" width="1.9608%" height="15" fill="rgb(219,88,35)" fg:x="25" fg:w="1"/><text x="49.2696%" y="479.50">c..</text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1 samples, 1.96%)</title><rect x="49.0196%" y="453" width="1.9608%" height="15" fill="rgb(220,193,23)" fg:x="25" fg:w="1"/><text x="49.2696%" y="463.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.96%)</title><rect x="49.0196%" y="437" width="1.9608%" height="15" fill="rgb(230,90,52)" fg:x="25" fg:w="1"/><text x="49.2696%" y="447.50">&lt;..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 1.96%)</title><rect x="49.0196%" y="421" width="1.9608%" height="15" fill="rgb(252,106,19)" fg:x="25" fg:w="1"/><text x="49.2696%" y="431.50">c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 1.96%)</title><rect x="49.0196%" y="405" width="1.9608%" height="15" fill="rgb(206,74,20)" fg:x="25" fg:w="1"/><text x="49.2696%" y="415.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 1.96%)</title><rect x="49.0196%" y="389" width="1.9608%" height="15" fill="rgb(230,138,44)" fg:x="25" fg:w="1"/><text x="49.2696%" y="399.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="49.0196%" y="373" width="1.9608%" height="15" fill="rgb(235,182,43)" fg:x="25" fg:w="1"/><text x="49.2696%" y="383.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="49.0196%" y="357" width="1.9608%" height="15" fill="rgb(242,16,51)" fg:x="25" fg:w="1"/><text x="49.2696%" y="367.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="49.0196%" y="341" width="1.9608%" height="15" fill="rgb(248,9,4)" fg:x="25" fg:w="1"/><text x="49.2696%" y="351.50">b..</text></g><g><title>&lt;ethabi::contract::Contract as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="50.9804%" y="869" width="1.9608%" height="15" fill="rgb(210,31,22)" fg:x="26" fg:w="1"/><text x="51.2304%" y="879.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="50.9804%" y="853" width="1.9608%" height="15" fill="rgb(239,54,39)" fg:x="26" fg:w="1"/><text x="51.2304%" y="863.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 1.96%)</title><rect x="50.9804%" y="837" width="1.9608%" height="15" fill="rgb(230,99,41)" fg:x="26" fg:w="1"/><text x="51.2304%" y="847.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 1.96%)</title><rect x="50.9804%" y="821" width="1.9608%" height="15" fill="rgb(253,106,12)" fg:x="26" fg:w="1"/><text x="51.2304%" y="831.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 1.96%)</title><rect x="50.9804%" y="805" width="1.9608%" height="15" fill="rgb(213,46,41)" fg:x="26" fg:w="1"/><text x="51.2304%" y="815.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="50.9804%" y="789" width="1.9608%" height="15" fill="rgb(215,133,35)" fg:x="26" fg:w="1"/><text x="51.2304%" y="799.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 1.96%)</title><rect x="50.9804%" y="773" width="1.9608%" height="15" fill="rgb(213,28,5)" fg:x="26" fg:w="1"/><text x="51.2304%" y="783.50">a..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 1.96%)</title><rect x="50.9804%" y="757" width="1.9608%" height="15" fill="rgb(215,77,49)" fg:x="26" fg:w="1"/><text x="51.2304%" y="767.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 1.96%)</title><rect x="50.9804%" y="741" width="1.9608%" height="15" fill="rgb(248,100,22)" fg:x="26" fg:w="1"/><text x="51.2304%" y="751.50">&lt;..</text></g><g><title>&lt;ethabi::function::Function as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="50.9804%" y="725" width="1.9608%" height="15" fill="rgb(208,67,9)" fg:x="26" fg:w="1"/><text x="51.2304%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="50.9804%" y="709" width="1.9608%" height="15" fill="rgb(219,133,21)" fg:x="26" fg:w="1"/><text x="51.2304%" y="719.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 1.96%)</title><rect x="50.9804%" y="693" width="1.9608%" height="15" fill="rgb(246,46,29)" fg:x="26" fg:w="1"/><text x="51.2304%" y="703.50">a..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 1.96%)</title><rect x="50.9804%" y="677" width="1.9608%" height="15" fill="rgb(246,185,52)" fg:x="26" fg:w="1"/><text x="51.2304%" y="687.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 1.96%)</title><rect x="50.9804%" y="661" width="1.9608%" height="15" fill="rgb(252,136,11)" fg:x="26" fg:w="1"/><text x="51.2304%" y="671.50">&lt;..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 1.96%)</title><rect x="50.9804%" y="645" width="1.9608%" height="15" fill="rgb(219,138,53)" fg:x="26" fg:w="1"/><text x="51.2304%" y="655.50">c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 1.96%)</title><rect x="50.9804%" y="629" width="1.9608%" height="15" fill="rgb(211,51,23)" fg:x="26" fg:w="1"/><text x="51.2304%" y="639.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 1.96%)</title><rect x="50.9804%" y="613" width="1.9608%" height="15" fill="rgb(247,221,28)" fg:x="26" fg:w="1"/><text x="51.2304%" y="623.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="50.9804%" y="597" width="1.9608%" height="15" fill="rgb(251,222,45)" fg:x="26" fg:w="1"/><text x="51.2304%" y="607.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="50.9804%" y="581" width="1.9608%" height="15" fill="rgb(217,162,53)" fg:x="26" fg:w="1"/><text x="51.2304%" y="591.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="50.9804%" y="565" width="1.9608%" height="15" fill="rgb(229,93,14)" fg:x="26" fg:w="1"/><text x="51.2304%" y="575.50">b..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 1.96%)</title><rect x="52.9412%" y="373" width="1.9608%" height="15" fill="rgb(209,67,49)" fg:x="27" fg:w="1"/><text x="53.1912%" y="383.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 1.96%)</title><rect x="52.9412%" y="357" width="1.9608%" height="15" fill="rgb(213,87,29)" fg:x="27" fg:w="1"/><text x="53.1912%" y="367.50">a..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="52.9412%" y="341" width="1.9608%" height="15" fill="rgb(205,151,52)" fg:x="27" fg:w="1"/><text x="53.1912%" y="351.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="52.9412%" y="325" width="1.9608%" height="15" fill="rgb(253,215,39)" fg:x="27" fg:w="1"/><text x="53.1912%" y="335.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="52.9412%" y="309" width="1.9608%" height="15" fill="rgb(221,220,41)" fg:x="27" fg:w="1"/><text x="53.1912%" y="319.50">b..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 3.92%)</title><rect x="52.9412%" y="517" width="3.9216%" height="15" fill="rgb(218,133,21)" fg:x="27" fg:w="2"/><text x="53.1912%" y="527.50">&lt;&amp;mu..</text></g><g><title>&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 3.92%)</title><rect x="52.9412%" y="501" width="3.9216%" height="15" fill="rgb(221,193,43)" fg:x="27" fg:w="2"/><text x="53.1912%" y="511.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_value (2 samples, 3.92%)</title><rect x="52.9412%" y="485" width="3.9216%" height="15" fill="rgb(240,128,52)" fg:x="27" fg:w="2"/><text x="53.1912%" y="495.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 3.92%)</title><rect x="52.9412%" y="469" width="3.9216%" height="15" fill="rgb(253,114,12)" fg:x="27" fg:w="2"/><text x="53.1912%" y="479.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 3.92%)</title><rect x="52.9412%" y="453" width="3.9216%" height="15" fill="rgb(215,223,47)" fg:x="27" fg:w="2"/><text x="53.1912%" y="463.50">&lt;cor..</text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 3.92%)</title><rect x="52.9412%" y="437" width="3.9216%" height="15" fill="rgb(248,225,23)" fg:x="27" fg:w="2"/><text x="53.1912%" y="447.50">&lt;ser..</text></g><g><title>serde::de::Deserializer::__deserialize_content (2 samples, 3.92%)</title><rect x="52.9412%" y="421" width="3.9216%" height="15" fill="rgb(250,108,0)" fg:x="27" fg:w="2"/><text x="53.1912%" y="431.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 3.92%)</title><rect x="52.9412%" y="405" width="3.9216%" height="15" fill="rgb(228,208,7)" fg:x="27" fg:w="2"/><text x="53.1912%" y="415.50">&lt;&amp;mu..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 3.92%)</title><rect x="52.9412%" y="389" width="3.9216%" height="15" fill="rgb(244,45,10)" fg:x="27" fg:w="2"/><text x="53.1912%" y="399.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 1.96%)</title><rect x="54.9020%" y="373" width="1.9608%" height="15" fill="rgb(207,125,25)" fg:x="28" fg:w="1"/><text x="55.1520%" y="383.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 1.96%)</title><rect x="54.9020%" y="357" width="1.9608%" height="15" fill="rgb(210,195,18)" fg:x="28" fg:w="1"/><text x="55.1520%" y="367.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 1.96%)</title><rect x="54.9020%" y="341" width="1.9608%" height="15" fill="rgb(249,80,12)" fg:x="28" fg:w="1"/><text x="55.1520%" y="351.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 1.96%)</title><rect x="54.9020%" y="325" width="1.9608%" height="15" fill="rgb(221,65,9)" fg:x="28" fg:w="1"/><text x="55.1520%" y="335.50">&lt;..</text></g><g><title>serde::de::Deserializer::__deserialize_content (1 samples, 1.96%)</title><rect x="54.9020%" y="309" width="1.9608%" height="15" fill="rgb(235,49,36)" fg:x="28" fg:w="1"/><text x="55.1520%" y="319.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 1.96%)</title><rect x="54.9020%" y="293" width="1.9608%" height="15" fill="rgb(225,32,20)" fg:x="28" fg:w="1"/><text x="55.1520%" y="303.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 1.96%)</title><rect x="54.9020%" y="277" width="1.9608%" height="15" fill="rgb(215,141,46)" fg:x="28" fg:w="1"/><text x="55.1520%" y="287.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 1.96%)</title><rect x="54.9020%" y="261" width="1.9608%" height="15" fill="rgb(250,160,47)" fg:x="28" fg:w="1"/><text x="55.1520%" y="271.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 1.96%)</title><rect x="54.9020%" y="245" width="1.9608%" height="15" fill="rgb(216,222,40)" fg:x="28" fg:w="1"/><text x="55.1520%" y="255.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 1.96%)</title><rect x="54.9020%" y="229" width="1.9608%" height="15" fill="rgb(234,217,39)" fg:x="28" fg:w="1"/><text x="55.1520%" y="239.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 1.96%)</title><rect x="54.9020%" y="213" width="1.9608%" height="15" fill="rgb(207,178,40)" fg:x="28" fg:w="1"/><text x="55.1520%" y="223.50">s..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="54.9020%" y="197" width="1.9608%" height="15" fill="rgb(221,136,13)" fg:x="28" fg:w="1"/><text x="55.1520%" y="207.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="54.9020%" y="181" width="1.9608%" height="15" fill="rgb(249,199,10)" fg:x="28" fg:w="1"/><text x="55.1520%" y="191.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="54.9020%" y="165" width="1.9608%" height="15" fill="rgb(249,222,13)" fg:x="28" fg:w="1"/><text x="55.1520%" y="175.50">b..</text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 5.88%)</title><rect x="52.9412%" y="869" width="5.8824%" height="15" fill="rgb(244,185,38)" fg:x="27" fg:w="3"/><text x="53.1912%" y="879.50">&lt;once_c..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (3 samples, 5.88%)</title><rect x="52.9412%" y="853" width="5.8824%" height="15" fill="rgb(236,202,9)" fg:x="27" fg:w="3"/><text x="53.1912%" y="863.50">once_ce..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (3 samples, 5.88%)</title><rect x="52.9412%" y="837" width="5.8824%" height="15" fill="rgb(250,229,37)" fg:x="27" fg:w="3"/><text x="53.1912%" y="847.50">once_ce..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (3 samples, 5.88%)</title><rect x="52.9412%" y="821" width="5.8824%" height="15" fill="rgb(206,174,23)" fg:x="27" fg:w="3"/><text x="53.1912%" y="831.50">once_ce..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (3 samples, 5.88%)</title><rect x="52.9412%" y="805" width="5.8824%" height="15" fill="rgb(211,33,43)" fg:x="27" fg:w="3"/><text x="53.1912%" y="815.50">once_ce..</text></g><g><title>once_cell::imp::initialize_or_wait (3 samples, 5.88%)</title><rect x="52.9412%" y="789" width="5.8824%" height="15" fill="rgb(245,58,50)" fg:x="27" fg:w="3"/><text x="53.1912%" y="799.50">once_ce..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 5.88%)</title><rect x="52.9412%" y="773" width="5.8824%" height="15" fill="rgb(244,68,36)" fg:x="27" fg:w="3"/><text x="53.1912%" y="783.50">core::o..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (3 samples, 5.88%)</title><rect x="52.9412%" y="757" width="5.8824%" height="15" fill="rgb(232,229,15)" fg:x="27" fg:w="3"/><text x="53.1912%" y="767.50">once_ce..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (3 samples, 5.88%)</title><rect x="52.9412%" y="741" width="5.8824%" height="15" fill="rgb(254,30,23)" fg:x="27" fg:w="3"/><text x="53.1912%" y="751.50">once_ce..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (3 samples, 5.88%)</title><rect x="52.9412%" y="725" width="5.8824%" height="15" fill="rgb(235,160,14)" fg:x="27" fg:w="3"/><text x="53.1912%" y="735.50">once_ce..</text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 5.88%)</title><rect x="52.9412%" y="709" width="5.8824%" height="15" fill="rgb(212,155,44)" fg:x="27" fg:w="3"/><text x="53.1912%" y="719.50">core::o..</text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 5.88%)</title><rect x="52.9412%" y="693" width="5.8824%" height="15" fill="rgb(226,2,50)" fg:x="27" fg:w="3"/><text x="53.1912%" y="703.50">core::o..</text></g><g><title>colony_rs::contracts::colony::colony::COLONY_ABI::{{closure}} (3 samples, 5.88%)</title><rect x="52.9412%" y="677" width="5.8824%" height="15" fill="rgb(234,177,6)" fg:x="27" fg:w="3"/><text x="53.1912%" y="687.50">colony_..</text></g><g><title>serde_json::de::from_str (3 samples, 5.88%)</title><rect x="52.9412%" y="661" width="5.8824%" height="15" fill="rgb(217,24,9)" fg:x="27" fg:w="3"/><text x="53.1912%" y="671.50">serde_j..</text></g><g><title>serde_json::de::from_trait (3 samples, 5.88%)</title><rect x="52.9412%" y="645" width="5.8824%" height="15" fill="rgb(220,13,46)" fg:x="27" fg:w="3"/><text x="53.1912%" y="655.50">serde_j..</text></g><g><title>&lt;ethabi::contract::Contract as serde::de::Deserialize&gt;::deserialize (3 samples, 5.88%)</title><rect x="52.9412%" y="629" width="5.8824%" height="15" fill="rgb(239,221,27)" fg:x="27" fg:w="3"/><text x="53.1912%" y="639.50">&lt;ethabi..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 5.88%)</title><rect x="52.9412%" y="613" width="5.8824%" height="15" fill="rgb(222,198,25)" fg:x="27" fg:w="3"/><text x="53.1912%" y="623.50">&lt;&amp;mut s..</text></g><g><title>&lt;ethabi::contract::ContractVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 5.88%)</title><rect x="52.9412%" y="597" width="5.8824%" height="15" fill="rgb(211,99,13)" fg:x="27" fg:w="3"/><text x="53.1912%" y="607.50">&lt;ethabi..</text></g><g><title>serde::de::SeqAccess::next_element (3 samples, 5.88%)</title><rect x="52.9412%" y="581" width="5.8824%" height="15" fill="rgb(232,111,31)" fg:x="27" fg:w="3"/><text x="53.1912%" y="591.50">serde::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 5.88%)</title><rect x="52.9412%" y="565" width="5.8824%" height="15" fill="rgb(245,82,37)" fg:x="27" fg:w="3"/><text x="53.1912%" y="575.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 5.88%)</title><rect x="52.9412%" y="549" width="5.8824%" height="15" fill="rgb(227,149,46)" fg:x="27" fg:w="3"/><text x="53.1912%" y="559.50">&lt;core::..</text></g><g><title>ethabi::operation::_::&lt;impl serde::de::Deserialize for ethabi::operation::Operation&gt;::deserialize (3 samples, 5.88%)</title><rect x="52.9412%" y="533" width="5.8824%" height="15" fill="rgb(218,36,50)" fg:x="27" fg:w="3"/><text x="53.1912%" y="543.50">ethabi:..</text></g><g><title>ethabi::function::_::&lt;impl serde::de::Deserialize for ethabi::function::Function&gt;::deserialize (1 samples, 1.96%)</title><rect x="56.8627%" y="517" width="1.9608%" height="15" fill="rgb(226,80,48)" fg:x="29" fg:w="1"/><text x="57.1127%" y="527.50">e..</text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 1.96%)</title><rect x="56.8627%" y="501" width="1.9608%" height="15" fill="rgb(238,224,15)" fg:x="29" fg:w="1"/><text x="57.1127%" y="511.50">&lt;..</text></g><g><title>serde::__private::de::content::visit_content_map (1 samples, 1.96%)</title><rect x="56.8627%" y="485" width="1.9608%" height="15" fill="rgb(241,136,10)" fg:x="29" fg:w="1"/><text x="57.1127%" y="495.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 1.96%)</title><rect x="56.8627%" y="469" width="1.9608%" height="15" fill="rgb(208,32,45)" fg:x="29" fg:w="1"/><text x="57.1127%" y="479.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 1.96%)</title><rect x="56.8627%" y="453" width="1.9608%" height="15" fill="rgb(207,135,9)" fg:x="29" fg:w="1"/><text x="57.1127%" y="463.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 1.96%)</title><rect x="56.8627%" y="437" width="1.9608%" height="15" fill="rgb(206,86,44)" fg:x="29" fg:w="1"/><text x="57.1127%" y="447.50">c..</text></g><g><title>core::ptr::null_mut (1 samples, 1.96%)</title><rect x="56.8627%" y="421" width="1.9608%" height="15" fill="rgb(245,177,15)" fg:x="29" fg:w="1"/><text x="57.1127%" y="431.50">c..</text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 1.96%)</title><rect x="56.8627%" y="405" width="1.9608%" height="15" fill="rgb(206,64,50)" fg:x="29" fg:w="1"/><text x="57.1127%" y="415.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="56.8627%" y="389" width="1.9608%" height="15" fill="rgb(234,36,40)" fg:x="29" fg:w="1"/><text x="57.1127%" y="399.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="56.8627%" y="373" width="1.9608%" height="15" fill="rgb(213,64,8)" fg:x="29" fg:w="1"/><text x="57.1127%" y="383.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="56.8627%" y="357" width="1.9608%" height="15" fill="rgb(210,75,36)" fg:x="29" fg:w="1"/><text x="57.1127%" y="367.50">b..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="58.8235%" y="869" width="1.9608%" height="15" fill="rgb(229,88,21)" fg:x="30" fg:w="1"/><text x="59.0735%" y="879.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="58.8235%" y="853" width="1.9608%" height="15" fill="rgb(252,204,47)" fg:x="30" fg:w="1"/><text x="59.0735%" y="863.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="58.8235%" y="837" width="1.9608%" height="15" fill="rgb(208,77,27)" fg:x="30" fg:w="1"/><text x="59.0735%" y="847.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 1.96%)</title><rect x="60.7843%" y="213" width="1.9608%" height="15" fill="rgb(221,76,26)" fg:x="31" fg:w="1"/><text x="61.0343%" y="223.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 1.96%)</title><rect x="60.7843%" y="197" width="1.9608%" height="15" fill="rgb(225,139,18)" fg:x="31" fg:w="1"/><text x="61.0343%" y="207.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 1.96%)</title><rect x="60.7843%" y="181" width="1.9608%" height="15" fill="rgb(230,137,11)" fg:x="31" fg:w="1"/><text x="61.0343%" y="191.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.96%)</title><rect x="60.7843%" y="165" width="1.9608%" height="15" fill="rgb(212,28,1)" fg:x="31" fg:w="1"/><text x="61.0343%" y="175.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 1.96%)</title><rect x="60.7843%" y="149" width="1.9608%" height="15" fill="rgb(248,164,17)" fg:x="31" fg:w="1"/><text x="61.0343%" y="159.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="60.7843%" y="133" width="1.9608%" height="15" fill="rgb(222,171,42)" fg:x="31" fg:w="1"/><text x="61.0343%" y="143.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="60.7843%" y="117" width="1.9608%" height="15" fill="rgb(243,84,45)" fg:x="31" fg:w="1"/><text x="61.0343%" y="127.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="60.7843%" y="101" width="1.9608%" height="15" fill="rgb(252,49,23)" fg:x="31" fg:w="1"/><text x="61.0343%" y="111.50">b..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::abi_signature (2 samples, 3.92%)</title><rect x="60.7843%" y="453" width="3.9216%" height="15" fill="rgb(215,19,7)" fg:x="31" fg:w="2"/><text x="61.0343%" y="463.50">&lt;eth..</text></g><g><title>ethabi::function::Function::signature (2 samples, 3.92%)</title><rect x="60.7843%" y="437" width="3.9216%" height="15" fill="rgb(238,81,41)" fg:x="31" fg:w="2"/><text x="61.0343%" y="447.50">etha..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 3.92%)</title><rect x="60.7843%" y="421" width="3.9216%" height="15" fill="rgb(210,199,37)" fg:x="31" fg:w="2"/><text x="61.0343%" y="431.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 3.92%)</title><rect x="60.7843%" y="405" width="3.9216%" height="15" fill="rgb(244,192,49)" fg:x="31" fg:w="2"/><text x="61.0343%" y="415.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 3.92%)</title><rect x="60.7843%" y="389" width="3.9216%" height="15" fill="rgb(226,211,11)" fg:x="31" fg:w="2"/><text x="61.0343%" y="399.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 3.92%)</title><rect x="60.7843%" y="373" width="3.9216%" height="15" fill="rgb(236,162,54)" fg:x="31" fg:w="2"/><text x="61.0343%" y="383.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 3.92%)</title><rect x="60.7843%" y="357" width="3.9216%" height="15" fill="rgb(220,229,9)" fg:x="31" fg:w="2"/><text x="61.0343%" y="367.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 3.92%)</title><rect x="60.7843%" y="341" width="3.9216%" height="15" fill="rgb(250,87,22)" fg:x="31" fg:w="2"/><text x="61.0343%" y="351.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 3.92%)</title><rect x="60.7843%" y="325" width="3.9216%" height="15" fill="rgb(239,43,17)" fg:x="31" fg:w="2"/><text x="61.0343%" y="335.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 3.92%)</title><rect x="60.7843%" y="309" width="3.9216%" height="15" fill="rgb(231,177,25)" fg:x="31" fg:w="2"/><text x="61.0343%" y="319.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 3.92%)</title><rect x="60.7843%" y="293" width="3.9216%" height="15" fill="rgb(219,179,1)" fg:x="31" fg:w="2"/><text x="61.0343%" y="303.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 3.92%)</title><rect x="60.7843%" y="277" width="3.9216%" height="15" fill="rgb(238,219,53)" fg:x="31" fg:w="2"/><text x="61.0343%" y="287.50">core..</text></g><g><title>ethabi::function::Function::signature::{{closure}} (2 samples, 3.92%)</title><rect x="60.7843%" y="261" width="3.9216%" height="15" fill="rgb(232,167,36)" fg:x="31" fg:w="2"/><text x="61.0343%" y="271.50">etha..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2 samples, 3.92%)</title><rect x="60.7843%" y="245" width="3.9216%" height="15" fill="rgb(244,19,51)" fg:x="31" fg:w="2"/><text x="61.0343%" y="255.50">&lt;T a..</text></g><g><title>&lt;ethabi::param_type::param_type::ParamType as core::fmt::Display&gt;::fmt (2 samples, 3.92%)</title><rect x="60.7843%" y="229" width="3.9216%" height="15" fill="rgb(224,6,22)" fg:x="31" fg:w="2"/><text x="61.0343%" y="239.50">&lt;eth..</text></g><g><title>ethabi::param_type::writer::Writer::write (1 samples, 1.96%)</title><rect x="62.7451%" y="213" width="1.9608%" height="15" fill="rgb(224,145,5)" fg:x="32" fg:w="1"/><text x="62.9951%" y="223.50">e..</text></g><g><title>ethabi::param_type::writer::Writer::write_for_abi (1 samples, 1.96%)</title><rect x="62.7451%" y="197" width="1.9608%" height="15" fill="rgb(234,130,49)" fg:x="32" fg:w="1"/><text x="62.9951%" y="207.50">e..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="62.7451%" y="181" width="1.9608%" height="15" fill="rgb(254,6,2)" fg:x="32" fg:w="1"/><text x="62.9951%" y="191.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="62.7451%" y="165" width="1.9608%" height="15" fill="rgb(208,96,46)" fg:x="32" fg:w="1"/><text x="62.9951%" y="175.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="62.7451%" y="149" width="1.9608%" height="15" fill="rgb(239,3,39)" fg:x="32" fg:w="1"/><text x="62.9951%" y="159.50">b..</text></g><g><title>colony_rs::contracts::colony::colony::Colony&lt;M&gt;::new (11 samples, 21.57%)</title><rect x="50.9804%" y="885" width="21.5686%" height="15" fill="rgb(233,210,1)" fg:x="26" fg:w="11"/><text x="51.2304%" y="895.50">colony_rs::contracts::colony::colo..</text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::new (6 samples, 11.76%)</title><rect x="60.7843%" y="869" width="11.7647%" height="15" fill="rgb(244,137,37)" fg:x="31" fg:w="6"/><text x="61.0343%" y="879.50">ethers_contract::..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 11.76%)</title><rect x="60.7843%" y="853" width="11.7647%" height="15" fill="rgb(240,136,2)" fg:x="31" fg:w="6"/><text x="61.0343%" y="863.50">&lt;T as core::conve..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from (6 samples, 11.76%)</title><rect x="60.7843%" y="837" width="11.7647%" height="15" fill="rgb(239,18,37)" fg:x="31" fg:w="6"/><text x="61.0343%" y="847.50">&lt;ethers_contract:..</text></g><g><title>ethers_contract::base::create_mapping (6 samples, 11.76%)</title><rect x="60.7843%" y="821" width="11.7647%" height="15" fill="rgb(218,185,22)" fg:x="31" fg:w="6"/><text x="61.0343%" y="831.50">ethers_contract::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 11.76%)</title><rect x="60.7843%" y="805" width="11.7647%" height="15" fill="rgb(225,218,4)" fg:x="31" fg:w="6"/><text x="61.0343%" y="815.50">core::iter::trait..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 11.76%)</title><rect x="60.7843%" y="789" width="11.7647%" height="15" fill="rgb(230,182,32)" fg:x="31" fg:w="6"/><text x="61.0343%" y="799.50">&lt;std::collections..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 11.76%)</title><rect x="60.7843%" y="773" width="11.7647%" height="15" fill="rgb(242,56,43)" fg:x="31" fg:w="6"/><text x="61.0343%" y="783.50">&lt;std::collections..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 11.76%)</title><rect x="60.7843%" y="757" width="11.7647%" height="15" fill="rgb(233,99,24)" fg:x="31" fg:w="6"/><text x="61.0343%" y="767.50">&lt;hashbrown::map::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 11.76%)</title><rect x="60.7843%" y="741" width="11.7647%" height="15" fill="rgb(234,209,42)" fg:x="31" fg:w="6"/><text x="61.0343%" y="751.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="725" width="11.7647%" height="15" fill="rgb(227,7,12)" fg:x="31" fg:w="6"/><text x="61.0343%" y="735.50">&lt;core::iter::adap..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="709" width="11.7647%" height="15" fill="rgb(245,203,43)" fg:x="31" fg:w="6"/><text x="61.0343%" y="719.50">&lt;core::iter::adap..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (6 samples, 11.76%)</title><rect x="60.7843%" y="693" width="11.7647%" height="15" fill="rgb(238,205,33)" fg:x="31" fg:w="6"/><text x="61.0343%" y="703.50">core::iter::adapt..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="677" width="11.7647%" height="15" fill="rgb(231,56,7)" fg:x="31" fg:w="6"/><text x="61.0343%" y="687.50">&lt;core::iter::adap..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="661" width="11.7647%" height="15" fill="rgb(244,186,29)" fg:x="31" fg:w="6"/><text x="61.0343%" y="671.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="645" width="11.7647%" height="15" fill="rgb(234,111,31)" fg:x="31" fg:w="6"/><text x="61.0343%" y="655.50">core::iter::trait..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 11.76%)</title><rect x="60.7843%" y="629" width="11.7647%" height="15" fill="rgb(241,149,10)" fg:x="31" fg:w="6"/><text x="61.0343%" y="639.50">core::iter::adapt..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (6 samples, 11.76%)</title><rect x="60.7843%" y="613" width="11.7647%" height="15" fill="rgb(249,206,44)" fg:x="31" fg:w="6"/><text x="61.0343%" y="623.50">core::iter::adapt..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (6 samples, 11.76%)</title><rect x="60.7843%" y="597" width="11.7647%" height="15" fill="rgb(251,153,30)" fg:x="31" fg:w="6"/><text x="61.0343%" y="607.50">&lt;core::iter::adap..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="581" width="11.7647%" height="15" fill="rgb(239,152,38)" fg:x="31" fg:w="6"/><text x="61.0343%" y="591.50">&lt;core::iter::adap..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="565" width="11.7647%" height="15" fill="rgb(249,139,47)" fg:x="31" fg:w="6"/><text x="61.0343%" y="575.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 11.76%)</title><rect x="60.7843%" y="549" width="11.7647%" height="15" fill="rgb(244,64,35)" fg:x="31" fg:w="6"/><text x="61.0343%" y="559.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 11.76%)</title><rect x="60.7843%" y="533" width="11.7647%" height="15" fill="rgb(216,46,15)" fg:x="31" fg:w="6"/><text x="61.0343%" y="543.50">&lt;core::iter::adap..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 11.76%)</title><rect x="60.7843%" y="517" width="11.7647%" height="15" fill="rgb(250,74,19)" fg:x="31" fg:w="6"/><text x="61.0343%" y="527.50">core::iter::adapt..</text></g><g><title>ethers_contract::base::create_mapping::{{closure}}::{{closure}} (6 samples, 11.76%)</title><rect x="60.7843%" y="501" width="11.7647%" height="15" fill="rgb(249,42,33)" fg:x="31" fg:w="6"/><text x="61.0343%" y="511.50">ethers_contract::..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from::{{closure}} (6 samples, 11.76%)</title><rect x="60.7843%" y="485" width="11.7647%" height="15" fill="rgb(242,149,17)" fg:x="31" fg:w="6"/><text x="61.0343%" y="495.50">&lt;ethers_contract:..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::selector (6 samples, 11.76%)</title><rect x="60.7843%" y="469" width="11.7647%" height="15" fill="rgb(244,29,21)" fg:x="31" fg:w="6"/><text x="61.0343%" y="479.50">&lt;ethabi::function..</text></g><g><title>ethers_core::utils::hash::id (4 samples, 7.84%)</title><rect x="64.7059%" y="453" width="7.8431%" height="15" fill="rgb(220,130,37)" fg:x="33" fg:w="4"/><text x="64.9559%" y="463.50">ethers_core..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (4 samples, 7.84%)</title><rect x="64.7059%" y="437" width="7.8431%" height="15" fill="rgb(211,67,2)" fg:x="33" fg:w="4"/><text x="64.9559%" y="447.50">&lt;tiny_kecca..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 7.84%)</title><rect x="64.7059%" y="421" width="7.8431%" height="15" fill="rgb(235,68,52)" fg:x="33" fg:w="4"/><text x="64.9559%" y="431.50">tiny_keccak..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (4 samples, 7.84%)</title><rect x="64.7059%" y="405" width="7.8431%" height="15" fill="rgb(246,142,3)" fg:x="33" fg:w="4"/><text x="64.9559%" y="415.50">tiny_keccak..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (4 samples, 7.84%)</title><rect x="64.7059%" y="389" width="7.8431%" height="15" fill="rgb(241,25,7)" fg:x="33" fg:w="4"/><text x="64.9559%" y="399.50">tiny_keccak..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 7.84%)</title><rect x="64.7059%" y="373" width="7.8431%" height="15" fill="rgb(242,119,39)" fg:x="33" fg:w="4"/><text x="64.9559%" y="383.50">tiny_keccak..</text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 7.84%)</title><rect x="64.7059%" y="357" width="7.8431%" height="15" fill="rgb(241,98,45)" fg:x="33" fg:w="4"/><text x="64.9559%" y="367.50">&lt;tiny_kecca..</text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 7.84%)</title><rect x="64.7059%" y="341" width="7.8431%" height="15" fill="rgb(254,28,30)" fg:x="33" fg:w="4"/><text x="64.9559%" y="351.50">tiny_keccak..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 7.84%)</title><rect x="64.7059%" y="325" width="7.8431%" height="15" fill="rgb(241,142,54)" fg:x="33" fg:w="4"/><text x="64.9559%" y="335.50">&lt;pprof::bac..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 7.84%)</title><rect x="64.7059%" y="309" width="7.8431%" height="15" fill="rgb(222,85,15)" fg:x="33" fg:w="4"/><text x="64.9559%" y="319.50">backtrace::..</text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 7.84%)</title><rect x="64.7059%" y="293" width="7.8431%" height="15" fill="rgb(210,85,47)" fg:x="33" fg:w="4"/><text x="64.9559%" y="303.50">backtrace::..</text></g><g><title>core::ptr::drop_in_place&lt;colony_rs::contracts::colony::colony::Colony&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="885" width="1.9608%" height="15" fill="rgb(224,206,25)" fg:x="37" fg:w="1"/><text x="72.7990%" y="895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::contract::ContractInstance&lt;alloc::sync::Arc&lt;ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;,ethers_providers::rpc::provider::Provider&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;ethers_providers::rpc::transports::http::Provider&gt;&gt;&gt;&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="869" width="1.9608%" height="15" fill="rgb(243,201,19)" fg:x="37" fg:w="1"/><text x="72.7990%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethers_contract::base::BaseContract&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="853" width="1.9608%" height="15" fill="rgb(236,59,4)" fg:x="37" fg:w="1"/><text x="72.7990%" y="863.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::contract::Contract&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="837" width="1.9608%" height="15" fill="rgb(254,179,45)" fg:x="37" fg:w="1"/><text x="72.7990%" y="847.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="821" width="1.9608%" height="15" fill="rgb(226,14,10)" fg:x="37" fg:w="1"/><text x="72.7990%" y="831.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.96%)</title><rect x="72.5490%" y="805" width="1.9608%" height="15" fill="rgb(244,27,41)" fg:x="37" fg:w="1"/><text x="72.7990%" y="815.50">&lt;..</text></g><g><title>core::mem::drop (1 samples, 1.96%)</title><rect x="72.5490%" y="789" width="1.9608%" height="15" fill="rgb(235,35,32)" fg:x="37" fg:w="1"/><text x="72.7990%" y="799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt;&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="773" width="1.9608%" height="15" fill="rgb(218,68,31)" fg:x="37" fg:w="1"/><text x="72.7990%" y="783.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.96%)</title><rect x="72.5490%" y="757" width="1.9608%" height="15" fill="rgb(207,120,37)" fg:x="37" fg:w="1"/><text x="72.7990%" y="767.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1 samples, 1.96%)</title><rect x="72.5490%" y="741" width="1.9608%" height="15" fill="rgb(227,98,0)" fg:x="37" fg:w="1"/><text x="72.7990%" y="751.50">a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1 samples, 1.96%)</title><rect x="72.5490%" y="725" width="1.9608%" height="15" fill="rgb(207,7,3)" fg:x="37" fg:w="1"/><text x="72.7990%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::function::Function&gt;&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="709" width="1.9608%" height="15" fill="rgb(206,98,19)" fg:x="37" fg:w="1"/><text x="72.7990%" y="719.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.96%)</title><rect x="72.5490%" y="693" width="1.9608%" height="15" fill="rgb(217,5,26)" fg:x="37" fg:w="1"/><text x="72.7990%" y="703.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[ethabi::function::Function]&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="677" width="1.9608%" height="15" fill="rgb(235,190,38)" fg:x="37" fg:w="1"/><text x="72.7990%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;ethabi::function::Function&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="661" width="1.9608%" height="15" fill="rgb(247,86,24)" fg:x="37" fg:w="1"/><text x="72.7990%" y="671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ethabi::param::Param&gt;&gt; (1 samples, 1.96%)</title><rect x="72.5490%" y="645" width="1.9608%" height="15" fill="rgb(205,101,16)" fg:x="37" fg:w="1"/><text x="72.7990%" y="655.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="72.5490%" y="629" width="1.9608%" height="15" fill="rgb(246,168,33)" fg:x="37" fg:w="1"/><text x="72.7990%" y="639.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="72.5490%" y="613" width="1.9608%" height="15" fill="rgb(231,114,1)" fg:x="37" fg:w="1"/><text x="72.7990%" y="623.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="72.5490%" y="597" width="1.9608%" height="15" fill="rgb(207,184,53)" fg:x="37" fg:w="1"/><text x="72.7990%" y="607.50">b..</text></g><g><title>colony_rs::get_domain::{{closure}} (13 samples, 25.49%)</title><rect x="50.9804%" y="901" width="25.4902%" height="15" fill="rgb(224,95,51)" fg:x="26" fg:w="13"/><text x="51.2304%" y="911.50">colony_rs::get_domain::{{closure}}</text></g><g><title>ethers_contract::call::FunctionCall&lt;B,M,D&gt;::call::{{closure}} (1 samples, 1.96%)</title><rect x="74.5098%" y="885" width="1.9608%" height="15" fill="rgb(212,188,45)" fg:x="38" fg:w="1"/><text x="74.7598%" y="895.50">e..</text></g><g><title>ethers_contract::base::decode_function_data (1 samples, 1.96%)</title><rect x="74.5098%" y="869" width="1.9608%" height="15" fill="rgb(223,154,38)" fg:x="38" fg:w="1"/><text x="74.7598%" y="879.50">e..</text></g><g><title>ethers_contract::base::decode_function_data_raw (1 samples, 1.96%)</title><rect x="74.5098%" y="853" width="1.9608%" height="15" fill="rgb(251,22,52)" fg:x="38" fg:w="1"/><text x="74.7598%" y="863.50">e..</text></g><g><title>ethabi::function::Function::decode_output (1 samples, 1.96%)</title><rect x="74.5098%" y="837" width="1.9608%" height="15" fill="rgb(229,209,22)" fg:x="38" fg:w="1"/><text x="74.7598%" y="847.50">e..</text></g><g><title>ethabi::decoder::decode (1 samples, 1.96%)</title><rect x="74.5098%" y="821" width="1.9608%" height="15" fill="rgb(234,138,34)" fg:x="38" fg:w="1"/><text x="74.7598%" y="831.50">e..</text></g><g><title>ethabi::decoder::decode_offset (1 samples, 1.96%)</title><rect x="74.5098%" y="805" width="1.9608%" height="15" fill="rgb(212,95,11)" fg:x="38" fg:w="1"/><text x="74.7598%" y="815.50">e..</text></g><g><title>ethabi::decoder::decode_param (1 samples, 1.96%)</title><rect x="74.5098%" y="789" width="1.9608%" height="15" fill="rgb(240,179,47)" fg:x="38" fg:w="1"/><text x="74.7598%" y="799.50">e..</text></g><g><title>ethabi::decoder::decode_param (1 samples, 1.96%)</title><rect x="74.5098%" y="773" width="1.9608%" height="15" fill="rgb(240,163,11)" fg:x="38" fg:w="1"/><text x="74.7598%" y="783.50">e..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 1.96%)</title><rect x="74.5098%" y="757" width="1.9608%" height="15" fill="rgb(236,37,12)" fg:x="38" fg:w="1"/><text x="74.7598%" y="767.50">&lt;..</text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;[u8 (1 samples, 1.96%)</title><rect x="74.5098%" y="741" width="1.9608%" height="15" fill="rgb(232,164,16)" fg:x="38" fg:w="1"/><text x="74.7598%" y="751.50">&lt;..</text></g><g><title> _]&gt;&gt;::from (1 samples, 1.96%)</title><rect x="74.5098%" y="725" width="1.9608%" height="15" fill="rgb(244,205,15)" fg:x="38" fg:w="1"/><text x="74.7598%" y="735.50"> ..</text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8 (1 samples, 1.96%)</title><rect x="74.5098%" y="709" width="1.9608%" height="15" fill="rgb(223,117,47)" fg:x="38" fg:w="1"/><text x="74.7598%" y="719.50">&lt;..</text></g><g><title> _]&gt;&gt;::from (1 samples, 1.96%)</title><rect x="74.5098%" y="693" width="1.9608%" height="15" fill="rgb(244,107,35)" fg:x="38" fg:w="1"/><text x="74.7598%" y="703.50"> ..</text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (1 samples, 1.96%)</title><rect x="74.5098%" y="677" width="1.9608%" height="15" fill="rgb(205,140,8)" fg:x="38" fg:w="1"/><text x="74.7598%" y="687.50">&lt;..</text></g><g><title>primitive_types::U256::from_big_endian (1 samples, 1.96%)</title><rect x="74.5098%" y="661" width="1.9608%" height="15" fill="rgb(228,84,46)" fg:x="38" fg:w="1"/><text x="74.7598%" y="671.50">p..</text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u64 (1 samples, 1.96%)</title><rect x="74.5098%" y="645" width="1.9608%" height="15" fill="rgb(254,188,9)" fg:x="38" fg:w="1"/><text x="74.7598%" y="655.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="74.5098%" y="629" width="1.9608%" height="15" fill="rgb(206,112,54)" fg:x="38" fg:w="1"/><text x="74.7598%" y="639.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="74.5098%" y="613" width="1.9608%" height="15" fill="rgb(216,84,49)" fg:x="38" fg:w="1"/><text x="74.7598%" y="623.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="74.5098%" y="597" width="1.9608%" height="15" fill="rgb(214,194,35)" fg:x="38" fg:w="1"/><text x="74.7598%" y="607.50">b..</text></g><g><title>colony_rs::contracts::colony_network::colony_network::ColonyNetwork&lt;M&gt;::new (1 samples, 1.96%)</title><rect x="76.4706%" y="885" width="1.9608%" height="15" fill="rgb(249,28,3)" fg:x="39" fg:w="1"/><text x="76.7206%" y="895.50">c..</text></g><g><title>ethers_contract::contract::ContractInstance&lt;B,M&gt;::new (1 samples, 1.96%)</title><rect x="76.4706%" y="869" width="1.9608%" height="15" fill="rgb(222,56,52)" fg:x="39" fg:w="1"/><text x="76.7206%" y="879.50">e..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 1.96%)</title><rect x="76.4706%" y="853" width="1.9608%" height="15" fill="rgb(245,217,50)" fg:x="39" fg:w="1"/><text x="76.7206%" y="863.50">&lt;..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from (1 samples, 1.96%)</title><rect x="76.4706%" y="837" width="1.9608%" height="15" fill="rgb(213,201,24)" fg:x="39" fg:w="1"/><text x="76.7206%" y="847.50">&lt;..</text></g><g><title>ethers_contract::base::create_mapping (1 samples, 1.96%)</title><rect x="76.4706%" y="821" width="1.9608%" height="15" fill="rgb(248,116,28)" fg:x="39" fg:w="1"/><text x="76.7206%" y="831.50">e..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.96%)</title><rect x="76.4706%" y="805" width="1.9608%" height="15" fill="rgb(219,72,43)" fg:x="39" fg:w="1"/><text x="76.7206%" y="815.50">c..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 1.96%)</title><rect x="76.4706%" y="789" width="1.9608%" height="15" fill="rgb(209,138,14)" fg:x="39" fg:w="1"/><text x="76.7206%" y="799.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 1.96%)</title><rect x="76.4706%" y="773" width="1.9608%" height="15" fill="rgb(222,18,33)" fg:x="39" fg:w="1"/><text x="76.7206%" y="783.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 1.96%)</title><rect x="76.4706%" y="757" width="1.9608%" height="15" fill="rgb(213,199,7)" fg:x="39" fg:w="1"/><text x="76.7206%" y="767.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 1.96%)</title><rect x="76.4706%" y="741" width="1.9608%" height="15" fill="rgb(250,110,10)" fg:x="39" fg:w="1"/><text x="76.7206%" y="751.50">c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="725" width="1.9608%" height="15" fill="rgb(248,123,6)" fg:x="39" fg:w="1"/><text x="76.7206%" y="735.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="709" width="1.9608%" height="15" fill="rgb(206,91,31)" fg:x="39" fg:w="1"/><text x="76.7206%" y="719.50">&lt;..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (1 samples, 1.96%)</title><rect x="76.4706%" y="693" width="1.9608%" height="15" fill="rgb(211,154,13)" fg:x="39" fg:w="1"/><text x="76.7206%" y="703.50">c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="677" width="1.9608%" height="15" fill="rgb(225,148,7)" fg:x="39" fg:w="1"/><text x="76.7206%" y="687.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="661" width="1.9608%" height="15" fill="rgb(220,160,43)" fg:x="39" fg:w="1"/><text x="76.7206%" y="671.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="645" width="1.9608%" height="15" fill="rgb(213,52,39)" fg:x="39" fg:w="1"/><text x="76.7206%" y="655.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="629" width="1.9608%" height="15" fill="rgb(243,137,7)" fg:x="39" fg:w="1"/><text x="76.7206%" y="639.50">c..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="613" width="1.9608%" height="15" fill="rgb(230,79,13)" fg:x="39" fg:w="1"/><text x="76.7206%" y="623.50">c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="597" width="1.9608%" height="15" fill="rgb(247,105,23)" fg:x="39" fg:w="1"/><text x="76.7206%" y="607.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="581" width="1.9608%" height="15" fill="rgb(223,179,41)" fg:x="39" fg:w="1"/><text x="76.7206%" y="591.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="565" width="1.9608%" height="15" fill="rgb(218,9,34)" fg:x="39" fg:w="1"/><text x="76.7206%" y="575.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 1.96%)</title><rect x="76.4706%" y="549" width="1.9608%" height="15" fill="rgb(222,106,8)" fg:x="39" fg:w="1"/><text x="76.7206%" y="559.50">c..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="533" width="1.9608%" height="15" fill="rgb(211,220,0)" fg:x="39" fg:w="1"/><text x="76.7206%" y="543.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="517" width="1.9608%" height="15" fill="rgb(229,52,16)" fg:x="39" fg:w="1"/><text x="76.7206%" y="527.50">c..</text></g><g><title>ethers_contract::base::create_mapping::{{closure}}::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="501" width="1.9608%" height="15" fill="rgb(212,155,18)" fg:x="39" fg:w="1"/><text x="76.7206%" y="511.50">e..</text></g><g><title>&lt;ethers_contract::base::BaseContract as core::convert::From&lt;ethabi::contract::Contract&gt;&gt;::from::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="485" width="1.9608%" height="15" fill="rgb(242,21,14)" fg:x="39" fg:w="1"/><text x="76.7206%" y="495.50">&lt;..</text></g><g><title>&lt;ethabi::function::Function as ethers_core::abi::FunctionExt&gt;::selector (1 samples, 1.96%)</title><rect x="76.4706%" y="469" width="1.9608%" height="15" fill="rgb(222,19,48)" fg:x="39" fg:w="1"/><text x="76.7206%" y="479.50">&lt;..</text></g><g><title>ethers_core::utils::hash::id (1 samples, 1.96%)</title><rect x="76.4706%" y="453" width="1.9608%" height="15" fill="rgb(232,45,27)" fg:x="39" fg:w="1"/><text x="76.7206%" y="463.50">e..</text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (1 samples, 1.96%)</title><rect x="76.4706%" y="437" width="1.9608%" height="15" fill="rgb(249,103,42)" fg:x="39" fg:w="1"/><text x="76.7206%" y="447.50">&lt;..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (1 samples, 1.96%)</title><rect x="76.4706%" y="421" width="1.9608%" height="15" fill="rgb(246,81,33)" fg:x="39" fg:w="1"/><text x="76.7206%" y="431.50">t..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (1 samples, 1.96%)</title><rect x="76.4706%" y="405" width="1.9608%" height="15" fill="rgb(252,33,42)" fg:x="39" fg:w="1"/><text x="76.7206%" y="415.50">t..</text></g><g><title>tiny_keccak::Buffer::setout (1 samples, 1.96%)</title><rect x="76.4706%" y="389" width="1.9608%" height="15" fill="rgb(209,212,41)" fg:x="39" fg:w="1"/><text x="76.7206%" y="399.50">t..</text></g><g><title>tiny_keccak::Buffer::execute (1 samples, 1.96%)</title><rect x="76.4706%" y="373" width="1.9608%" height="15" fill="rgb(207,154,6)" fg:x="39" fg:w="1"/><text x="76.7206%" y="383.50">t..</text></g><g><title>tiny_keccak::Buffer::setout::{{closure}} (1 samples, 1.96%)</title><rect x="76.4706%" y="357" width="1.9608%" height="15" fill="rgb(223,64,47)" fg:x="39" fg:w="1"/><text x="76.7206%" y="367.50">t..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 1.96%)</title><rect x="76.4706%" y="341" width="1.9608%" height="15" fill="rgb(211,161,38)" fg:x="39" fg:w="1"/><text x="76.7206%" y="351.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="76.4706%" y="325" width="1.9608%" height="15" fill="rgb(219,138,40)" fg:x="39" fg:w="1"/><text x="76.7206%" y="335.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="76.4706%" y="309" width="1.9608%" height="15" fill="rgb(241,228,46)" fg:x="39" fg:w="1"/><text x="76.7206%" y="319.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="76.4706%" y="293" width="1.9608%" height="15" fill="rgb(223,209,38)" fg:x="39" fg:w="1"/><text x="76.7206%" y="303.50">b..</text></g><g><title>futures_channel::oneshot::channel (1 samples, 1.96%)</title><rect x="78.4314%" y="645" width="1.9608%" height="15" fill="rgb(236,164,45)" fg:x="40" fg:w="1"/><text x="78.6814%" y="655.50">f..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 1.96%)</title><rect x="78.4314%" y="629" width="1.9608%" height="15" fill="rgb(231,15,5)" fg:x="40" fg:w="1"/><text x="78.6814%" y="639.50">a..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 1.96%)</title><rect x="78.4314%" y="613" width="1.9608%" height="15" fill="rgb(252,35,15)" fg:x="40" fg:w="1"/><text x="78.6814%" y="623.50">a..</text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 1.96%)</title><rect x="78.4314%" y="597" width="1.9608%" height="15" fill="rgb(248,181,18)" fg:x="40" fg:w="1"/><text x="78.6814%" y="607.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 1.96%)</title><rect x="78.4314%" y="581" width="1.9608%" height="15" fill="rgb(233,39,42)" fg:x="40" fg:w="1"/><text x="78.6814%" y="591.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 1.96%)</title><rect x="78.4314%" y="565" width="1.9608%" height="15" fill="rgb(238,110,33)" fg:x="40" fg:w="1"/><text x="78.6814%" y="575.50">a..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 1.96%)</title><rect x="78.4314%" y="549" width="1.9608%" height="15" fill="rgb(233,195,10)" fg:x="40" fg:w="1"/><text x="78.6814%" y="559.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="78.4314%" y="533" width="1.9608%" height="15" fill="rgb(254,105,3)" fg:x="40" fg:w="1"/><text x="78.6814%" y="543.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="78.4314%" y="517" width="1.9608%" height="15" fill="rgb(221,225,9)" fg:x="40" fg:w="1"/><text x="78.6814%" y="527.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="78.4314%" y="501" width="1.9608%" height="15" fill="rgb(224,227,45)" fg:x="40" fg:w="1"/><text x="78.6814%" y="511.50">b..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnecting&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="80.3922%" y="229" width="1.9608%" height="15" fill="rgb(229,198,43)" fg:x="41" fg:w="1"/><text x="80.6422%" y="239.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="80.3922%" y="213" width="1.9608%" height="15" fill="rgb(206,209,35)" fg:x="41" fg:w="1"/><text x="80.6422%" y="223.50">&lt;..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 1.96%)</title><rect x="80.3922%" y="197" width="1.9608%" height="15" fill="rgb(245,195,53)" fg:x="41" fg:w="1"/><text x="80.6422%" y="207.50">&lt;..</text></g><g><title>hyper::client::connect::http::HttpConnector&lt;R&gt;::call_async::{{closure}} (1 samples, 1.96%)</title><rect x="80.3922%" y="181" width="1.9608%" height="15" fill="rgb(240,92,26)" fg:x="41" fg:w="1"/><text x="80.6422%" y="191.50">h..</text></g><g><title>hyper::client::connect::dns::resolve::{{closure}} (1 samples, 1.96%)</title><rect x="80.3922%" y="165" width="1.9608%" height="15" fill="rgb(207,40,23)" fg:x="41" fg:w="1"/><text x="80.6422%" y="175.50">h..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="80.3922%" y="149" width="1.9608%" height="15" fill="rgb(223,111,35)" fg:x="41" fg:w="1"/><text x="80.6422%" y="159.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="80.3922%" y="133" width="1.9608%" height="15" fill="rgb(229,147,28)" fg:x="41" fg:w="1"/><text x="80.6422%" y="143.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="80.3922%" y="117" width="1.9608%" height="15" fill="rgb(211,29,28)" fg:x="41" fg:w="1"/><text x="80.6422%" y="127.50">&lt;..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (1 samples, 1.96%)</title><rect x="80.3922%" y="101" width="1.9608%" height="15" fill="rgb(228,72,33)" fg:x="41" fg:w="1"/><text x="80.6422%" y="111.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;hyper::client::connect::dns::GaiFuture&gt;,())&gt; (1 samples, 1.96%)</title><rect x="80.3922%" y="85" width="1.9608%" height="15" fill="rgb(205,214,31)" fg:x="41" fg:w="1"/><text x="80.6422%" y="95.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="80.3922%" y="69" width="1.9608%" height="15" fill="rgb(224,111,15)" fg:x="41" fg:w="1"/><text x="80.6422%" y="79.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="80.3922%" y="53" width="1.9608%" height="15" fill="rgb(253,21,26)" fg:x="41" fg:w="1"/><text x="80.6422%" y="63.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="80.3922%" y="37" width="1.9608%" height="15" fill="rgb(245,139,43)" fg:x="41" fg:w="1"/><text x="80.6422%" y="47.50">b..</text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="82.3529%" y="197" width="1.9608%" height="15" fill="rgb(252,170,7)" fg:x="42" fg:w="1"/><text x="82.6029%" y="207.50">&lt;..</text></g><g><title>native_tls::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 1.96%)</title><rect x="82.3529%" y="181" width="1.9608%" height="15" fill="rgb(231,118,14)" fg:x="42" fg:w="1"/><text x="82.6029%" y="191.50">n..</text></g><g><title>native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 1.96%)</title><rect x="82.3529%" y="165" width="1.9608%" height="15" fill="rgb(238,83,0)" fg:x="42" fg:w="1"/><text x="82.6029%" y="175.50">n..</text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (1 samples, 1.96%)</title><rect x="82.3529%" y="149" width="1.9608%" height="15" fill="rgb(221,39,39)" fg:x="42" fg:w="1"/><text x="82.6029%" y="159.50">o..</text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::do_handshake (1 samples, 1.96%)</title><rect x="82.3529%" y="133" width="1.9608%" height="15" fill="rgb(222,119,46)" fg:x="42" fg:w="1"/><text x="82.6029%" y="143.50">o..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="82.3529%" y="117" width="1.9608%" height="15" fill="rgb(222,165,49)" fg:x="42" fg:w="1"/><text x="82.6029%" y="127.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="82.3529%" y="101" width="1.9608%" height="15" fill="rgb(219,113,52)" fg:x="42" fg:w="1"/><text x="82.6029%" y="111.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="82.3529%" y="85" width="1.9608%" height="15" fill="rgb(214,7,15)" fg:x="42" fg:w="1"/><text x="82.6029%" y="95.50">b..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 7.84%)</title><rect x="78.4314%" y="757" width="7.8431%" height="15" fill="rgb(235,32,4)" fg:x="40" fg:w="4"/><text x="78.6814%" y="767.50">&lt;core::pin:..</text></g><g><title>&lt;ethers_providers::rpc::transports::http::Provider as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (4 samples, 7.84%)</title><rect x="78.4314%" y="741" width="7.8431%" height="15" fill="rgb(238,90,54)" fg:x="40" fg:w="4"/><text x="78.6814%" y="751.50">&lt;ethers_pro..</text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (4 samples, 7.84%)</title><rect x="78.4314%" y="725" width="7.8431%" height="15" fill="rgb(213,208,19)" fg:x="40" fg:w="4"/><text x="78.6814%" y="735.50">&lt;reqwest::a..</text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (4 samples, 7.84%)</title><rect x="78.4314%" y="709" width="7.8431%" height="15" fill="rgb(233,156,4)" fg:x="40" fg:w="4"/><text x="78.6814%" y="719.50">&lt;reqwest::a..</text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (4 samples, 7.84%)</title><rect x="78.4314%" y="693" width="7.8431%" height="15" fill="rgb(207,194,5)" fg:x="40" fg:w="4"/><text x="78.6814%" y="703.50">&lt;hyper::cli..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (4 samples, 7.84%)</title><rect x="78.4314%" y="677" width="7.8431%" height="15" fill="rgb(206,111,30)" fg:x="40" fg:w="4"/><text x="78.6814%" y="687.50">hyper::clie..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (4 samples, 7.84%)</title><rect x="78.4314%" y="661" width="7.8431%" height="15" fill="rgb(243,70,54)" fg:x="40" fg:w="4"/><text x="78.6814%" y="671.50">hyper::clie..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (3 samples, 5.88%)</title><rect x="80.3922%" y="645" width="5.8824%" height="15" fill="rgb(242,28,8)" fg:x="41" fg:w="3"/><text x="80.6422%" y="655.50">hyper::..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="629" width="5.8824%" height="15" fill="rgb(219,106,18)" fg:x="41" fg:w="3"/><text x="80.6422%" y="639.50">&lt;future..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (3 samples, 5.88%)</title><rect x="80.3922%" y="613" width="5.8824%" height="15" fill="rgb(244,222,10)" fg:x="41" fg:w="3"/><text x="80.6422%" y="623.50">futures..</text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="597" width="5.8824%" height="15" fill="rgb(236,179,52)" fg:x="41" fg:w="3"/><text x="80.6422%" y="607.50">&lt;hyper:..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="581" width="5.8824%" height="15" fill="rgb(213,23,39)" fg:x="41" fg:w="3"/><text x="80.6422%" y="591.50">&lt;future..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="565" width="5.8824%" height="15" fill="rgb(238,48,10)" fg:x="41" fg:w="3"/><text x="80.6422%" y="575.50">&lt;future..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="549" width="5.8824%" height="15" fill="rgb(251,196,23)" fg:x="41" fg:w="3"/><text x="80.6422%" y="559.50">&lt;future..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="533" width="5.8824%" height="15" fill="rgb(250,152,24)" fg:x="41" fg:w="3"/><text x="80.6422%" y="543.50">&lt;future..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 5.88%)</title><rect x="80.3922%" y="517" width="5.8824%" height="15" fill="rgb(209,150,17)" fg:x="41" fg:w="3"/><text x="80.6422%" y="527.50">&lt;F as f..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="501" width="5.8824%" height="15" fill="rgb(234,202,34)" fg:x="41" fg:w="3"/><text x="80.6422%" y="511.50">&lt;future..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="485" width="5.8824%" height="15" fill="rgb(253,148,53)" fg:x="41" fg:w="3"/><text x="80.6422%" y="495.50">&lt;future..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="469" width="5.8824%" height="15" fill="rgb(218,129,16)" fg:x="41" fg:w="3"/><text x="80.6422%" y="479.50">&lt;future..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="453" width="5.8824%" height="15" fill="rgb(216,85,19)" fg:x="41" fg:w="3"/><text x="80.6422%" y="463.50">&lt;future..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 5.88%)</title><rect x="80.3922%" y="437" width="5.8824%" height="15" fill="rgb(235,228,7)" fg:x="41" fg:w="3"/><text x="80.6422%" y="447.50">&lt;F as f..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="421" width="5.8824%" height="15" fill="rgb(245,175,0)" fg:x="41" fg:w="3"/><text x="80.6422%" y="431.50">&lt;future..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="405" width="5.8824%" height="15" fill="rgb(208,168,36)" fg:x="41" fg:w="3"/><text x="80.6422%" y="415.50">&lt;future..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="389" width="5.8824%" height="15" fill="rgb(246,171,24)" fg:x="41" fg:w="3"/><text x="80.6422%" y="399.50">&lt;future..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="373" width="5.8824%" height="15" fill="rgb(215,142,24)" fg:x="41" fg:w="3"/><text x="80.6422%" y="383.50">&lt;future..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 5.88%)</title><rect x="80.3922%" y="357" width="5.8824%" height="15" fill="rgb(250,187,7)" fg:x="41" fg:w="3"/><text x="80.6422%" y="367.50">&lt;F as f..</text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="341" width="5.8824%" height="15" fill="rgb(228,66,33)" fg:x="41" fg:w="3"/><text x="80.6422%" y="351.50">&lt;hyper:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="325" width="5.8824%" height="15" fill="rgb(234,215,21)" fg:x="41" fg:w="3"/><text x="80.6422%" y="335.50">&lt;core::..</text></g><g><title>reqwest::connect::with_timeout::{{closure}} (3 samples, 5.88%)</title><rect x="80.3922%" y="309" width="5.8824%" height="15" fill="rgb(222,191,20)" fg:x="41" fg:w="3"/><text x="80.6422%" y="319.50">reqwest..</text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (3 samples, 5.88%)</title><rect x="80.3922%" y="293" width="5.8824%" height="15" fill="rgb(245,79,54)" fg:x="41" fg:w="3"/><text x="80.6422%" y="303.50">reqwest..</text></g><g><title>&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="277" width="5.8824%" height="15" fill="rgb(240,10,37)" fg:x="41" fg:w="3"/><text x="80.6422%" y="287.50">&lt;hyper_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 5.88%)</title><rect x="80.3922%" y="261" width="5.8824%" height="15" fill="rgb(214,192,32)" fg:x="41" fg:w="3"/><text x="80.6422%" y="271.50">&lt;core::..</text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (3 samples, 5.88%)</title><rect x="80.3922%" y="245" width="5.8824%" height="15" fill="rgb(209,36,54)" fg:x="41" fg:w="3"/><text x="80.6422%" y="255.50">&lt;hyper_..</text></g><g><title>tokio_native_tls::TlsConnector::connect::{{closure}} (2 samples, 3.92%)</title><rect x="82.3529%" y="229" width="3.9216%" height="15" fill="rgb(220,10,11)" fg:x="42" fg:w="2"/><text x="82.6029%" y="239.50">toki..</text></g><g><title>tokio_native_tls::handshake::{{closure}} (2 samples, 3.92%)</title><rect x="82.3529%" y="213" width="3.9216%" height="15" fill="rgb(221,106,17)" fg:x="42" fg:w="2"/><text x="82.6029%" y="223.50">toki..</text></g><g><title>&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="84.3137%" y="197" width="1.9608%" height="15" fill="rgb(251,142,44)" fg:x="43" fg:w="1"/><text x="84.5637%" y="207.50">&lt;..</text></g><g><title>tokio_native_tls::TlsConnector::connect::{{closure}}::{{closure}} (1 samples, 1.96%)</title><rect x="84.3137%" y="181" width="1.9608%" height="15" fill="rgb(238,13,15)" fg:x="43" fg:w="1"/><text x="84.5637%" y="191.50">t..</text></g><g><title>native_tls::TlsConnector::connect (1 samples, 1.96%)</title><rect x="84.3137%" y="165" width="1.9608%" height="15" fill="rgb(208,107,27)" fg:x="43" fg:w="1"/><text x="84.5637%" y="175.50">n..</text></g><g><title>native_tls::imp::TlsConnector::connect (1 samples, 1.96%)</title><rect x="84.3137%" y="149" width="1.9608%" height="15" fill="rgb(205,136,37)" fg:x="43" fg:w="1"/><text x="84.5637%" y="159.50">n..</text></g><g><title>openssl::ssl::connector::ConnectConfiguration::connect (1 samples, 1.96%)</title><rect x="84.3137%" y="133" width="1.9608%" height="15" fill="rgb(250,205,27)" fg:x="43" fg:w="1"/><text x="84.5637%" y="143.50">o..</text></g><g><title>openssl::ssl::Ssl::connect (1 samples, 1.96%)</title><rect x="84.3137%" y="117" width="1.9608%" height="15" fill="rgb(210,80,43)" fg:x="43" fg:w="1"/><text x="84.5637%" y="127.50">o..</text></g><g><title>openssl::ssl::SslStreamBuilder&lt;S&gt;::connect (1 samples, 1.96%)</title><rect x="84.3137%" y="101" width="1.9608%" height="15" fill="rgb(247,160,36)" fg:x="43" fg:w="1"/><text x="84.5637%" y="111.50">o..</text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::connect (1 samples, 1.96%)</title><rect x="84.3137%" y="85" width="1.9608%" height="15" fill="rgb(234,13,49)" fg:x="43" fg:w="1"/><text x="84.5637%" y="95.50">o..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="84.3137%" y="69" width="1.9608%" height="15" fill="rgb(234,122,0)" fg:x="43" fg:w="1"/><text x="84.5637%" y="79.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="84.3137%" y="53" width="1.9608%" height="15" fill="rgb(207,146,38)" fg:x="43" fg:w="1"/><text x="84.5637%" y="63.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="84.3137%" y="37" width="1.9608%" height="15" fill="rgb(207,177,25)" fg:x="43" fg:w="1"/><text x="84.5637%" y="47.50">b..</text></g><g><title>colony_rs::get_reputation_root_hash::{{closure}} (6 samples, 11.76%)</title><rect x="76.4706%" y="901" width="11.7647%" height="15" fill="rgb(211,178,42)" fg:x="39" fg:w="6"/><text x="76.7206%" y="911.50">colony_rs::get_re..</text></g><g><title>ethers_contract::call::FunctionCall&lt;B,M,D&gt;::call::{{closure}} (5 samples, 9.80%)</title><rect x="78.4314%" y="885" width="9.8039%" height="15" fill="rgb(230,69,54)" fg:x="40" fg:w="5"/><text x="78.6814%" y="895.50">ethers_contrac..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 9.80%)</title><rect x="78.4314%" y="869" width="9.8039%" height="15" fill="rgb(214,135,41)" fg:x="40" fg:w="5"/><text x="78.6814%" y="879.50">&lt;core::pin::Pi..</text></g><g><title>&lt;ethers_providers::rpc::provider::Provider&lt;P&gt; as ethers_providers::middleware::Middleware&gt;::call::{{closure}} (5 samples, 9.80%)</title><rect x="78.4314%" y="853" width="9.8039%" height="15" fill="rgb(237,67,25)" fg:x="40" fg:w="5"/><text x="78.6814%" y="863.50">&lt;ethers_provid..</text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}} (5 samples, 9.80%)</title><rect x="78.4314%" y="837" width="9.8039%" height="15" fill="rgb(222,189,50)" fg:x="40" fg:w="5"/><text x="78.6814%" y="847.50">ethers_provide..</text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 9.80%)</title><rect x="78.4314%" y="821" width="9.8039%" height="15" fill="rgb(245,148,34)" fg:x="40" fg:w="5"/><text x="78.6814%" y="831.50">&lt;tracing_futur..</text></g><g><title>ethers_providers::rpc::provider::Provider&lt;P&gt;::request::{{closure}}::{{closure}} (5 samples, 9.80%)</title><rect x="78.4314%" y="805" width="9.8039%" height="15" fill="rgb(222,29,6)" fg:x="40" fg:w="5"/><text x="78.6814%" y="815.50">ethers_provide..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 9.80%)</title><rect x="78.4314%" y="789" width="9.8039%" height="15" fill="rgb(221,189,43)" fg:x="40" fg:w="5"/><text x="78.6814%" y="799.50">&lt;core::pin::Pi..</text></g><g><title>&lt;ethers_providers::rpc::transports::retry::RetryClient&lt;T&gt; as ethers_providers::rpc::connections::JsonRpcClient&gt;::request::{{closure}} (5 samples, 9.80%)</title><rect x="78.4314%" y="773" width="9.8039%" height="15" fill="rgb(207,36,27)" fg:x="40" fg:w="5"/><text x="78.6814%" y="783.50">&lt;ethers_provid..</text></g><g><title>serde_json::value::to_value (1 samples, 1.96%)</title><rect x="86.2745%" y="757" width="1.9608%" height="15" fill="rgb(217,90,24)" fg:x="44" fg:w="1"/><text x="86.5245%" y="767.50">s..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value (1 samples, 1.96%)</title><rect x="86.2745%" y="741" width="1.9608%" height="15" fill="rgb(224,66,35)" fg:x="44" fg:w="1"/><text x="86.5245%" y="751.50">c..</text></g><g><title> 2]&gt; (1 samples, 1.96%)</title><rect x="86.2745%" y="725" width="1.9608%" height="15" fill="rgb(221,13,50)" fg:x="44" fg:w="1"/><text x="86.5245%" y="735.50"> ..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="86.2745%" y="709" width="1.9608%" height="15" fill="rgb(236,68,49)" fg:x="44" fg:w="1"/><text x="86.5245%" y="719.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="86.2745%" y="693" width="1.9608%" height="15" fill="rgb(229,146,28)" fg:x="44" fg:w="1"/><text x="86.5245%" y="703.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="86.2745%" y="677" width="1.9608%" height="15" fill="rgb(225,31,38)" fg:x="44" fg:w="1"/><text x="86.5245%" y="687.50">b..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="88.2353%" y="677" width="1.9608%" height="15" fill="rgb(250,208,3)" fg:x="45" fg:w="1"/><text x="88.4853%" y="687.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 1.96%)</title><rect x="88.2353%" y="661" width="1.9608%" height="15" fill="rgb(246,54,23)" fg:x="45" fg:w="1"/><text x="88.4853%" y="671.50">&lt;..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="88.2353%" y="645" width="1.9608%" height="15" fill="rgb(243,76,11)" fg:x="45" fg:w="1"/><text x="88.4853%" y="655.50">&lt;..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="88.2353%" y="629" width="1.9608%" height="15" fill="rgb(245,21,50)" fg:x="45" fg:w="1"/><text x="88.4853%" y="639.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Then&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="88.2353%" y="613" width="1.9608%" height="15" fill="rgb(228,9,43)" fg:x="45" fg:w="1"/><text x="88.4853%" y="623.50">&lt;..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="88.2353%" y="597" width="1.9608%" height="15" fill="rgb(208,100,47)" fg:x="45" fg:w="1"/><text x="88.4853%" y="607.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="88.2353%" y="581" width="1.9608%" height="15" fill="rgb(232,26,8)" fg:x="45" fg:w="1"/><text x="88.4853%" y="591.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="88.2353%" y="565" width="1.9608%" height="15" fill="rgb(216,166,38)" fg:x="45" fg:w="1"/><text x="88.4853%" y="575.50">b..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 3.92%)</title><rect x="88.2353%" y="805" width="3.9216%" height="15" fill="rgb(251,202,51)" fg:x="45" fg:w="2"/><text x="88.4853%" y="815.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 3.92%)</title><rect x="88.2353%" y="789" width="3.9216%" height="15" fill="rgb(254,216,34)" fg:x="45" fg:w="2"/><text x="88.4853%" y="799.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 3.92%)</title><rect x="88.2353%" y="773" width="3.9216%" height="15" fill="rgb(251,32,27)" fg:x="45" fg:w="2"/><text x="88.4853%" y="783.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 3.92%)</title><rect x="88.2353%" y="757" width="3.9216%" height="15" fill="rgb(208,127,28)" fg:x="45" fg:w="2"/><text x="88.4853%" y="767.50">&lt;fut..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 3.92%)</title><rect x="88.2353%" y="741" width="3.9216%" height="15" fill="rgb(224,137,22)" fg:x="45" fg:w="2"/><text x="88.4853%" y="751.50">&lt;F a..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 3.92%)</title><rect x="88.2353%" y="725" width="3.9216%" height="15" fill="rgb(254,70,32)" fg:x="45" fg:w="2"/><text x="88.4853%" y="735.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 3.92%)</title><rect x="88.2353%" y="709" width="3.9216%" height="15" fill="rgb(229,75,37)" fg:x="45" fg:w="2"/><text x="88.4853%" y="719.50">&lt;fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 3.92%)</title><rect x="88.2353%" y="693" width="3.9216%" height="15" fill="rgb(252,64,23)" fg:x="45" fg:w="2"/><text x="88.4853%" y="703.50">&lt;fut..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (1 samples, 1.96%)</title><rect x="90.1961%" y="677" width="1.9608%" height="15" fill="rgb(232,162,48)" fg:x="46" fg:w="1"/><text x="90.4461%" y="687.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeOverwriteGuard&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::either::Either&lt;futures_util::future::either::Either&lt;futures_util::future::future::Then&lt;tokio::sync::oneshot::Receiver&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;,hyper::client::conn::SendRequest&lt;reqwest::async_impl::body::ImplStream&gt;::send_request_retryable::{{closure}}&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;&gt;,futures_util::future::either::Either&lt;futures_util::future::future::Then&lt;tokio::sync::oneshot::Receiver&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;,hyper::client::conn::Http2SendRequest&lt;reqwest::async_impl::body::ImplStream&gt;::send_request_retryable::{{closure}}&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;&gt;&gt;&gt;,futures_util::fns::MapErrFn&lt;hyper::client::client::ClientError&lt;reqwest::async_impl::body::ImplStream&gt;::map_with_reused::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 1.96%)</title><rect x="90.1961%" y="661" width="1.9608%" height="15" fill="rgb(246,160,12)" fg:x="46" fg:w="1"/><text x="90.4461%" y="671.50">c..</text></g><g><title>&lt;pin_project_lite::__private::UnsafeOverwriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.96%)</title><rect x="90.1961%" y="645" width="1.9608%" height="15" fill="rgb(247,166,0)" fg:x="46" fg:w="1"/><text x="90.4461%" y="655.50">&lt;..</text></g><g><title>core::ptr::write (1 samples, 1.96%)</title><rect x="90.1961%" y="629" width="1.9608%" height="15" fill="rgb(249,219,21)" fg:x="46" fg:w="1"/><text x="90.4461%" y="639.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="90.1961%" y="613" width="1.9608%" height="15" fill="rgb(205,209,3)" fg:x="46" fg:w="1"/><text x="90.4461%" y="623.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="90.1961%" y="597" width="1.9608%" height="15" fill="rgb(243,44,1)" fg:x="46" fg:w="1"/><text x="90.4461%" y="607.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="90.1961%" y="581" width="1.9608%" height="15" fill="rgb(206,159,16)" fg:x="46" fg:w="1"/><text x="90.4461%" y="591.50">b..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (1 samples, 1.96%)</title><rect x="92.1569%" y="805" width="1.9608%" height="15" fill="rgb(244,77,30)" fg:x="47" fg:w="1"/><text x="92.4069%" y="815.50">h..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="789" width="1.9608%" height="15" fill="rgb(218,69,12)" fg:x="47" fg:w="1"/><text x="92.4069%" y="799.50">&lt;..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 1.96%)</title><rect x="92.1569%" y="773" width="1.9608%" height="15" fill="rgb(212,87,7)" fg:x="47" fg:w="1"/><text x="92.4069%" y="783.50">f..</text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="757" width="1.9608%" height="15" fill="rgb(245,114,25)" fg:x="47" fg:w="1"/><text x="92.4069%" y="767.50">&lt;..</text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="741" width="1.9608%" height="15" fill="rgb(210,61,42)" fg:x="47" fg:w="1"/><text x="92.4069%" y="751.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="725" width="1.9608%" height="15" fill="rgb(211,52,33)" fg:x="47" fg:w="1"/><text x="92.4069%" y="735.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="709" width="1.9608%" height="15" fill="rgb(234,58,33)" fg:x="47" fg:w="1"/><text x="92.4069%" y="719.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="693" width="1.9608%" height="15" fill="rgb(220,115,36)" fg:x="47" fg:w="1"/><text x="92.4069%" y="703.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 1.96%)</title><rect x="92.1569%" y="677" width="1.9608%" height="15" fill="rgb(243,153,54)" fg:x="47" fg:w="1"/><text x="92.4069%" y="687.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="661" width="1.9608%" height="15" fill="rgb(251,47,18)" fg:x="47" fg:w="1"/><text x="92.4069%" y="671.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="645" width="1.9608%" height="15" fill="rgb(242,102,42)" fg:x="47" fg:w="1"/><text x="92.4069%" y="655.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="629" width="1.9608%" height="15" fill="rgb(234,31,38)" fg:x="47" fg:w="1"/><text x="92.4069%" y="639.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="613" width="1.9608%" height="15" fill="rgb(221,117,51)" fg:x="47" fg:w="1"/><text x="92.4069%" y="623.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 1.96%)</title><rect x="92.1569%" y="597" width="1.9608%" height="15" fill="rgb(212,20,18)" fg:x="47" fg:w="1"/><text x="92.4069%" y="607.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="581" width="1.9608%" height="15" fill="rgb(245,133,36)" fg:x="47" fg:w="1"/><text x="92.4069%" y="591.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="565" width="1.9608%" height="15" fill="rgb(212,6,19)" fg:x="47" fg:w="1"/><text x="92.4069%" y="575.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="549" width="1.9608%" height="15" fill="rgb(218,1,36)" fg:x="47" fg:w="1"/><text x="92.4069%" y="559.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="533" width="1.9608%" height="15" fill="rgb(246,84,54)" fg:x="47" fg:w="1"/><text x="92.4069%" y="543.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 1.96%)</title><rect x="92.1569%" y="517" width="1.9608%" height="15" fill="rgb(242,110,6)" fg:x="47" fg:w="1"/><text x="92.4069%" y="527.50">&lt;..</text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="501" width="1.9608%" height="15" fill="rgb(214,47,5)" fg:x="47" fg:w="1"/><text x="92.4069%" y="511.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="485" width="1.9608%" height="15" fill="rgb(218,159,25)" fg:x="47" fg:w="1"/><text x="92.4069%" y="495.50">&lt;..</text></g><g><title>reqwest::connect::with_timeout::{{closure}} (1 samples, 1.96%)</title><rect x="92.1569%" y="469" width="1.9608%" height="15" fill="rgb(215,211,28)" fg:x="47" fg:w="1"/><text x="92.4069%" y="479.50">r..</text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (1 samples, 1.96%)</title><rect x="92.1569%" y="453" width="1.9608%" height="15" fill="rgb(238,59,32)" fg:x="47" fg:w="1"/><text x="92.4069%" y="463.50">r..</text></g><g><title>&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="437" width="1.9608%" height="15" fill="rgb(226,82,3)" fg:x="47" fg:w="1"/><text x="92.4069%" y="447.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="421" width="1.9608%" height="15" fill="rgb(240,164,32)" fg:x="47" fg:w="1"/><text x="92.4069%" y="431.50">&lt;..</text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 1.96%)</title><rect x="92.1569%" y="405" width="1.9608%" height="15" fill="rgb(232,46,7)" fg:x="47" fg:w="1"/><text x="92.4069%" y="415.50">&lt;..</text></g><g><title>tokio_native_tls::TlsConnector::connect::{{closure}} (1 samples, 1.96%)</title><rect x="92.1569%" y="389" width="1.9608%" height="15" fill="rgb(229,129,53)" fg:x="47" fg:w="1"/><text x="92.4069%" y="399.50">t..</text></g><g><title>tokio_native_tls::handshake::{{closure}} (1 samples, 1.96%)</title><rect x="92.1569%" y="373" width="1.9608%" height="15" fill="rgb(234,188,29)" fg:x="47" fg:w="1"/><text x="92.4069%" y="383.50">t..</text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 1.96%)</title><rect x="92.1569%" y="357" width="1.9608%" height="15" fill="rgb(246,141,4)" fg:x="47" fg:w="1"/><text x="92.4069%" y="367.50">&lt;..</text></g><g><title>native_tls::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 1.96%)</title><rect x="92.1569%" y="341" width="1.9608%" height="15" fill="rgb(229,23,39)" fg:x="47" fg:w="1"/><text x="92.4069%" y="351.50">n..</text></g><g><title>native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 1.96%)</title><rect x="92.1569%" y="325" width="1.9608%" height="15" fill="rgb(206,12,3)" fg:x="47" fg:w="1"/><text x="92.4069%" y="335.50">n..</text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (1 samples, 1.96%)</title><rect x="92.1569%" y="309" width="1.9608%" height="15" fill="rgb(252,226,20)" fg:x="47" fg:w="1"/><text x="92.4069%" y="319.50">o..</text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::do_handshake (1 samples, 1.96%)</title><rect x="92.1569%" y="293" width="1.9608%" height="15" fill="rgb(216,123,35)" fg:x="47" fg:w="1"/><text x="92.4069%" y="303.50">o..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="92.1569%" y="277" width="1.9608%" height="15" fill="rgb(212,68,40)" fg:x="47" fg:w="1"/><text x="92.4069%" y="287.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="92.1569%" y="261" width="1.9608%" height="15" fill="rgb(254,125,32)" fg:x="47" fg:w="1"/><text x="92.4069%" y="271.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="92.1569%" y="245" width="1.9608%" height="15" fill="rgb(253,97,22)" fg:x="47" fg:w="1"/><text x="92.4069%" y="255.50">b..</text></g><g><title>colony_rs::get_reputation_in_domain::{{closure}} (23 samples, 45.10%)</title><rect x="50.9804%" y="917" width="45.0980%" height="15" fill="rgb(241,101,14)" fg:x="26" fg:w="23"/><text x="51.2304%" y="927.50">colony_rs::get_reputation_in_domain::{{closure}}</text></g><g><title>reqwest::get::{{closure}} (4 samples, 7.84%)</title><rect x="88.2353%" y="901" width="7.8431%" height="15" fill="rgb(238,103,29)" fg:x="45" fg:w="4"/><text x="88.4853%" y="911.50">reqwest::ge..</text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (4 samples, 7.84%)</title><rect x="88.2353%" y="885" width="7.8431%" height="15" fill="rgb(233,195,47)" fg:x="45" fg:w="4"/><text x="88.4853%" y="895.50">&lt;reqwest::a..</text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (4 samples, 7.84%)</title><rect x="88.2353%" y="869" width="7.8431%" height="15" fill="rgb(246,218,30)" fg:x="45" fg:w="4"/><text x="88.4853%" y="879.50">&lt;reqwest::a..</text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (4 samples, 7.84%)</title><rect x="88.2353%" y="853" width="7.8431%" height="15" fill="rgb(219,145,47)" fg:x="45" fg:w="4"/><text x="88.4853%" y="863.50">&lt;hyper::cli..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (4 samples, 7.84%)</title><rect x="88.2353%" y="837" width="7.8431%" height="15" fill="rgb(243,12,26)" fg:x="45" fg:w="4"/><text x="88.4853%" y="847.50">hyper::clie..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (4 samples, 7.84%)</title><rect x="88.2353%" y="821" width="7.8431%" height="15" fill="rgb(214,87,16)" fg:x="45" fg:w="4"/><text x="88.4853%" y="831.50">hyper::clie..</text></g><g><title>hyper::client::client::origin_form (1 samples, 1.96%)</title><rect x="94.1176%" y="805" width="1.9608%" height="15" fill="rgb(208,99,42)" fg:x="48" fg:w="1"/><text x="94.3676%" y="815.50">h..</text></g><g><title>&lt;http::uri::path::PathAndQuery as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="94.1176%" y="789" width="1.9608%" height="15" fill="rgb(253,99,2)" fg:x="48" fg:w="1"/><text x="94.3676%" y="799.50">&lt;..</text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="94.1176%" y="773" width="1.9608%" height="15" fill="rgb(220,168,23)" fg:x="48" fg:w="1"/><text x="94.3676%" y="783.50">&lt;..</text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1 samples, 1.96%)</title><rect x="94.1176%" y="757" width="1.9608%" height="15" fill="rgb(242,38,24)" fg:x="48" fg:w="1"/><text x="94.3676%" y="767.50">&lt;..</text></g><g><title>bytes::bytes::promotable_even_clone (1 samples, 1.96%)</title><rect x="94.1176%" y="741" width="1.9608%" height="15" fill="rgb(225,182,9)" fg:x="48" fg:w="1"/><text x="94.3676%" y="751.50">b..</text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 1.96%)</title><rect x="94.1176%" y="725" width="1.9608%" height="15" fill="rgb(243,178,37)" fg:x="48" fg:w="1"/><text x="94.3676%" y="735.50">c..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="94.1176%" y="709" width="1.9608%" height="15" fill="rgb(232,139,19)" fg:x="48" fg:w="1"/><text x="94.3676%" y="719.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="94.1176%" y="693" width="1.9608%" height="15" fill="rgb(225,201,24)" fg:x="48" fg:w="1"/><text x="94.3676%" y="703.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="94.1176%" y="677" width="1.9608%" height="15" fill="rgb(221,47,46)" fg:x="48" fg:w="1"/><text x="94.3676%" y="687.50">b..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (30 samples, 58.82%)</title><rect x="39.2157%" y="1237" width="58.8235%" height="15" fill="rgb(249,23,13)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1247.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::coop::budget (30 samples, 58.82%)</title><rect x="39.2157%" y="1221" width="58.8235%" height="15" fill="rgb(219,9,5)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1231.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (30 samples, 58.82%)</title><rect x="39.2157%" y="1205" width="58.8235%" height="15" fill="rgb(254,171,16)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1215.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (30 samples, 58.82%)</title><rect x="39.2157%" y="1189" width="58.8235%" height="15" fill="rgb(230,171,20)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1199.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (30 samples, 58.82%)</title><rect x="39.2157%" y="1173" width="58.8235%" height="15" fill="rgb(210,71,41)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1183.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (30 samples, 58.82%)</title><rect x="39.2157%" y="1157" width="58.8235%" height="15" fill="rgb(206,173,20)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1167.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (30 samples, 58.82%)</title><rect x="39.2157%" y="1141" width="58.8235%" height="15" fill="rgb(233,88,34)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1151.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30 samples, 58.82%)</title><rect x="39.2157%" y="1125" width="58.8235%" height="15" fill="rgb(223,209,46)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1135.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (30 samples, 58.82%)</title><rect x="39.2157%" y="1109" width="58.8235%" height="15" fill="rgb(250,43,18)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1119.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (30 samples, 58.82%)</title><rect x="39.2157%" y="1093" width="58.8235%" height="15" fill="rgb(208,13,10)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1103.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (30 samples, 58.82%)</title><rect x="39.2157%" y="1077" width="58.8235%" height="15" fill="rgb(212,200,36)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (30 samples, 58.82%)</title><rect x="39.2157%" y="1061" width="58.8235%" height="15" fill="rgb(225,90,30)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1071.50">std::panicking::try</text></g><g><title>__rust_try (30 samples, 58.82%)</title><rect x="39.2157%" y="1045" width="58.8235%" height="15" fill="rgb(236,182,39)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1055.50">__rust_try</text></g><g><title>std::panicking::try::do_call (30 samples, 58.82%)</title><rect x="39.2157%" y="1029" width="58.8235%" height="15" fill="rgb(212,144,35)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 58.82%)</title><rect x="39.2157%" y="1013" width="58.8235%" height="15" fill="rgb(228,63,44)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1023.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (30 samples, 58.82%)</title><rect x="39.2157%" y="997" width="58.8235%" height="15" fill="rgb(228,109,6)" fg:x="20" fg:w="30"/><text x="39.4657%" y="1007.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (30 samples, 58.82%)</title><rect x="39.2157%" y="981" width="58.8235%" height="15" fill="rgb(238,117,24)" fg:x="20" fg:w="30"/><text x="39.4657%" y="991.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 58.82%)</title><rect x="39.2157%" y="965" width="58.8235%" height="15" fill="rgb(242,26,26)" fg:x="20" fg:w="30"/><text x="39.4657%" y="975.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (30 samples, 58.82%)</title><rect x="39.2157%" y="949" width="58.8235%" height="15" fill="rgb(221,92,48)" fg:x="20" fg:w="30"/><text x="39.4657%" y="959.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>discord_gating_bot::controller::check_reputation::{{closure}}::{{closure}} (24 samples, 47.06%)</title><rect x="50.9804%" y="933" width="47.0588%" height="15" fill="rgb(209,209,32)" fg:x="26" fg:w="24"/><text x="51.2304%" y="943.50">discord_gating_bot::controller::check_reputation::{{closure}}::{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;colony_rs::get_reputation_in_domain::{{closure}}&gt; (1 samples, 1.96%)</title><rect x="96.0784%" y="917" width="1.9608%" height="15" fill="rgb(221,70,22)" fg:x="49" fg:w="1"/><text x="96.3284%" y="927.50">c..</text></g><g><title>__rust_probestack (1 samples, 1.96%)</title><rect x="96.0784%" y="901" width="1.9608%" height="15" fill="rgb(248,145,5)" fg:x="49" fg:w="1"/><text x="96.3284%" y="911.50">_..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="96.0784%" y="885" width="1.9608%" height="15" fill="rgb(226,116,26)" fg:x="49" fg:w="1"/><text x="96.3284%" y="895.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="96.0784%" y="869" width="1.9608%" height="15" fill="rgb(244,5,17)" fg:x="49" fg:w="1"/><text x="96.3284%" y="879.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="96.0784%" y="853" width="1.9608%" height="15" fill="rgb(252,159,33)" fg:x="49" fg:w="1"/><text x="96.3284%" y="863.50">b..</text></g><g><title>all (51 samples, 100%)</title><rect x="0.0000%" y="1845" width="100.0000%" height="15" fill="rgb(206,71,0)" fg:x="0" fg:w="51"/><text x="0.2500%" y="1855.50"></text></g><g><title>tokio-runtime-w (34 samples, 66.67%)</title><rect x="33.3333%" y="1829" width="66.6667%" height="15" fill="rgb(233,118,54)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1839.50">tokio-runtime-w</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (34 samples, 66.67%)</title><rect x="33.3333%" y="1813" width="66.6667%" height="15" fill="rgb(234,83,48)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1823.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34 samples, 66.67%)</title><rect x="33.3333%" y="1797" width="66.6667%" height="15" fill="rgb(228,3,54)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1807.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34 samples, 66.67%)</title><rect x="33.3333%" y="1781" width="66.6667%" height="15" fill="rgb(226,155,13)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1791.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1765" width="66.6667%" height="15" fill="rgb(241,28,37)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1775.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1749" width="66.6667%" height="15" fill="rgb(233,93,10)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1759.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (34 samples, 66.67%)</title><rect x="33.3333%" y="1733" width="66.6667%" height="15" fill="rgb(225,113,19)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1743.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (34 samples, 66.67%)</title><rect x="33.3333%" y="1717" width="66.6667%" height="15" fill="rgb(241,2,18)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1727.50">std::panicking::try</text></g><g><title>__rust_try (34 samples, 66.67%)</title><rect x="33.3333%" y="1701" width="66.6667%" height="15" fill="rgb(228,207,21)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1711.50">__rust_try</text></g><g><title>std::panicking::try::do_call (34 samples, 66.67%)</title><rect x="33.3333%" y="1685" width="66.6667%" height="15" fill="rgb(213,211,35)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1695.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 66.67%)</title><rect x="33.3333%" y="1669" width="66.6667%" height="15" fill="rgb(209,83,10)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1679.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1653" width="66.6667%" height="15" fill="rgb(209,164,1)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1663.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 66.67%)</title><rect x="33.3333%" y="1637" width="66.6667%" height="15" fill="rgb(213,184,43)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1647.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1621" width="66.6667%" height="15" fill="rgb(231,61,34)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1631.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (34 samples, 66.67%)</title><rect x="33.3333%" y="1605" width="66.6667%" height="15" fill="rgb(235,75,3)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1615.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (34 samples, 66.67%)</title><rect x="33.3333%" y="1589" width="66.6667%" height="15" fill="rgb(220,106,47)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1599.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (34 samples, 66.67%)</title><rect x="33.3333%" y="1573" width="66.6667%" height="15" fill="rgb(210,196,33)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1583.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (34 samples, 66.67%)</title><rect x="33.3333%" y="1557" width="66.6667%" height="15" fill="rgb(229,154,42)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1567.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (34 samples, 66.67%)</title><rect x="33.3333%" y="1541" width="66.6667%" height="15" fill="rgb(228,114,26)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1551.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (34 samples, 66.67%)</title><rect x="33.3333%" y="1525" width="66.6667%" height="15" fill="rgb(208,144,1)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1535.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (34 samples, 66.67%)</title><rect x="33.3333%" y="1509" width="66.6667%" height="15" fill="rgb(239,112,37)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1519.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (34 samples, 66.67%)</title><rect x="33.3333%" y="1493" width="66.6667%" height="15" fill="rgb(210,96,50)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1503.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (34 samples, 66.67%)</title><rect x="33.3333%" y="1477" width="66.6667%" height="15" fill="rgb(222,178,2)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1487.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (34 samples, 66.67%)</title><rect x="33.3333%" y="1461" width="66.6667%" height="15" fill="rgb(226,74,18)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1471.50">std::panicking::try</text></g><g><title>__rust_try (34 samples, 66.67%)</title><rect x="33.3333%" y="1445" width="66.6667%" height="15" fill="rgb(225,67,54)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1455.50">__rust_try</text></g><g><title>std::panicking::try::do_call (34 samples, 66.67%)</title><rect x="33.3333%" y="1429" width="66.6667%" height="15" fill="rgb(251,92,32)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1439.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 66.67%)</title><rect x="33.3333%" y="1413" width="66.6667%" height="15" fill="rgb(228,149,22)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1423.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1397" width="66.6667%" height="15" fill="rgb(243,54,13)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1407.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (34 samples, 66.67%)</title><rect x="33.3333%" y="1381" width="66.6667%" height="15" fill="rgb(243,180,28)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1391.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (34 samples, 66.67%)</title><rect x="33.3333%" y="1365" width="66.6667%" height="15" fill="rgb(208,167,24)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1375.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1349" width="66.6667%" height="15" fill="rgb(245,73,45)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1359.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 66.67%)</title><rect x="33.3333%" y="1333" width="66.6667%" height="15" fill="rgb(237,203,48)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1343.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1317" width="66.6667%" height="15" fill="rgb(211,197,16)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (34 samples, 66.67%)</title><rect x="33.3333%" y="1301" width="66.6667%" height="15" fill="rgb(243,99,51)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (34 samples, 66.67%)</title><rect x="33.3333%" y="1285" width="66.6667%" height="15" fill="rgb(215,123,29)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1295.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (34 samples, 66.67%)</title><rect x="33.3333%" y="1269" width="66.6667%" height="15" fill="rgb(239,186,37)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (34 samples, 66.67%)</title><rect x="33.3333%" y="1253" width="66.6667%" height="15" fill="rgb(252,136,39)" fg:x="17" fg:w="34"/><text x="33.5833%" y="1263.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1 samples, 1.96%)</title><rect x="98.0392%" y="1237" width="1.9608%" height="15" fill="rgb(223,213,32)" fg:x="50" fg:w="1"/><text x="98.2892%" y="1247.50">t..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (1 samples, 1.96%)</title><rect x="98.0392%" y="1221" width="1.9608%" height="15" fill="rgb(233,115,5)" fg:x="50" fg:w="1"/><text x="98.2892%" y="1231.50">t..</text></g><g><title>tokio::util::rand::FastRand::fastrand (1 samples, 1.96%)</title><rect x="98.0392%" y="1205" width="1.9608%" height="15" fill="rgb(207,226,44)" fg:x="50" fg:w="1"/><text x="98.2892%" y="1215.50">t..</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 1.96%)</title><rect x="98.0392%" y="1189" width="1.9608%" height="15" fill="rgb(208,126,0)" fg:x="50" fg:w="1"/><text x="98.2892%" y="1199.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.96%)</title><rect x="98.0392%" y="1173" width="1.9608%" height="15" fill="rgb(244,66,21)" fg:x="50" fg:w="1"/><text x="98.2892%" y="1183.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.96%)</title><rect x="98.0392%" y="1157" width="1.9608%" height="15" fill="rgb(222,97,12)" fg:x="50" fg:w="1"/><text x="98.2892%" y="1167.50">b..</text></g></svg></svg>