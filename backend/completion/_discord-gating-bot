#compdef discord-gating-bot

autoload -U is-at-least

_discord-gating-bot() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-c+[Sets a custom config file]:FILE:_files' \
'--config-file=[Sets a custom config file]:FILE:_files' \
'-t+[The discord bot token]:TOKEN: ' \
'--token=[The discord bot token]:TOKEN: ' \
'-i+[The discor bot invitation url]:INVITE_URL: ' \
'--invite-url=[The discor bot invitation url]:INVITE_URL: ' \
'-h+[The address to listen on]:HOST: ' \
'--host=[The address to listen on]:HOST: ' \
'-u+[The base url under which the server is reachable]:URL: ' \
'--url=[The base url under which the server is reachable]:URL: ' \
'-p+[The port to listen on]:PORT: ' \
'--port=[The port to listen on]:PORT: ' \
'-d+[The path where the persistent data is stored]:DIRECTORY: ' \
'--directory=[The path where the persistent data is stored]:DIRECTORY: ' \
'-s+[How to store data, on disk or in memory]:STORAGE_TYPE: ' \
'--storage-type=[How to store data, on disk or in memory]:STORAGE_TYPE: ' \
'-k+[The encryption_key used to encrypt the stored data]:KEY: ' \
'--key=[The encryption_key used to encrypt the stored data]:KEY: ' \
'--help[Print help information]' \
'-V[Print version information]' \
'--version[Print version information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot_commands" \
"*::: :->discord-gating-bot" \
&& ret=0
    case $state in
    (discord-gating-bot)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-command-$line[1]:"
        case $line[1] in
            (config)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-config-command-$line[1]:"
        case $line[1] in
            (show)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(template)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(storage)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__storage_commands" \
"*::: :->storage" \
&& ret=0

    case $state in
    (storage)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-storage-command-$line[1]:"
        case $line[1] in
            (generate)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(guild)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__storage__guild_commands" \
"*::: :->guild" \
&& ret=0

    case $state in
    (guild)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-storage-guild-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'::start -- Starting index of the listed entries:( )' \
'::end -- End index of the listed entries:( )' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':guild-id -- The discord user id:( )' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(user)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__storage__user_commands" \
"*::: :->user" \
&& ret=0

    case $state in
    (user)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-storage-user-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'::start -- Starting index of the listed entries:( )' \
'::end -- End index of the listed entries:( )' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':user-id -- The discord user id:( )' \
':wallet-address -- The etherum wallet address:( )' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':user-id -- The discord user id:( )' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(gate)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__storage__gate_commands" \
"*::: :->gate" \
&& ret=0

    case $state in
    (gate)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-storage-gate-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-g+[The discord guild(server) id]:GUILD: ' \
'--guild=[The discord guild(server) id]:GUILD: ' \
'(-g --guild)-a[List gates in all guilds]' \
'(-g --guild)--all-guilds[List gates in all guilds]' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'::start -- Starting index of the listed entries:( )' \
'::end -- End index of the listed entries:( )' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':guild-id -- The guild id:( )' \
':colony-address -- The colony address:( )' \
':domain-id -- The domain id:( )' \
':reputation -- The percentage of reputation needed to get the role:( )' \
':role-id -- The discord role id:( )' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':guild-id -- The guild id:( )' \
':colony-address -- The colony address:( )' \
':domain-id -- The domain:( )' \
':reputation -- The percentage of reputation needed to get the role:( )' \
':role-id -- The discord role id:( )' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(discord)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__discord_commands" \
"*::: :->discord" \
&& ret=0

    case $state in
    (discord)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-discord-command-$line[1]:"
        case $line[1] in
            (register)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__discord__register_commands" \
"*::: :->register" \
&& ret=0

    case $state in
    (register)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-discord-register-command-$line[1]:"
        case $line[1] in
            (global)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(guild)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':guild-id -- The guild id:( )' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(delete)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__discord__delete_commands" \
"*::: :->delete" \
&& ret=0

    case $state in
    (delete)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-discord-delete-command-$line[1]:"
        case $line[1] in
            (global)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(guild)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':guild-id -- The guild id:( )' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_discord-gating-bot_commands] )) ||
_discord-gating-bot_commands() {
    local commands; commands=(
'config:Print the configuration and get a template file' \
'storage:Interact with the presistent storage and encryption' \
'discord:Interact with discord directly, e.g. register slash commands' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__gate__add_commands] )) ||
_discord-gating-bot__storage__gate__add_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage gate add commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__user__add_commands] )) ||
_discord-gating-bot__storage__user__add_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage user add commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config_commands] )) ||
_discord-gating-bot__config_commands() {
    local commands; commands=(
'show:Print the configuration sources and merged config' \
'template:Prints an example configuration template' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot config commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__delete_commands] )) ||
_discord-gating-bot__discord__delete_commands() {
    local commands; commands=(
'global:Register the global slash commands' \
'guild:Register the slash commands for a specific guild' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot discord delete commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord_commands] )) ||
_discord-gating-bot__discord_commands() {
    local commands; commands=(
'register:Register the global slash commands' \
'delete:Register the slash commands for a specific guild' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot discord commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__gate_commands] )) ||
_discord-gating-bot__storage__gate_commands() {
    local commands; commands=(
'list:List all gates' \
'add:Add a new gate' \
'remove:Remove a gate' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot storage gate commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__generate_commands] )) ||
_discord-gating-bot__storage__generate_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage generate commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__delete__global_commands] )) ||
_discord-gating-bot__discord__delete__global_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord delete global commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__register__global_commands] )) ||
_discord-gating-bot__discord__register__global_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord register global commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__delete__guild_commands] )) ||
_discord-gating-bot__discord__delete__guild_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord delete guild commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__register__guild_commands] )) ||
_discord-gating-bot__discord__register__guild_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord register guild commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__guild_commands] )) ||
_discord-gating-bot__storage__guild_commands() {
    local commands; commands=(
'list:List all guilds' \
'remove:Remove a guild' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot storage guild commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config__help_commands] )) ||
_discord-gating-bot__config__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot config help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__delete__help_commands] )) ||
_discord-gating-bot__discord__delete__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord delete help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__help_commands] )) ||
_discord-gating-bot__discord__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__register__help_commands] )) ||
_discord-gating-bot__discord__register__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord register help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__help_commands] )) ||
_discord-gating-bot__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__gate__help_commands] )) ||
_discord-gating-bot__storage__gate__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage gate help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__guild__help_commands] )) ||
_discord-gating-bot__storage__guild__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage guild help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__help_commands] )) ||
_discord-gating-bot__storage__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__user__help_commands] )) ||
_discord-gating-bot__storage__user__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage user help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__gate__list_commands] )) ||
_discord-gating-bot__storage__gate__list_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage gate list commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__guild__list_commands] )) ||
_discord-gating-bot__storage__guild__list_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage guild list commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__user__list_commands] )) ||
_discord-gating-bot__storage__user__list_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage user list commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__register_commands] )) ||
_discord-gating-bot__discord__register_commands() {
    local commands; commands=(
'global:Register the global slash commands' \
'guild:Register the slash commands for a specific guild' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot discord register commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__gate__remove_commands] )) ||
_discord-gating-bot__storage__gate__remove_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage gate remove commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__guild__remove_commands] )) ||
_discord-gating-bot__storage__guild__remove_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage guild remove commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__user__remove_commands] )) ||
_discord-gating-bot__storage__user__remove_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage user remove commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config__show_commands] )) ||
_discord-gating-bot__config__show_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot config show commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage_commands] )) ||
_discord-gating-bot__storage_commands() {
    local commands; commands=(
'generate:Generates a new key than can be used for encryption at rest' \
'guild:List or delete discord guilds in the db' \
'user:List, add or delete discord users in the db' \
'gate:List, add or delete discord role gates in the db' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot storage commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config__template_commands] )) ||
_discord-gating-bot__config__template_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot config template commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__user_commands] )) ||
_discord-gating-bot__storage__user_commands() {
    local commands; commands=(
'list:List all users' \
'add:Add a new user' \
'remove:Remove a user' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot storage user commands' commands "$@"
}

_discord-gating-bot "$@"
