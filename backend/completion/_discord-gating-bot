#compdef discord-gating-bot

autoload -U is-at-least

_discord-gating-bot() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-c+[Sets a custom config file]:FILE:_files' \
'--config-file=[Sets a custom config file]:FILE:_files' \
'-t+[The discord bot token]:TOKEN: ' \
'--token=[The discord bot token]:TOKEN: ' \
'-h+[The address to listen on]:HOST: ' \
'--host=[The address to listen on]:HOST: ' \
'-u+[The base url under which the server is reachable]:URL: ' \
'--url=[The base url under which the server is reachable]:URL: ' \
'-p+[The port to listen on]:PORT: ' \
'--port=[The port to listen on]:PORT: ' \
'-d+[The path where the persistent data is stored]:DIRECTORY: ' \
'--directory=[The path where the persistent data is stored]:DIRECTORY: ' \
'-s+[How to store data, on disk or in memory]:STORAGE_TYPE: ' \
'--storage-type=[How to store data, on disk or in memory]:STORAGE_TYPE: ' \
'-k+[The encryption_key used to encrypt the stored data]:KEY: ' \
'--key=[The encryption_key used to encrypt the stored data]:KEY: ' \
'--help[Print help information]' \
'-V[Print version information]' \
'--version[Print version information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot_commands" \
"*::: :->discord-gating-bot" \
&& ret=0
    case $state in
    (discord-gating-bot)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-command-$line[1]:"
        case $line[1] in
            (config)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-config-command-$line[1]:"
        case $line[1] in
            (show)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(template)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(storage)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__storage_commands" \
"*::: :->storage" \
&& ret=0

    case $state in
    (storage)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-storage-command-$line[1]:"
        case $line[1] in
            (generate)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(discord)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
":: :_discord-gating-bot__discord_commands" \
"*::: :->discord" \
&& ret=0

    case $state in
    (discord)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:discord-gating-bot-discord-command-$line[1]:"
        case $line[1] in
            (global)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
&& ret=0
;;
(server)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
':guild-id -- The guild id:( )' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" \
'*-v[Define the verbosity of the application, repeat for more verbosity]' \
'*--verbose[Define the verbosity of the application, repeat for more verbosity]' \
'(-v --verbose)-q[Supress all logging]' \
'(-v --verbose)--quiet[Supress all logging]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_discord-gating-bot_commands] )) ||
_discord-gating-bot_commands() {
    local commands; commands=(
'config:Print the configuration and get a template file' \
'storage:Interact with the presistent storage and encryption' \
'discord:Interact with discord directly, e.g. register slash commands' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config_commands] )) ||
_discord-gating-bot__config_commands() {
    local commands; commands=(
'show:Print the configuration sources and merged config' \
'template:Prints an example configuration template' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot config commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord_commands] )) ||
_discord-gating-bot__discord_commands() {
    local commands; commands=(
'global:Register the global slash commands' \
'server:Register the slash commands for a specific guild' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot discord commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__generate_commands] )) ||
_discord-gating-bot__storage__generate_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage generate commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__global_commands] )) ||
_discord-gating-bot__discord__global_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord global commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config__help_commands] )) ||
_discord-gating-bot__config__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot config help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__help_commands] )) ||
_discord-gating-bot__discord__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__help_commands] )) ||
_discord-gating-bot__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage__help_commands] )) ||
_discord-gating-bot__storage__help_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot storage help commands' commands "$@"
}
(( $+functions[_discord-gating-bot__discord__server_commands] )) ||
_discord-gating-bot__discord__server_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot discord server commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config__show_commands] )) ||
_discord-gating-bot__config__show_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot config show commands' commands "$@"
}
(( $+functions[_discord-gating-bot__storage_commands] )) ||
_discord-gating-bot__storage_commands() {
    local commands; commands=(
'generate:Generates a new key than can be used for encryption at rest' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'discord-gating-bot storage commands' commands "$@"
}
(( $+functions[_discord-gating-bot__config__template_commands] )) ||
_discord-gating-bot__config__template_commands() {
    local commands; commands=()
    _describe -t commands 'discord-gating-bot config template commands' commands "$@"
}

_discord-gating-bot "$@"
